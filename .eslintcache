[{"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\index.tsx":"1","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\index.ts":"2","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Header\\Header.tsx":"3","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Day\\Day.tsx":"4","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\RangeRadioBtn.tsx":"5","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\RangeBtn\\RangeBtn.tsx":"6","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\NextDays.tsx":"7","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\TimeRuler\\TimeRuler.tsx":"8","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\CreateEditPopupView.tsx":"9","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\MonthDropdown.tsx":"10","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\PreviewPopup.tsx":"11","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\YearDropdown.tsx":"12","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\grid.ts":"13","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\buildCalendar.ts":"14","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\hooks.tsx":"15","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\range.ts":"16","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\services\\firebase\\config.ts":"17","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\EventList.tsx":"18","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\DeletePopup.tsx":"19","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\Tooltip.tsx":"20","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\popups.ts":"21","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\datePicker.ts":"22","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\buildMonthsList.ts":"23","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\isDayHasEvents.ts":"24","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\index.ts":"25","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\popups.ts":"26","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\services\\SchedulerService.ts":"27","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DayGrid\\RowList.tsx":"28","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DayGrid\\DayGrid.tsx":"29","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Main\\Main.tsx":"30","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\Loading.tsx":"31","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\Select.tsx":"32","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\ScheduleRange.tsx":"33","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\store.ts":"34","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\Range.tsx":"35","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\EditPopup.tsx":"36","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\GridNav\\GridNav.tsx":"37","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\Calendar.tsx":"38","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\ErrorIndicator.tsx":"39","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\datePicker.ts":"40","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\index.ts":"41","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\DayList.tsx":"42","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\CreatePopup.tsx":"43","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\range.ts":"44","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\buildYearsList.ts":"45","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\grid.ts":"46","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\buildRange.ts":"47","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\action-types.ts":"48"},{"size":330,"mtime":1611223636721,"results":"49","hashOfConfig":"50"},{"size":109,"mtime":1610549234544,"results":"51","hashOfConfig":"50"},{"size":2061,"mtime":1611506935537,"results":"52","hashOfConfig":"50"},{"size":368,"mtime":1610449634822,"results":"53","hashOfConfig":"50"},{"size":2540,"mtime":1611512931268,"results":"54","hashOfConfig":"50"},{"size":793,"mtime":1610561280495,"results":"55","hashOfConfig":"50"},{"size":2376,"mtime":1611756265855,"results":"56","hashOfConfig":"50"},{"size":808,"mtime":1610583497072,"results":"57","hashOfConfig":"50"},{"size":2504,"mtime":1611165987062,"results":"58","hashOfConfig":"50"},{"size":1311,"mtime":1611676620739,"results":"59","hashOfConfig":"50"},{"size":2501,"mtime":1611150905995,"results":"60","hashOfConfig":"50"},{"size":3116,"mtime":1611676746886,"results":"61","hashOfConfig":"50"},{"size":1639,"mtime":1611174771160,"results":"62","hashOfConfig":"50"},{"size":519,"mtime":1611312628661,"results":"63","hashOfConfig":"50"},{"size":1940,"mtime":1611501184861,"results":"64","hashOfConfig":"50"},{"size":1652,"mtime":1611744064535,"results":"65","hashOfConfig":"50"},{"size":582,"mtime":1610722143380,"results":"66","hashOfConfig":"50"},{"size":1419,"mtime":1611318602799,"results":"67","hashOfConfig":"50"},{"size":1402,"mtime":1611145756659,"results":"68","hashOfConfig":"50"},{"size":1588,"mtime":1611749262224,"results":"69","hashOfConfig":"50"},{"size":1377,"mtime":1611151452872,"results":"70","hashOfConfig":"50"},{"size":675,"mtime":1611142427689,"results":"71","hashOfConfig":"50"},{"size":462,"mtime":1610579318799,"results":"72","hashOfConfig":"50"},{"size":457,"mtime":1611313006319,"results":"73","hashOfConfig":"50"},{"size":107,"mtime":1610549572742,"results":"74","hashOfConfig":"50"},{"size":1001,"mtime":1611150401301,"results":"75","hashOfConfig":"50"},{"size":1674,"mtime":1611223488534,"results":"76","hashOfConfig":"50"},{"size":2328,"mtime":1611655009984,"results":"77","hashOfConfig":"50"},{"size":887,"mtime":1611651575959,"results":"78","hashOfConfig":"50"},{"size":1077,"mtime":1611651651837,"results":"79","hashOfConfig":"50"},{"size":923,"mtime":1611668987948,"results":"80","hashOfConfig":"50"},{"size":1885,"mtime":1611745174908,"results":"81","hashOfConfig":"50"},{"size":713,"mtime":1611690115705,"results":"82","hashOfConfig":"50"},{"size":611,"mtime":1610982428326,"results":"83","hashOfConfig":"50"},{"size":3611,"mtime":1611749344161,"results":"84","hashOfConfig":"50"},{"size":1488,"mtime":1611506964243,"results":"85","hashOfConfig":"50"},{"size":3144,"mtime":1611142077824,"results":"86","hashOfConfig":"50"},{"size":2470,"mtime":1611746886265,"results":"87","hashOfConfig":"50"},{"size":127,"mtime":1610983015923,"results":"88","hashOfConfig":"50"},{"size":394,"mtime":1611141736200,"results":"89","hashOfConfig":"50"},{"size":1894,"mtime":1611690027899,"results":"90","hashOfConfig":"50"},{"size":1929,"mtime":1611507287883,"results":"91","hashOfConfig":"50"},{"size":1309,"mtime":1611506956027,"results":"92","hashOfConfig":"50"},{"size":2076,"mtime":1611744013665,"results":"93","hashOfConfig":"50"},{"size":450,"mtime":1610580115348,"results":"94","hashOfConfig":"50"},{"size":2492,"mtime":1611175879651,"results":"95","hashOfConfig":"50"},{"size":1899,"mtime":1611756285264,"results":"96","hashOfConfig":"50"},{"size":1337,"mtime":1611743966927,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"1decv2q",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"100"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"100"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"108"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"100"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\index.tsx",[],["201","202"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\index.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Header\\Header.tsx",[],["203","204"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Day\\Day.tsx",[],["205","206"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\RangeRadioBtn.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\RangeBtn\\RangeBtn.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\NextDays.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\TimeRuler\\TimeRuler.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\CreateEditPopupView.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\MonthDropdown.tsx",["207"],"import React, { useState, useEffect } from 'react';\r\nimport { buildMonthsList } from './buildMonthsList';\r\n\r\ninterface MonthDropdownProps {\r\n  date: moment.Moment;\r\n  onChangeMonth: (month: moment.Moment) => void;\r\n  onSelectedMonthClick: () => void;\r\n}\r\n\r\nconst MonthDropdown: React.FC<MonthDropdownProps> = ({\r\n  date,\r\n  onChangeMonth,\r\n  onSelectedMonthClick,\r\n}) => {\r\n  const [activeMonth, setActiveMonth] = useState<moment.Moment>(date);\r\n  const [monthsList, setmonthsList] = useState<moment.Moment[]>([]);\r\n\r\n  useEffect(() => {\r\n    setmonthsList(buildMonthsList(date));\r\n  }, []);\r\n\r\n  const onMonthClick = (month: moment.Moment) => () => {\r\n    setActiveMonth(month);\r\n    onChangeMonth(month);\r\n    onSelectedMonthClick();\r\n  };\r\n\r\n  return (\r\n    <ul className='datepicker__month-dropdown'>\r\n      {monthsList.map((item: moment.Moment, idx: number) => {\r\n        const className = item.isSame(activeMonth, 'month')\r\n          ? 'datepicker__month-name datepicker__month-name_selected'\r\n          : 'datepicker__month-name';\r\n\r\n        return (\r\n          <li onClick={onMonthClick(item)} key={idx} className={className}>\r\n            {item.format('MMMM')}\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default React.memo(MonthDropdown);\r\n// export default MonthDropdown;\r\n","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\PreviewPopup.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\YearDropdown.tsx",["208"],"import React, { useState, useEffect } from 'react';\r\nimport { buildYearsList } from './buildYearsList';\r\nimport upBtnImg from '../../img/angle-up.svg';\r\nimport downBtnImg from '../../img/angle-down.svg';\r\n\r\ninterface CalendarProps {\r\n  date: moment.Moment;\r\n  onChangeYear: (year: moment.Moment) => void;\r\n  onSelectedYearClick: () => void;\r\n}\r\n\r\nconst YearDwopdown: React.FC<CalendarProps> = ({\r\n  date,\r\n  onChangeYear,\r\n  onSelectedYearClick,\r\n}) => {\r\n  const [yearsList, setYearsList] = useState<{\r\n    years: moment.Moment[];\r\n    middle: moment.Moment;\r\n  }>({\r\n    years: [],\r\n    middle: date,\r\n  });\r\n  const [activeYear, setActiveYear] = useState<moment.Moment>(date);\r\n\r\n  useEffect(() => {\r\n    setYearsList({ ...yearsList, years: buildYearsList(date) });\r\n  }, []);\r\n\r\n  const onBtnUpClick = (): void => {\r\n    setYearsList((prevState) => {\r\n      const newMiddle: moment.Moment = prevState.middle.clone().add(1, 'year');\r\n      const newYearsList: moment.Moment[] = buildYearsList(newMiddle);\r\n\r\n      return { years: newYearsList, middle: newMiddle };\r\n    });\r\n  };\r\n\r\n  const onBtnDownClick = (): void => {\r\n    setYearsList((prevState) => {\r\n      const newMiddle: moment.Moment = prevState.middle\r\n        .clone()\r\n        .subtract(1, 'year');\r\n      const newYearsList: moment.Moment[] = buildYearsList(newMiddle);\r\n\r\n      return { years: newYearsList, middle: newMiddle };\r\n    });\r\n  };\r\n\r\n  const onYearClick = (year: moment.Moment) => (): void => {\r\n    setActiveYear(year);\r\n    setYearsList({ years: buildYearsList(year), middle: year });\r\n    onChangeYear(year);\r\n    onSelectedYearClick();\r\n  };\r\n\r\n  return (\r\n    <ul className='datepicker__year-dropdown'>\r\n      <li\r\n        onClick={onBtnUpClick}\r\n        className='datepicker__year-option datepicker__year-option_btn'\r\n      >\r\n        {/* <span className='datepicker__navigation datepicker__navigation_years-upcoming icon icon-up-open-big'> */}\r\n        <div className='datepicker__navigation datepicker__navigation_years-upcoming'>\r\n          <img className='datepicker__btn-img' src={upBtnImg} alt='^' />\r\n        </div>\r\n      </li>\r\n      {yearsList.years.map((item: moment.Moment, idx: number) => {\r\n        const className: string = item.isSame(activeYear, 'year')\r\n          ? 'datepicker__year-option_selected'\r\n          : '';\r\n\r\n        return (\r\n          <li\r\n            onClick={onYearClick(item)}\r\n            key={idx}\r\n            className={`datepicker__year-option ${className}`}\r\n          >\r\n            {item.format('YYYY')}\r\n          </li>\r\n        );\r\n      })}\r\n      <li\r\n        onClick={onBtnDownClick}\r\n        className='datepicker__year-option datepicker__year-option_btn'\r\n      >\r\n        {/* <span className='datepicker__navigation datepicker__navigation_years-previous icon icon-down-open-big'> */}\r\n        <div className='datepicker__navigation datepicker__navigation_years-previous'>\r\n          <img className='datepicker__btn-img' src={downBtnImg} alt='v' />\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default React.memo(YearDwopdown);\r\n// export default YearDwopdown;\r\n","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\grid.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\buildCalendar.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\hooks.tsx",["209"],"import React, { useEffect, useRef, useState } from 'react';\r\n\r\ntype IUseClickOutside = React.RefObject<HTMLDivElement>;\r\n\r\nexport const useClickOutside = (\r\n  setIsComponentVisible: React.Dispatch<boolean>\r\n): IUseClickOutside => {\r\n  const ref = useRef<HTMLDivElement>(null);\r\n\r\n  const handleHideDropdown = (event: KeyboardEvent): void => {\r\n    if (event.key === 'Escape') {\r\n      setIsComponentVisible(false);\r\n    }\r\n  };\r\n\r\n  const handleClickOutside = ({ target }: MouseEvent) => {\r\n    if (ref.current && !ref.current.contains(target as HTMLDivElement)) {\r\n      setIsComponentVisible(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('keydown', handleHideDropdown, true);\r\n    document.addEventListener('click', handleClickOutside, true);\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handleHideDropdown, true);\r\n      document.removeEventListener('click', handleClickOutside, true);\r\n    };\r\n  }, []);\r\n\r\n  return ref;\r\n};\r\n\r\ntype IFormEvent = React.FormEvent<HTMLInputElement | HTMLTextAreaElement>;\r\ninterface IUseInput {\r\n  value: string;\r\n  onChange: (event: IFormEvent) => void;\r\n}\r\n\r\nexport const useInput = (\r\n  initialValue: string,\r\n  maxLength?: number,\r\n  pattern?: RegExp\r\n): IUseInput => {\r\n  const [value, setValue] = useState<string>(initialValue);\r\n\r\n  const onChange = (event: IFormEvent): void => {\r\n    const value = event.currentTarget.value;\r\n\r\n    if (!(maxLength !== undefined && value.length > maxLength)) {\r\n      if (pattern === undefined) {\r\n        setValue(value);\r\n      } else if (value === '' || pattern.test(value)) {\r\n        setValue(value);\r\n      }\r\n    }\r\n  };\r\n\r\n  return {\r\n    value,\r\n    onChange,\r\n  };\r\n};\r\n\r\ntype IUseFocus = React.RefObject<HTMLInputElement>;\r\n\r\nexport const useFocus = (): IUseFocus => {\r\n  const ref = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    ref.current!.focus();\r\n  }, []);\r\n\r\n  return ref;\r\n};\r\n","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\range.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\services\\firebase\\config.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\EventList.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\DeletePopup.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\Tooltip.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\popups.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\datePicker.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\buildMonthsList.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\isDayHasEvents.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\index.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\popups.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\services\\SchedulerService.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DayGrid\\RowList.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DayGrid\\DayGrid.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Main\\Main.tsx",["210"],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  Day,\r\n  ScheduleRange,\r\n  CreatePopup,\r\n  EditPopup,\r\n  PreviewPopup,\r\n  DeletePopup,\r\n} from '../../components';\r\nimport { fetchEvents } from '../../redux/actions';\r\nimport { RootState } from '../../redux/store';\r\n\r\nconst Main: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    range: { isRangeVisible },\r\n    popups: {\r\n      isCreatePopupVisible,\r\n      isEditPopupVisible,\r\n      isPreviewPopupVisible,\r\n      isDeletePopupVisible,\r\n    },\r\n  } = useSelector((state: RootState) => state);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchEvents());\r\n  }, []);\r\n\r\n  return (\r\n    <main className='main'>\r\n      {isRangeVisible ? <ScheduleRange /> : <Day />}\r\n\r\n      {isCreatePopupVisible && <CreatePopup></CreatePopup>}\r\n      {isEditPopupVisible && <EditPopup></EditPopup>}\r\n      {isPreviewPopupVisible && <PreviewPopup></PreviewPopup>}\r\n      {isDeletePopupVisible && <DeletePopup></DeletePopup>}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\Loading.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\Select.tsx",["211"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\ScheduleRange.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\store.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\Range.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\EditPopup.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\GridNav\\GridNav.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\Calendar.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\ErrorIndicator.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\datePicker.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\index.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\DayList.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\CreatePopup.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\range.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\buildYearsList.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\grid.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\buildRange.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\action-types.ts",[],{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","replacedBy":"215"},{"ruleId":"212","replacedBy":"216"},{"ruleId":"214","replacedBy":"217"},{"ruleId":"212","replacedBy":"218"},{"ruleId":"214","replacedBy":"219"},{"ruleId":"220","severity":1,"message":"221","line":20,"column":6,"nodeType":"222","endLine":20,"endColumn":8,"suggestions":"223"},{"ruleId":"220","severity":1,"message":"224","line":28,"column":6,"nodeType":"222","endLine":28,"endColumn":8,"suggestions":"225"},{"ruleId":"220","severity":1,"message":"226","line":30,"column":6,"nodeType":"222","endLine":30,"endColumn":8,"suggestions":"227"},{"ruleId":"220","severity":1,"message":"228","line":28,"column":6,"nodeType":"222","endLine":28,"endColumn":8,"suggestions":"229"},{"ruleId":"220","severity":1,"message":"230","line":22,"column":6,"nodeType":"222","endLine":22,"endColumn":8,"suggestions":"231"},"no-native-reassign",["232"],"no-negated-in-lhs",["233"],["232"],["233"],["232"],["233"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'date'. Either include it or remove the dependency array. If 'setmonthsList' needs the current value of 'date', you can also switch to useReducer instead of useState and read 'date' in the reducer.","ArrayExpression",["234"],"React Hook useEffect has missing dependencies: 'date' and 'yearsList'. Either include them or remove the dependency array. You can also do a functional update 'setYearsList(y => ...)' if you only need 'yearsList' in the 'setYearsList' call.",["235"],"React Hook useEffect has missing dependencies: 'handleClickOutside' and 'handleHideDropdown'. Either include them or remove the dependency array.",["236"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["237"],"React Hook useEffect has a missing dependency: 'options'. Either include it or remove the dependency array. If 'setOptionsList' needs the current value of 'options', you can also switch to useReducer instead of useState and read 'options' in the reducer.",["238"],"no-global-assign","no-unsafe-negation",{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},"Update the dependencies array to be: [date]",{"range":"249","text":"250"},"Update the dependencies array to be: [date, yearsList]",{"range":"251","text":"252"},"Update the dependencies array to be: [handleClickOutside, handleHideDropdown]",{"range":"253","text":"254"},"Update the dependencies array to be: [dispatch]",{"range":"255","text":"256"},"Update the dependencies array to be: [options]",{"range":"257","text":"258"},[587,589],"[date]",[775,777],"[date, yearsList]",[956,958],"[handleClickOutside, handleHideDropdown]",[684,686],"[dispatch]",[669,671],"[options]"]