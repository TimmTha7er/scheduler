[{"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\auth\\PrivateRoute.tsx":"1","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\auth\\PublicRoute.tsx":"2","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ControlPanel\\RangeBtn.tsx":"3","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Header\\Header.tsx":"4","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\SignIn.tsx":"5","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\SignUp.tsx":"6","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\DayPage.tsx":"7","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\HomePage.tsx":"8","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DayGrid\\RowList.tsx":"9","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\AppLoader.tsx":"10","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\DayListLoader.tsx":"11","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\App.tsx":"12","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\hooks.tsx":"13","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\NextDays.tsx":"14","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\NextEvents.tsx":"15","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\Message.tsx":"16","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\index.tsx":"17","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ControlPanel\\ControlPanel.tsx":"18","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\Calendar.tsx":"19","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\SelectedDate.tsx":"20","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\YearDropdown.tsx":"21","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\RangeDatePicker.tsx":"22","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\FormElements\\Select.tsx":"23","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\DeletePopup.tsx":"24","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\CreateEditPopupView.tsx":"25","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\grid.ts":"26","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DayGrid\\buildDayGrid.ts":"27","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\buildMonthsList.ts":"28","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\services\\firebase\\config.ts":"29","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\index.ts":"30","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\grid.ts":"31","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\SchedulePage.tsx":"32","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\services\\SchedulerService.ts":"33","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\store.ts":"34","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\DatePicker.tsx":"35","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\EmptyDayList.tsx":"36","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\EventList.tsx":"37","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\TimeRuler\\TimeRuler.tsx":"38","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\PreviewPopup.tsx":"39","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\buildRange.ts":"40","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\auth.ts":"41","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\popups.ts":"42","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\index.ts":"43","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\datePicker.ts":"44","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\range.ts":"45","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\services\\AuthService.ts":"46","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\index.ts":"47","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\DayList.tsx":"48","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\CreatePopup.tsx":"49","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\datePicker.ts":"50","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\buildYearsList.ts":"51","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\action-types.ts":"52","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\Range.tsx":"53","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ControlPanel\\GridNav.tsx":"54","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\ErrorIndicator.tsx":"55","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\range.ts":"56","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\utils\\messages.ts":"57","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\popups.ts":"58","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\ForgotPassword.tsx":"59","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\index.ts":"60","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\MonthDropdown.tsx":"61","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\EditPopup.tsx":"62","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\Popups.tsx":"63","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\buildCalendar.ts":"64","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\auth.ts":"65","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\auth\\AdminRoute.tsx":"66","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\AdminPage.tsx":"67","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\FormElements\\RadioBtn.tsx":"68","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\NotFound.tsx":"69","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DayGrid\\DayGrid.tsx":"70","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\isDayHasEvents.ts":"71","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\admin.ts":"72","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\admin.ts":"73","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\services\\AdminService.ts":"74","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\Tooltip.tsx":"75","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\AdminEventList.tsx":"76","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Header\\UserBar.tsx":"77","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\UserBarLoader.tsx":"78","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\ScheduleLoader.tsx":"79"},{"size":974,"mtime":1613491378715,"results":"80","hashOfConfig":"81"},{"size":1018,"mtime":1613583616149,"results":"82","hashOfConfig":"81"},{"size":1380,"mtime":1613491647238,"results":"83","hashOfConfig":"81"},{"size":645,"mtime":1613576730483,"results":"84","hashOfConfig":"81"},{"size":2881,"mtime":1613381439110,"results":"85","hashOfConfig":"81"},{"size":3134,"mtime":1612778537617,"results":"86","hashOfConfig":"81"},{"size":1690,"mtime":1613576118569,"results":"87","hashOfConfig":"81"},{"size":402,"mtime":1612780851386,"results":"88","hashOfConfig":"81"},{"size":2332,"mtime":1612783225376,"results":"89","hashOfConfig":"81"},{"size":1313,"mtime":1613583424461,"results":"90","hashOfConfig":"81"},{"size":646,"mtime":1612784227360,"results":"91","hashOfConfig":"81"},{"size":2273,"mtime":1613212992205,"results":"92","hashOfConfig":"81"},{"size":2028,"mtime":1613570951882,"results":"93","hashOfConfig":"81"},{"size":4619,"mtime":1613581891979,"results":"94","hashOfConfig":"81"},{"size":4006,"mtime":1613581970362,"results":"95","hashOfConfig":"81"},{"size":504,"mtime":1612796567491,"results":"96","hashOfConfig":"81"},{"size":462,"mtime":1613170002305,"results":"97","hashOfConfig":"81"},{"size":2439,"mtime":1613581580631,"results":"98","hashOfConfig":"81"},{"size":2148,"mtime":1613491684770,"results":"99","hashOfConfig":"81"},{"size":2163,"mtime":1613491731528,"results":"100","hashOfConfig":"81"},{"size":3083,"mtime":1613491778458,"results":"101","hashOfConfig":"81"},{"size":1596,"mtime":1613513446958,"results":"102","hashOfConfig":"81"},{"size":2238,"mtime":1613581813672,"results":"103","hashOfConfig":"81"},{"size":1402,"mtime":1611145756659,"results":"104","hashOfConfig":"81"},{"size":2769,"mtime":1613570861278,"results":"105","hashOfConfig":"81"},{"size":1639,"mtime":1611174771160,"results":"106","hashOfConfig":"81"},{"size":467,"mtime":1610581676848,"results":"107","hashOfConfig":"81"},{"size":462,"mtime":1610579318799,"results":"108","hashOfConfig":"81"},{"size":647,"mtime":1612449485471,"results":"109","hashOfConfig":"81"},{"size":158,"mtime":1613210476726,"results":"110","hashOfConfig":"81"},{"size":2408,"mtime":1613398472488,"results":"111","hashOfConfig":"81"},{"size":2719,"mtime":1613583693530,"results":"112","hashOfConfig":"81"},{"size":2211,"mtime":1613416090902,"results":"113","hashOfConfig":"81"},{"size":938,"mtime":1613514780420,"results":"114","hashOfConfig":"81"},{"size":2755,"mtime":1612694174422,"results":"115","hashOfConfig":"81"},{"size":514,"mtime":1612696131639,"results":"116","hashOfConfig":"81"},{"size":1388,"mtime":1612177063087,"results":"117","hashOfConfig":"81"},{"size":808,"mtime":1610583497072,"results":"118","hashOfConfig":"81"},{"size":2633,"mtime":1612097472809,"results":"119","hashOfConfig":"81"},{"size":1899,"mtime":1611931869431,"results":"120","hashOfConfig":"81"},{"size":1251,"mtime":1613172413696,"results":"121","hashOfConfig":"81"},{"size":1377,"mtime":1611151452872,"results":"122","hashOfConfig":"81"},{"size":367,"mtime":1613059557616,"results":"123","hashOfConfig":"81"},{"size":394,"mtime":1611141736200,"results":"124","hashOfConfig":"81"},{"size":2103,"mtime":1613506107327,"results":"125","hashOfConfig":"81"},{"size":1657,"mtime":1613416170795,"results":"126","hashOfConfig":"81"},{"size":160,"mtime":1613210323105,"results":"127","hashOfConfig":"81"},{"size":2545,"mtime":1613396584727,"results":"128","hashOfConfig":"81"},{"size":1309,"mtime":1611506956027,"results":"129","hashOfConfig":"81"},{"size":675,"mtime":1611142427689,"results":"130","hashOfConfig":"81"},{"size":450,"mtime":1610580115348,"results":"131","hashOfConfig":"81"},{"size":2496,"mtime":1613211269580,"results":"132","hashOfConfig":"81"},{"size":3207,"mtime":1613582024299,"results":"133","hashOfConfig":"81"},{"size":4355,"mtime":1613581680848,"results":"134","hashOfConfig":"81"},{"size":127,"mtime":1610983015923,"results":"135","hashOfConfig":"81"},{"size":2124,"mtime":1612180982335,"results":"136","hashOfConfig":"81"},{"size":1157,"mtime":1612627718750,"results":"137","hashOfConfig":"81"},{"size":1001,"mtime":1611150401301,"results":"138","hashOfConfig":"81"},{"size":2530,"mtime":1612735012921,"results":"139","hashOfConfig":"81"},{"size":2511,"mtime":1613576720235,"results":"140","hashOfConfig":"81"},{"size":1277,"mtime":1613491711516,"results":"141","hashOfConfig":"81"},{"size":1488,"mtime":1611506964243,"results":"142","hashOfConfig":"81"},{"size":1510,"mtime":1612040271747,"results":"143","hashOfConfig":"81"},{"size":519,"mtime":1611312628661,"results":"144","hashOfConfig":"81"},{"size":3110,"mtime":1613069103337,"results":"145","hashOfConfig":"81"},{"size":851,"mtime":1613491355859,"results":"146","hashOfConfig":"81"},{"size":2531,"mtime":1613398944836,"results":"147","hashOfConfig":"81"},{"size":1498,"mtime":1613570927151,"results":"148","hashOfConfig":"81"},{"size":214,"mtime":1612188025078,"results":"149","hashOfConfig":"81"},{"size":887,"mtime":1612176938012,"results":"150","hashOfConfig":"81"},{"size":457,"mtime":1611313006319,"results":"151","hashOfConfig":"81"},{"size":1038,"mtime":1613211691230,"results":"152","hashOfConfig":"81"},{"size":1371,"mtime":1613211684822,"results":"153","hashOfConfig":"81"},{"size":2072,"mtime":1613416123643,"results":"154","hashOfConfig":"81"},{"size":1826,"mtime":1612183231854,"results":"155","hashOfConfig":"81"},{"size":1456,"mtime":1613493919741,"results":"156","hashOfConfig":"81"},{"size":1002,"mtime":1613576769273,"results":"157","hashOfConfig":"81"},{"size":546,"mtime":1613576923368,"results":"158","hashOfConfig":"81"},{"size":1323,"mtime":1613583500604,"results":"159","hashOfConfig":"81"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},"1decv2q",{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"162"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"182"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"162"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"162"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"162"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"162"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"162"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"216"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\auth\\PrivateRoute.tsx",[],["339","340"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\auth\\PublicRoute.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ControlPanel\\RangeBtn.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Header\\Header.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\SignIn.tsx",[],["341","342"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\SignUp.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\DayPage.tsx",["343"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../redux/store';\r\nimport { setDate, setSuccess } from '../redux/actions';\r\nimport { useQuery } from '../components/supports/hooks';\r\nimport { push } from 'connected-react-router';\r\nimport moment from 'moment';\r\nimport 'moment/locale/ru';\r\nimport {\r\n  TimeRuler,\r\n  DayGrid,\r\n  Message,\r\n  ControlPanel,\r\n  AppLoader,\r\n} from '../components';\r\n\r\nconst DayPage: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    auth: { needVerification, success, loading },\r\n    datePicker: { date },\r\n  } = useSelector((state: RootState) => state);\r\n\r\n  const query = useQuery();\r\n  const showDate = query.get('date') || '';\r\n\r\n  useEffect(() => {\r\n    if (!moment(showDate, 'YYYY-MM-DD', true).isValid()) {\r\n      dispatch(\r\n        push({\r\n          search: `?date=${date.format('YYYY-MM-DD')}`,\r\n        })\r\n      );\r\n    } else {\r\n      dispatch(setDate(moment(showDate, 'YYYY-MM-DD')));\r\n    }\r\n  }, [showDate]);\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      dispatch(setSuccess(''));\r\n    }\r\n  }, [success, dispatch]);\r\n\r\n  if (loading) {\r\n    return <AppLoader />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {needVerification && (\r\n        <Message\r\n          className='main__msg'\r\n          type='success'\r\n          msg='Please verify your email address.'\r\n        />\r\n      )}\r\n      <ControlPanel />\r\n      <div className='day'>\r\n        <div className='day__left-col'>\r\n          <TimeRuler />\r\n        </div>\r\n        <div className='day__right-col'>\r\n          <DayGrid />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DayPage;\r\n","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\HomePage.tsx",[],["344","345"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DayGrid\\RowList.tsx",[],["346","347"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\AppLoader.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\DayListLoader.tsx",[],["348","349"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\App.tsx",["350","351"],"import React, { useEffect } from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../redux/store';\nimport {\n  setLoading,\n  getUserById,\n  setNeedVerification,\n  fetchEvents,\n  fetchUsers,\n} from '../redux/actions';\nimport { Switch } from 'react-router-dom';\nimport firebase from '../services/firebase/config';\nimport {\n  HomePage,\n  DayPage,\n  SchedulePage,\n  SignUp,\n  SignIn,\n  ForgotPassword,\n  AdminPage,\n} from '../pages';\nimport {\n  Header,\n  Popups,\n  PublicRoute,\n  PrivateRoute,\n  AdminRoute,\n  NotFound,\n} from '../components';\nimport '../scss/index.scss';\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n  const {\n    auth: { user: authUser},\n  } = useSelector((state: RootState) => state);\n\n  // Check if user exists\n  useEffect(() => {\n    dispatch(setLoading(true));\n\n    const unsubscribe = firebase.auth().onAuthStateChanged(async (user) => {\n      if (user) {\n        dispatch(setLoading(true));\n        await dispatch(getUserById(user.uid));\n\n        if (!user.emailVerified) {\n          dispatch(setNeedVerification());\n        }\n\n        // get events\n        dispatch(fetchEvents());\n\n        // ??? временно\n        // get users\n        dispatch(fetchUsers());\n      }\n\n      dispatch(setLoading(false));\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, [dispatch]);\n\n  return (\n    <>\n      <PerfectScrollbar>\n        <div className='container'>\n          <Header></Header>\n          <main className='main'>\n            <Switch>\n              <PublicRoute exact path='/' component={HomePage} />\n              <PrivateRoute path='/day' component={DayPage} />\n              <PrivateRoute path='/schedule' component={SchedulePage} />\n              <PublicRoute path='/sign-up' component={SignUp} />\n              <PublicRoute path='/sign-in' component={SignIn} />\n              <PublicRoute path='/forgot-password' component={ForgotPassword} />\n\n              <AdminRoute path='/admin' component={AdminPage} />\n\n              {/* <Route exact path='*' component={NotFound} /> */}\n            </Switch>\n          </main>\n        </div>\n      </PerfectScrollbar>\n\n      <Popups />\n    </>\n  );\n};\n\nexport default App;\n","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\hooks.tsx",["352"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\NextDays.tsx",["353","354"],"import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useInput, useFocus, useQuery } from '../supports/hooks';\r\nimport { RootState } from '../../redux/store';\r\nimport moment from 'moment';\r\nimport 'moment/locale/ru';\r\nimport { buildRange, RangeType } from './buildRange';\r\nimport { setNextDaysNum, setSelectValue } from '../../redux/actions';\r\nimport { DayList, Select } from '../../components';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst NextDays: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    grid: { events },\r\n    range: { selectValue, nextDaysNum },\r\n  } = useSelector((state: RootState) => state);\r\n  const [range, setRange] = useState<RangeType | null>(null);\r\n  const inputRef = useFocus();\r\n\r\n  const history = useHistory();\r\n  const query = useQuery();\r\n  const num = query.get('num') || '';\r\n  const interval = query.get('interval') || '';\r\n  const numPattern = /^(?:\\d{1}|\\d{2})$/;\r\n  const intervalPattern = /суток|часов/;\r\n  const input = useInput(num, 2, numPattern);\r\n\r\n  useEffect(() => {\r\n    if (!numPattern.test(num) || !intervalPattern.test(interval)) {\r\n      dispatch(\r\n        history.push({\r\n          search: `?num=${nextDaysNum}&interval=${selectValue}`,\r\n        })\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    input.onChange(num);\r\n    dispatch(setNextDaysNum(num));\r\n    dispatch(setSelectValue(interval));\r\n  }, [num, interval]);\r\n\r\n  useEffect(() => {\r\n    const startOfRange = moment().clone().startOf('hour');\r\n    const units = selectValue === 'суток' ? 'day' : 'hour';\r\n    const endOfRange = startOfRange.clone().add(nextDaysNum, units);\r\n\r\n    const range = !startOfRange.isSame(endOfRange, 'milliseconds')\r\n      ? buildRange(events, startOfRange, endOfRange)\r\n      : [];\r\n\r\n    setRange(range);\r\n  }, [events, nextDaysNum, selectValue, dispatch]);\r\n\r\n  const handleChange = (event: React.FormEvent<HTMLInputElement>) => {\r\n    const inputValue = event.currentTarget.value;\r\n    const pattern = /^[0-9\\b]+$/;\r\n\r\n    if (pattern.test(inputValue) || inputValue === '') {\r\n      input.onChange(inputValue);\r\n      dispatch(setNextDaysNum(inputValue));\r\n\r\n      history.push({\r\n        search: `?num=${inputValue}&interval=${selectValue}`,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onOptionClick = useCallback(\r\n    (value) => {\r\n      dispatch(setSelectValue(value));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const onAddBtnClick = (event: React.FormEvent<HTMLButtonElement>) => {\r\n    event.preventDefault();\r\n    const inputValue = (+input.value + 1).toString();\r\n\r\n    if (numPattern.test(inputValue)) {\r\n      input.onChange(inputValue);\r\n      dispatch(setNextDaysNum(input.value));\r\n\r\n      history.push({\r\n        search: `?num=${inputValue}&interval=${selectValue}`,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onSubBtnClick = (event: React.FormEvent<HTMLButtonElement>) => {\r\n    event.preventDefault();\r\n    const inputValue = (+input.value - 1).toString();\r\n\r\n    if (numPattern.test(inputValue)) {\r\n      input.onChange(inputValue);\r\n      dispatch(setNextDaysNum(input.value));\r\n\r\n      history.push({\r\n        search: `?num=${inputValue}&interval=${selectValue}`,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className='next-days'>\r\n        <div className='next-days__field'>\r\n          <label className='next-days__label' htmlFor=''>\r\n            За ближайшие\r\n          </label>\r\n          <div className='next-events__wrap'>\r\n            <div className='next-days__change-count'>\r\n              <button\r\n                onClick={onAddBtnClick}\r\n                className='next-days__btn-add'\r\n              ></button>\r\n              <input\r\n                value={input.value}\r\n                onChange={handleChange}\r\n                className='next-days__input'\r\n                type='text'\r\n                autoComplete='off'\r\n                maxLength={2}\r\n                ref={inputRef}\r\n              />\r\n              <button\r\n                onClick={onSubBtnClick}\r\n                className='next-days__btn-subtract'\r\n              ></button>\r\n            </div>\r\n            <div className='next-days__text'>\r\n              <Select\r\n                options={['суток', 'часов']}\r\n                defaultSelected={selectValue}\r\n                onOptionClick={onOptionClick}\r\n              ></Select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n\r\n      <DayList range={range} msg={`за ближайшие ${num} ${selectValue}`} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NextDays;\r\n","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\NextEvents.tsx",["355"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useInput, useFocus, useQuery } from '../supports/hooks';\r\nimport { RootState } from '../../redux/store';\r\nimport { useHistory } from 'react-router';\r\nimport moment from 'moment';\r\nimport 'moment/locale/ru';\r\nimport { setNextEventsNum } from '../../redux/actions';\r\nimport { buildRange, RangeType } from './buildRange';\r\nimport { DayList } from '../../components';\r\n\r\nconst NextEvents: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    grid: { events },\r\n    range: { nextEventsNum },\r\n  } = useSelector((state: RootState) => state);\r\n  const [range, setRange] = useState<RangeType | null>(null);\r\n  const inputRef = useFocus();\r\n\r\n  const history = useHistory();\r\n  const query = useQuery();\r\n  const num = query.get('num') || '';\r\n  const pattern = /^(?:\\d{1}|\\d{2})$/;\r\n  const input = useInput(num, 2, pattern);\r\n\r\n  useEffect(() => {\r\n    if (!pattern.test(num)) {\r\n      history.push({\r\n        search: `?num=${nextEventsNum}`,\r\n      });\r\n    } else {\r\n      input.onChange(num);\r\n      dispatch(setNextEventsNum(num));\r\n    }\r\n  }, [num]);\r\n\r\n  useEffect(() => {\r\n    const startOfRange = moment().clone().startOf('hour');\r\n    let endOfRange = moment().clone().startOf('hour');\r\n\r\n    Object.keys(events).forEach((time) => {\r\n      if (endOfRange.isBefore(new Date(time))) {\r\n        endOfRange = moment(new Date(time));\r\n      }\r\n    });\r\n\r\n    setRange(\r\n      buildRange(\r\n        events,\r\n        startOfRange,\r\n        endOfRange.clone().add(1, 'day'),\r\n        +nextEventsNum\r\n      )\r\n    );\r\n  }, [dispatch, events, nextEventsNum]);\r\n\r\n  const handleChange = (event: React.FormEvent<HTMLInputElement>) => {\r\n    const inputValue = event.currentTarget.value;\r\n\r\n    if (pattern.test(inputValue) || inputValue === '') {\r\n      input.onChange(inputValue);\r\n      dispatch(setNextEventsNum(inputValue));\r\n\r\n      history.push({\r\n        search: `?num=${inputValue}`,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onAddBtnClick = (event: React.FormEvent<HTMLButtonElement>) => {\r\n    event.preventDefault();\r\n    const inputValue = (+input.value + 1).toString();\r\n\r\n    if (pattern.test(inputValue)) {\r\n      input.onChange(inputValue);\r\n      dispatch(setNextEventsNum(input.value));\r\n\r\n      history.push({\r\n        search: `?num=${inputValue}`,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onSubBtnClick = (event: React.FormEvent<HTMLButtonElement>) => {\r\n    event.preventDefault();\r\n    const inputValue = (+input.value - 1).toString();\r\n\r\n    if (pattern.test(inputValue)) {\r\n      input.onChange(inputValue);\r\n      dispatch(setNextEventsNum(input.value));\r\n\r\n      history.push({\r\n        search: `?num=${inputValue}`,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className='next-events'>\r\n        <div className='next-events__field'>\r\n          <label className='next-events__label' htmlFor=''>\r\n            Ближайшие\r\n          </label>\r\n          <div className='next-events__wrap'>\r\n            <div className='next-events__change-count'>\r\n              <button\r\n                onClick={onAddBtnClick}\r\n                className='next-events__btn-add'\r\n              ></button>\r\n              <input\r\n                value={input.value}\r\n                onChange={handleChange}\r\n                className='next-events__input'\r\n                type='text'\r\n                autoComplete='off'\r\n                maxLength={2}\r\n                ref={inputRef}\r\n              />\r\n              <button\r\n                onClick={onSubBtnClick}\r\n                className='next-events__btn-subtract'\r\n              ></button>\r\n            </div>\r\n            <span className='next-events__text'>событий</span>\r\n          </div>\r\n        </div>\r\n      </form>\r\n\r\n      <DayList\r\n        range={range}\r\n        msg={`с ${moment().clone().startOf('hour').format('DD-MM-YYYY HH:mm')}`}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NextEvents;\r\n","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\Message.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\index.tsx",[],["356","357"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ControlPanel\\ControlPanel.tsx",["358"],"import React, { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  setVisible,\r\n  setDate,\r\n  setALLPopupsUnvisible,\r\n  setRowDate,\r\n} from '../../redux/actions';\r\nimport { RootState } from '../../redux/store';\r\nimport { useClickOutside } from '../supports/hooks';\r\nimport { GridNav, DatePicker, RangeBtn } from '../../components';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst ControlPanel: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    datePicker: { date, isVisible },\r\n  } = useSelector((state: RootState) => state);\r\n  const history = useHistory();\r\n  const selectedMonth: string = date.format('MMMM');\r\n  const selectedYear: string = date.format('YYYY');\r\n\r\n  const onSelectedDateClick = (): void => {\r\n    dispatch(setVisible(!isVisible));\r\n    dispatch(setALLPopupsUnvisible());\r\n    dispatch(setRowDate(null));\r\n  };\r\n\r\n  const setDatePickerDate = useCallback(\r\n    (date: moment.Moment) => {\r\n      history.push({\r\n        pathname: `/day`,\r\n        search: `?date=${date.format('YYYY-MM-DD')}`,\r\n      });\r\n\r\n      return dispatch(setDate(date));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const setGridDate = useCallback(\r\n    (date: moment.Moment) => {\r\n      return dispatch(setDate(date));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const setVisibleCallback = useCallback(\r\n    (value: boolean) => dispatch(setVisible(value)),\r\n    [dispatch]\r\n  );\r\n  const datePickerRef = useClickOutside(setVisibleCallback);\r\n\r\n  return (\r\n    <div className='control-panel'>\r\n      <div ref={datePickerRef} className='control-panel__date-wrap'>\r\n        <div\r\n          onClick={onSelectedDateClick}\r\n          className='control-panel__selected-date'\r\n        >\r\n          <div className='control-panel__selected-month'>{selectedMonth}</div>\r\n          <div className='control-panel__selected-year'>{selectedYear}</div>\r\n        </div>\r\n        <div className='datepicker__wrap'>\r\n          {isVisible && (\r\n            <DatePicker\r\n              className='control-panel__datepicker'\r\n              date={date}\r\n              setDate={setDatePickerDate}\r\n              setVisible={setVisibleCallback}\r\n            ></DatePicker>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className='control-panel__btns-wrap'>\r\n        <GridNav setDate={setGridDate}></GridNav>\r\n        <RangeBtn></RangeBtn>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ControlPanel;\r\n","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\Calendar.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\SelectedDate.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\YearDropdown.tsx",["359"],"import React, { useState, useEffect } from 'react';\r\nimport { buildYearsList } from './buildYearsList';\r\nimport upBtnImg from '../../img/angle-up.svg';\r\nimport downBtnImg from '../../img/angle-down.svg';\r\n\r\ninterface CalendarProps {\r\n  date: moment.Moment;\r\n  onChangeYear: (year: moment.Moment) => void;\r\n  onSelectedYearClick: () => void;\r\n}\r\n\r\nconst YearDwopdown: React.FC<CalendarProps> = ({\r\n  date,\r\n  onChangeYear,\r\n  onSelectedYearClick,\r\n}) => {\r\n  const [yearsList, setYearsList] = useState<{\r\n    years: moment.Moment[];\r\n    middle: moment.Moment;\r\n  }>({\r\n    years: [],\r\n    middle: date,\r\n  });\r\n  const [activeYear, setActiveYear] = useState<moment.Moment>(date);\r\n\r\n  useEffect(() => {\r\n    setYearsList({ ...yearsList, years: buildYearsList(date) });\r\n  }, []);\r\n\r\n  const onBtnUpClick = (): void => {\r\n    setYearsList((prevState) => {\r\n      const newMiddle: moment.Moment = prevState.middle.clone().add(1, 'year');\r\n      const newYearsList: moment.Moment[] = buildYearsList(newMiddle);\r\n\r\n      return { years: newYearsList, middle: newMiddle };\r\n    });\r\n  };\r\n\r\n  const onBtnDownClick = (): void => {\r\n    setYearsList((prevState) => {\r\n      const newMiddle: moment.Moment = prevState.middle\r\n        .clone()\r\n        .subtract(1, 'year');\r\n      const newYearsList: moment.Moment[] = buildYearsList(newMiddle);\r\n\r\n      return { years: newYearsList, middle: newMiddle };\r\n    });\r\n  };\r\n\r\n  const onYearClick = (year: moment.Moment) => (): void => {\r\n    setActiveYear(year);\r\n    setYearsList({ years: buildYearsList(year), middle: year });\r\n    onChangeYear(year);\r\n    onSelectedYearClick();\r\n  };\r\n\r\n  return (\r\n    <ul className='datepicker__year-dropdown'>\r\n      <li\r\n        onClick={onBtnUpClick}\r\n        className='datepicker__year-option datepicker__year-option_btn'\r\n      >\r\n        {/* <span className='datepicker__navigation datepicker__navigation_years-upcoming icon icon-up-open-big'> */}\r\n        <div className='datepicker__navigation datepicker__navigation_years-upcoming'>\r\n          <img className='datepicker__btn-img' src={upBtnImg} alt='^' />\r\n        </div>\r\n      </li>\r\n      {yearsList.years.map((item: moment.Moment, idx: number) => {\r\n        const className: string = item.isSame(activeYear, 'year')\r\n          ? 'datepicker__year-option_selected'\r\n          : '';\r\n\r\n        return (\r\n          <li\r\n            onClick={onYearClick(item)}\r\n            key={idx}\r\n            className={`datepicker__year-option ${className}`}\r\n          >\r\n            {item.format('YYYY')}\r\n          </li>\r\n        );\r\n      })}\r\n      <li\r\n        onClick={onBtnDownClick}\r\n        className='datepicker__year-option datepicker__year-option_btn'\r\n      >\r\n        {/* <span className='datepicker__navigation datepicker__navigation_years-previous icon icon-down-open-big'> */}\r\n        <div className='datepicker__navigation datepicker__navigation_years-previous'>\r\n          <img className='datepicker__btn-img' src={downBtnImg} alt='v' />\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default React.memo(YearDwopdown);\r\n","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\RangeDatePicker.tsx",[],["360","361"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\FormElements\\Select.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\DeletePopup.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\CreateEditPopupView.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\grid.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DayGrid\\buildDayGrid.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\buildMonthsList.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\services\\firebase\\config.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\index.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\grid.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\SchedulePage.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\services\\SchedulerService.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\store.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\DatePicker.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\EmptyDayList.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\EventList.tsx",[],["362","363"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\TimeRuler\\TimeRuler.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\PreviewPopup.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\buildRange.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\auth.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\popups.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\index.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\datePicker.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\range.ts",["364"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\services\\AuthService.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\index.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\DayList.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\CreatePopup.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\datePicker.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\buildYearsList.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\action-types.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\Range.tsx",["365"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ControlPanel\\GridNav.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\ErrorIndicator.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\range.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\utils\\messages.ts",[],["366","367"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\popups.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\ForgotPassword.tsx",[],["368","369"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\index.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\MonthDropdown.tsx",["370"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\EditPopup.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\Popups.tsx",["371","372","373"],"import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/store';\r\nimport {\r\n  Switch,\r\n  Route,\r\n  useRouteMatch,\r\n  useHistory,\r\n  useLocation,\r\n  useParams,\r\n} from 'react-router-dom';\r\nimport {\r\n  CreatePopup,\r\n  EditPopup,\r\n  PreviewPopup,\r\n  DeletePopup,\r\n} from '../../components';\r\n\r\nconst Popups: React.FC = () => {\r\n  const {\r\n    popups: {\r\n      isCreatePopupVisible,\r\n      isEditPopupVisible,\r\n      isPreviewPopupVisible,\r\n      isDeletePopupVisible,\r\n    },\r\n  } = useSelector((state: RootState) => state);\r\n  const match = useRouteMatch();\r\n  // const history = useHistory();\r\n  // const location = useLocation();\r\n  // const params = useParams();\r\n\r\n  // console.log('match', match);\r\n  // console.log('history', history);\r\n  // console.log('location', location);\r\n  // console.log('params', params);\r\n\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route path={`${match.path}/create`} exact component={CreatePopup} />\r\n        <Route path={`${match.path}/edit`} component={EditPopup} />\r\n        <Route path={`${match.path}/preview`} component={PreviewPopup} />\r\n        <Route path={`${match.path}/delete`} component={DeletePopup} />\r\n      </Switch>\r\n      {isCreatePopupVisible && <CreatePopup></CreatePopup>}\r\n      {isEditPopupVisible && <EditPopup></EditPopup>}\r\n      {isPreviewPopupVisible && <PreviewPopup></PreviewPopup>}\r\n      {isDeletePopupVisible && <DeletePopup></DeletePopup>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Popups;\r\n","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\buildCalendar.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\auth.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\auth\\AdminRoute.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\AdminPage.tsx",["374","375"],"import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../redux/store';\r\nimport { fetchEvents } from '../redux/actions';\r\nimport { EventList, EmptyDayList } from '../components';\r\nimport SchedulerService from '../services/SchedulerService';\r\nimport moment from 'moment';\r\nimport 'moment/locale/ru';\r\n\r\nconst schedulerService = new SchedulerService();\r\n\r\nconst AdminPage: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    admin: { loading, users },\r\n  } = useSelector((state: RootState) => state);\r\n\r\n  if (loading) {\r\n    return <div>admin loading...</div>;\r\n  }\r\n\r\n  const onUserClick = (id: string) => async () => {\r\n    console.log(`click on user ${id}`);\r\n    console.log('events', await schedulerService.getEvents(id));\r\n    dispatch(fetchEvents(id));\r\n  };\r\n\r\n  return (\r\n    <div className='admin'>\r\n      <table className='user-list'>\r\n        <thead className='user-list__head'>\r\n          <tr className='user-list__row user-list__row_head'>\r\n            <th className='user-list__head-cell'>Имя</th>\r\n            <th className='user-list__head-cell'>Почта</th>\r\n            <th className='user-list__head-cell'>Дата регистрации</th>\r\n            <th className='user-list__head-cell'>ID</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody className='user-list__body'>\r\n          {users.map(({ firstName, email, createdAt, id }, idx: number) => {\r\n            const date = moment(\r\n              new Date(1970, 0, 1).setSeconds(createdAt.seconds)\r\n            )\r\n              .clone()\r\n              .format('DD MM YYYY');\r\n\r\n            return (\r\n              <tr\r\n                onClick={onUserClick(id)}\r\n                key={idx}\r\n                className='user-list__row'\r\n              >\r\n                <td className='user-list__body-cell' data-label='Имя'>\r\n                  {firstName}\r\n                </td>\r\n                <td className='user-list__body-cell' data-label='Почта'>\r\n                  {email}\r\n                </td>\r\n                <td\r\n                  className='user-list__body-cell'\r\n                  data-label='Дата регистрации'\r\n                >\r\n                  {date}\r\n                </td>\r\n                <td className='user-list__body-cell' data-label='ID'>\r\n                  {id}\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPage;\r\n","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\FormElements\\RadioBtn.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\NotFound.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DayGrid\\DayGrid.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\isDayHasEvents.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\admin.ts",["376"],"import {\r\n  FETCH_USERS_REQUESTED,\r\n  FETCH_USERS_LOADED,\r\n  FETCH_USERS_ERROR,\r\n  EDIT_USER,\r\n} from '../action-types';\r\nimport { IAdminState, AdminActionsType } from '../interfaces';\r\n\r\nconst initialState: IAdminState = {\r\n  users: [],\r\n  loading: true,\r\n  error: null,\r\n};\r\n\r\nconst adminReducer = (\r\n  state = initialState,\r\n  action: AdminActionsType\r\n): IAdminState => {\r\n  if (action.type === FETCH_USERS_REQUESTED) {\r\n    return {\r\n      ...state,\r\n      loading: true,\r\n      error: null,\r\n    };\r\n  }\r\n\r\n  if (action.type === FETCH_USERS_LOADED) {\r\n    return {\r\n      ...state,\r\n      users: action.payload,\r\n      loading: false,\r\n      error: null,\r\n    };\r\n  }\r\n\r\n  if (action.type === FETCH_USERS_ERROR) {\r\n    return {\r\n      ...state,\r\n      users: [],\r\n      loading: false,\r\n      error: action.payload,\r\n    };\r\n  }\r\n\r\n  // if (action.type === EDIT_USER) {\r\n  //   return {\r\n  //     ...state,\r\n  //     users: [...state.users, ...action.payload],\r\n  //   };\r\n  // }\r\n\r\n  return state;\r\n};\r\n\r\nexport { adminReducer };\r\n","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\admin.ts",["377"],"import {\r\n  FETCH_USERS_REQUESTED,\r\n  FETCH_USERS_LOADED,\r\n  FETCH_USERS_ERROR,\r\n\tEDIT_USER\r\n} from '../action-types';\r\nimport { AdminActionsType, AdminThunkActionType, IUser } from '../interfaces';\r\nimport AdminService from '../../services/AdminService';\r\n\r\nconst adminService = new AdminService();\r\n\r\nexport const fetchUsers = (): AdminThunkActionType => {\r\n  return async (dispatch) => {\r\n    try {\r\n      // console.log('fetch users');\r\n\r\n      dispatch(usersRequested());\r\n      const events = await adminService.getUsers();\r\n      dispatch(usersLoaded(events));\r\n    } catch (error) {\r\n      dispatch(usersError(error));\r\n    }\r\n  };\r\n};\r\n\r\n// export const editUser = (): AdminActionsType => {\r\n//   return async (dispatch) => {\r\n//     try {\r\n//       const newUser = await adminService.editUser();\r\n\r\n//       dispatch({\r\n//         type: EDIT_USER,\r\n//         payload: newUser,\r\n//       });\r\n//     } catch (error) {\r\n//       dispatch(usersError(error));\r\n//     }\r\n//   };\r\n// };\r\n\r\nconst usersRequested = (): AdminActionsType => {\r\n  return {\r\n    type: FETCH_USERS_REQUESTED,\r\n  };\r\n};\r\n\r\nconst usersLoaded = (events: IUser[]): AdminActionsType => {\r\n  return {\r\n    type: FETCH_USERS_LOADED,\r\n    payload: events,\r\n  };\r\n};\r\n\r\nconst usersError = (error: {}): AdminActionsType => {\r\n  return {\r\n    type: FETCH_USERS_ERROR,\r\n    payload: error,\r\n  };\r\n};\r\n","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\services\\AdminService.ts",["378","379"],"import firebase from './firebase/config';\r\nimport { IUser, IEvent, ICreatedEvent } from '../redux/interfaces';\r\n\r\nexport default class AdminService {\r\n  public editUser = async () => {\r\n    // const cityRef = firebase.firestore().collection('cities').doc('DC');\r\n    // // Set the 'capital' field of the city\r\n    // const res = await cityRef.update({capital: true});\r\n  };\r\n\r\n  // getEvents = async (uid: string) => {\r\n  //   const snapshot = await firebase\r\n  //     .database()\r\n  //     .ref(`calendar/users/${uid}/events`)\r\n  //     .once('value');\r\n\r\n  //   // ??\r\n  //   if (!snapshot.exists) {\r\n  //     throw new Error(`Не удалось получить ${snapshot.ref} }`);\r\n  //   }\r\n\r\n  //   const events: IEvent = this._transformEvents(snapshot);\r\n\r\n  //   return events;\r\n  // };\r\n\r\n  public getUserById = async (id: string) => {\r\n    const user = await firebase.firestore().collection('users').doc(id).get();\r\n\r\n    if (!user.exists) {\r\n      throw new Error(\r\n        `Не удалось получить пользователя со следующим id: ${id} }`\r\n      );\r\n    }\r\n\r\n    const userData = user.data() as IUser;\r\n\r\n    return userData;\r\n  };\r\n\r\n  public getUsers = async () => {\r\n    const snapshot = await firebase\r\n      .firestore()\r\n      .collection('users')\r\n      .where('role', '==', 'user')\r\n      .get();\r\n\r\n    if (snapshot.empty) {\r\n      throw new Error(\r\n        `Не удалось получить пользователя список пользователей }`\r\n      );\r\n    }\r\n\r\n    const users: IUser[] = [];\r\n    snapshot.forEach((doc) => {\r\n      users.push(doc.data() as IUser);\r\n    });\r\n\r\n    return users;\r\n  };\r\n\r\n  // _transformEvents = (snapshot: firebase.database.DataSnapshot) => {\r\n  //   const events: IEvent = {};\r\n\r\n  //   snapshot.forEach((childSnapshot) => {\r\n  //     const { descr, time, title } = childSnapshot.val();\r\n\r\n  //     events[time] = {\r\n  //       descr,\r\n  //       title,\r\n  //       id: childSnapshot.key || '',\r\n  //     };\r\n  //   });\r\n\r\n  //   return events;\r\n  // };\r\n}\r\n","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\Tooltip.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\AdminEventList.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Header\\UserBar.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\UserBarLoader.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\ScheduleLoader.tsx",[],{"ruleId":"380","replacedBy":"381"},{"ruleId":"382","replacedBy":"383"},{"ruleId":"380","replacedBy":"384"},{"ruleId":"382","replacedBy":"385"},{"ruleId":"386","severity":1,"message":"387","line":37,"column":6,"nodeType":"388","endLine":37,"endColumn":16,"suggestions":"389"},{"ruleId":"380","replacedBy":"390"},{"ruleId":"382","replacedBy":"391"},{"ruleId":"380","replacedBy":"392"},{"ruleId":"382","replacedBy":"393"},{"ruleId":"380","replacedBy":"394"},{"ruleId":"382","replacedBy":"395"},{"ruleId":"396","severity":1,"message":"397","line":29,"column":3,"nodeType":"398","messageId":"399","endLine":29,"endColumn":11},{"ruleId":"396","severity":1,"message":"400","line":36,"column":19,"nodeType":"398","messageId":"399","endLine":36,"endColumn":27},{"ruleId":"386","severity":1,"message":"401","line":31,"column":6,"nodeType":"388","endLine":31,"endColumn":8,"suggestions":"402"},{"ruleId":"386","severity":1,"message":"403","line":37,"column":6,"nodeType":"388","endLine":37,"endColumn":8,"suggestions":"404"},{"ruleId":"386","severity":1,"message":"405","line":43,"column":6,"nodeType":"388","endLine":43,"endColumn":21,"suggestions":"406"},{"ruleId":"386","severity":1,"message":"407","line":36,"column":6,"nodeType":"388","endLine":36,"endColumn":11,"suggestions":"408"},{"ruleId":"380","replacedBy":"409"},{"ruleId":"382","replacedBy":"410"},{"ruleId":"386","severity":1,"message":"411","line":38,"column":5,"nodeType":"388","endLine":38,"endColumn":15,"suggestions":"412"},{"ruleId":"386","severity":1,"message":"413","line":28,"column":6,"nodeType":"388","endLine":28,"endColumn":8,"suggestions":"414"},{"ruleId":"380","replacedBy":"415"},{"ruleId":"382","replacedBy":"416"},{"ruleId":"380","replacedBy":"417"},{"ruleId":"382","replacedBy":"418"},{"ruleId":"396","severity":1,"message":"419","line":1,"column":10,"nodeType":"398","messageId":"399","endLine":1,"endColumn":14},{"ruleId":"386","severity":1,"message":"420","line":49,"column":6,"nodeType":"388","endLine":49,"endColumn":26,"suggestions":"421"},{"ruleId":"380","replacedBy":"422"},{"ruleId":"382","replacedBy":"423"},{"ruleId":"380","replacedBy":"424"},{"ruleId":"382","replacedBy":"425"},{"ruleId":"386","severity":1,"message":"426","line":20,"column":6,"nodeType":"388","endLine":20,"endColumn":8,"suggestions":"427"},{"ruleId":"396","severity":1,"message":"428","line":8,"column":3,"nodeType":"398","messageId":"399","endLine":8,"endColumn":13},{"ruleId":"396","severity":1,"message":"429","line":9,"column":3,"nodeType":"398","messageId":"399","endLine":9,"endColumn":14},{"ruleId":"396","severity":1,"message":"430","line":10,"column":3,"nodeType":"398","messageId":"399","endLine":10,"endColumn":12},{"ruleId":"396","severity":1,"message":"431","line":5,"column":10,"nodeType":"398","messageId":"399","endLine":5,"endColumn":19},{"ruleId":"396","severity":1,"message":"432","line":5,"column":21,"nodeType":"398","messageId":"399","endLine":5,"endColumn":33},{"ruleId":"396","severity":1,"message":"433","line":5,"column":3,"nodeType":"398","messageId":"399","endLine":5,"endColumn":12},{"ruleId":"396","severity":1,"message":"433","line":5,"column":2,"nodeType":"398","messageId":"399","endLine":5,"endColumn":11},{"ruleId":"396","severity":1,"message":"434","line":2,"column":17,"nodeType":"398","messageId":"399","endLine":2,"endColumn":23},{"ruleId":"396","severity":1,"message":"435","line":2,"column":25,"nodeType":"398","messageId":"399","endLine":2,"endColumn":38},"no-native-reassign",["436"],"no-negated-in-lhs",["437"],["436"],["437"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'date' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["438"],["436"],["437"],["436"],["437"],["436"],["437"],"@typescript-eslint/no-unused-vars","'NotFound' is defined but never used.","Identifier","unusedVar","'authUser' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'handleClickOutside' and 'handleHideDropdown'. Either include them or remove the dependency array.",["439"],"React Hook useEffect has missing dependencies: 'dispatch', 'history', 'interval', 'intervalPattern', 'nextDaysNum', 'num', 'numPattern', and 'selectValue'. Either include them or remove the dependency array.",["440"],"React Hook useEffect has missing dependencies: 'dispatch' and 'input'. Either include them or remove the dependency array.",["441"],"React Hook useEffect has missing dependencies: 'dispatch', 'history', 'input', 'nextEventsNum', and 'pattern'. Either include them or remove the dependency array.",["442"],["436"],["437"],"React Hook useCallback has a missing dependency: 'history'. Either include it or remove the dependency array.",["443"],"React Hook useEffect has missing dependencies: 'date' and 'yearsList'. Either include them or remove the dependency array. You can also do a functional update 'setYearsList(y => ...)' if you only need 'yearsList' in the 'setYearsList' call.",["444"],["436"],["437"],["436"],["437"],"'push' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'endOfRange', 'history', and 'startOfRange'. Either include them or remove the dependency array.",["445"],["436"],["437"],["436"],["437"],"React Hook useEffect has a missing dependency: 'date'. Either include it or remove the dependency array. If 'setmonthsList' needs the current value of 'date', you can also switch to useReducer instead of useState and read 'date' in the reducer.",["446"],"'useHistory' is defined but never used.","'useLocation' is defined but never used.","'useParams' is defined but never used.","'EventList' is defined but never used.","'EmptyDayList' is defined but never used.","'EDIT_USER' is defined but never used.","'IEvent' is defined but never used.","'ICreatedEvent' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"447","fix":"448"},{"desc":"449","fix":"450"},{"desc":"451","fix":"452"},{"desc":"453","fix":"454"},{"desc":"455","fix":"456"},{"desc":"457","fix":"458"},{"desc":"459","fix":"460"},{"desc":"461","fix":"462"},{"desc":"463","fix":"464"},"Update the dependencies array to be: [date, dispatch, showDate]",{"range":"465","text":"466"},"Update the dependencies array to be: [handleClickOutside, handleHideDropdown]",{"range":"467","text":"468"},"Update the dependencies array to be: [dispatch, history, interval, intervalPattern, nextDaysNum, num, numPattern, selectValue]",{"range":"469","text":"470"},"Update the dependencies array to be: [num, interval, input, dispatch]",{"range":"471","text":"472"},"Update the dependencies array to be: [dispatch, history, input, nextEventsNum, num, pattern]",{"range":"473","text":"474"},"Update the dependencies array to be: [dispatch, history]",{"range":"475","text":"476"},"Update the dependencies array to be: [date, yearsList]",{"range":"477","text":"478"},"Update the dependencies array to be: [startDate, endDate, history, startOfRange, endOfRange, dispatch]",{"range":"479","text":"480"},"Update the dependencies array to be: [date]",{"range":"481","text":"482"},[1035,1045],"[date, dispatch, showDate]",[1018,1020],"[handleClickOutside, handleHideDropdown]",[1329,1331],"[dispatch, history, interval, intervalPattern, nextDaysNum, num, numPattern, selectValue]",[1466,1481],"[num, interval, input, dispatch]",[1178,1183],"[dispatch, history, input, nextEventsNum, num, pattern]",[1148,1158],"[dispatch, history]",[775,777],"[date, yearsList]",[1520,1540],"[startDate, endDate, history, startOfRange, endOfRange, dispatch]",[587,589],"[date]"]