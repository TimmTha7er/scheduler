[{"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\index.tsx":"1","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\index.ts":"2","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Header\\Header.tsx":"3","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Day\\Day.tsx":"4","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\RangeBtn\\RangeBtn.tsx":"5","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\NextDays.tsx":"6","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\TimeRuler\\TimeRuler.tsx":"7","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\CreateEditPopupView.tsx":"8","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\MonthDropdown.tsx":"9","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\PreviewPopup.tsx":"10","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\YearDropdown.tsx":"11","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\grid.ts":"12","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\buildCalendar.ts":"13","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\hooks.tsx":"14","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\range.ts":"15","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\services\\firebase\\config.ts":"16","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\EventList.tsx":"17","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\DeletePopup.tsx":"18","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\Tooltip.tsx":"19","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\popups.ts":"20","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\datePicker.ts":"21","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\buildMonthsList.ts":"22","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\isDayHasEvents.ts":"23","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\index.ts":"24","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\popups.ts":"25","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\services\\SchedulerService.ts":"26","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DayGrid\\RowList.tsx":"27","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DayGrid\\DayGrid.tsx":"28","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Main\\Main.tsx":"29","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\Loading.tsx":"30","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\ScheduleRange.tsx":"31","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\store.ts":"32","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\Range.tsx":"33","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\EditPopup.tsx":"34","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\GridNav\\GridNav.tsx":"35","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\Calendar.tsx":"36","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\ErrorIndicator.tsx":"37","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\datePicker.ts":"38","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\index.ts":"39","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\DayList.tsx":"40","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\CreatePopup.tsx":"41","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\range.ts":"42","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\buildYearsList.ts":"43","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\grid.ts":"44","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\buildRange.ts":"45","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\action-types.ts":"46","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\SelectedDate.tsx":"47","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DayGrid\\buildDayGrid.ts":"48","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\NextEvents.tsx":"49","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\DatePicker.tsx":"50","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\FormElements\\Select.tsx":"51","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\FormElements\\RadioBtn.tsx":"52","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\App.tsx":"53","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\Popups.tsx":"54","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\RangeDatePicker.tsx":"55"},{"size":330,"mtime":1611955130117,"results":"56","hashOfConfig":"57"},{"size":109,"mtime":1610549234544,"results":"58","hashOfConfig":"57"},{"size":2061,"mtime":1611506935537,"results":"59","hashOfConfig":"57"},{"size":368,"mtime":1610449634822,"results":"60","hashOfConfig":"57"},{"size":793,"mtime":1611757147268,"results":"61","hashOfConfig":"57"},{"size":2376,"mtime":1611926863330,"results":"62","hashOfConfig":"57"},{"size":808,"mtime":1610583497072,"results":"63","hashOfConfig":"57"},{"size":2504,"mtime":1611165987062,"results":"64","hashOfConfig":"57"},{"size":1311,"mtime":1611676620739,"results":"65","hashOfConfig":"57"},{"size":2633,"mtime":1611956212199,"results":"66","hashOfConfig":"57"},{"size":3116,"mtime":1611676746886,"results":"67","hashOfConfig":"57"},{"size":1639,"mtime":1611174771160,"results":"68","hashOfConfig":"57"},{"size":519,"mtime":1611312628661,"results":"69","hashOfConfig":"57"},{"size":1962,"mtime":1611833355246,"results":"70","hashOfConfig":"57"},{"size":1652,"mtime":1611744064535,"results":"71","hashOfConfig":"57"},{"size":582,"mtime":1610722143380,"results":"72","hashOfConfig":"57"},{"size":1419,"mtime":1611318602799,"results":"73","hashOfConfig":"57"},{"size":1402,"mtime":1611145756659,"results":"74","hashOfConfig":"57"},{"size":1873,"mtime":1611757142333,"results":"75","hashOfConfig":"57"},{"size":1377,"mtime":1611151452872,"results":"76","hashOfConfig":"57"},{"size":675,"mtime":1611142427689,"results":"77","hashOfConfig":"57"},{"size":462,"mtime":1610579318799,"results":"78","hashOfConfig":"57"},{"size":457,"mtime":1611313006319,"results":"79","hashOfConfig":"57"},{"size":107,"mtime":1610549572742,"results":"80","hashOfConfig":"57"},{"size":1001,"mtime":1611150401301,"results":"81","hashOfConfig":"57"},{"size":1674,"mtime":1611223488534,"results":"82","hashOfConfig":"57"},{"size":2328,"mtime":1611655009984,"results":"83","hashOfConfig":"57"},{"size":887,"mtime":1611651575959,"results":"84","hashOfConfig":"57"},{"size":611,"mtime":1611954761527,"results":"85","hashOfConfig":"57"},{"size":923,"mtime":1611668987948,"results":"86","hashOfConfig":"57"},{"size":1444,"mtime":1611953037864,"results":"87","hashOfConfig":"57"},{"size":611,"mtime":1610982428326,"results":"88","hashOfConfig":"57"},{"size":1808,"mtime":1611999280091,"results":"89","hashOfConfig":"57"},{"size":1488,"mtime":1611506964243,"results":"90","hashOfConfig":"57"},{"size":3144,"mtime":1611142077824,"results":"91","hashOfConfig":"57"},{"size":2470,"mtime":1611746886265,"results":"92","hashOfConfig":"57"},{"size":127,"mtime":1610983015923,"results":"93","hashOfConfig":"57"},{"size":394,"mtime":1611141736200,"results":"94","hashOfConfig":"57"},{"size":2021,"mtime":1611997720084,"results":"95","hashOfConfig":"57"},{"size":1929,"mtime":1611507287883,"results":"96","hashOfConfig":"57"},{"size":1309,"mtime":1611506956027,"results":"97","hashOfConfig":"57"},{"size":2076,"mtime":1611744013665,"results":"98","hashOfConfig":"57"},{"size":450,"mtime":1610580115348,"results":"99","hashOfConfig":"57"},{"size":2492,"mtime":1611175879651,"results":"100","hashOfConfig":"57"},{"size":1899,"mtime":1611931869431,"results":"101","hashOfConfig":"57"},{"size":1337,"mtime":1611743966927,"results":"102","hashOfConfig":"57"},{"size":2193,"mtime":1611164515363,"results":"103","hashOfConfig":"57"},{"size":467,"mtime":1610581676848,"results":"104","hashOfConfig":"57"},{"size":2180,"mtime":1611932430708,"results":"105","hashOfConfig":"57"},{"size":2756,"mtime":1611919288412,"results":"106","hashOfConfig":"57"},{"size":1885,"mtime":1611919368957,"results":"107","hashOfConfig":"57"},{"size":1147,"mtime":1611928344250,"results":"108","hashOfConfig":"57"},{"size":430,"mtime":1611955076117,"results":"109","hashOfConfig":"57"},{"size":761,"mtime":1611954554666,"results":"110","hashOfConfig":"57"},{"size":1528,"mtime":1611999472903,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1decv2q",{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"119"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"127"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"127"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"127"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"122"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\index.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\index.ts",[],["235","236"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Header\\Header.tsx",[],["237","238"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Day\\Day.tsx",[],["239","240"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\RangeBtn\\RangeBtn.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\NextDays.tsx",[],["241","242"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\TimeRuler\\TimeRuler.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\CreateEditPopupView.tsx",[],["243","244"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\MonthDropdown.tsx",["245"],"import React, { useState, useEffect } from 'react';\r\nimport { buildMonthsList } from './buildMonthsList';\r\n\r\ninterface MonthDropdownProps {\r\n  date: moment.Moment;\r\n  onChangeMonth: (month: moment.Moment) => void;\r\n  onSelectedMonthClick: () => void;\r\n}\r\n\r\nconst MonthDropdown: React.FC<MonthDropdownProps> = ({\r\n  date,\r\n  onChangeMonth,\r\n  onSelectedMonthClick,\r\n}) => {\r\n  const [activeMonth, setActiveMonth] = useState<moment.Moment>(date);\r\n  const [monthsList, setmonthsList] = useState<moment.Moment[]>([]);\r\n\r\n  useEffect(() => {\r\n    setmonthsList(buildMonthsList(date));\r\n  }, []);\r\n\r\n  const onMonthClick = (month: moment.Moment) => () => {\r\n    setActiveMonth(month);\r\n    onChangeMonth(month);\r\n    onSelectedMonthClick();\r\n  };\r\n\r\n  return (\r\n    <ul className='datepicker__month-dropdown'>\r\n      {monthsList.map((item: moment.Moment, idx: number) => {\r\n        const className = item.isSame(activeMonth, 'month')\r\n          ? 'datepicker__month-name datepicker__month-name_selected'\r\n          : 'datepicker__month-name';\r\n\r\n        return (\r\n          <li onClick={onMonthClick(item)} key={idx} className={className}>\r\n            {item.format('MMMM')}\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default React.memo(MonthDropdown);\r\n// export default MonthDropdown;\r\n","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\PreviewPopup.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\YearDropdown.tsx",["246"],"import React, { useState, useEffect } from 'react';\r\nimport { buildYearsList } from './buildYearsList';\r\nimport upBtnImg from '../../img/angle-up.svg';\r\nimport downBtnImg from '../../img/angle-down.svg';\r\n\r\ninterface CalendarProps {\r\n  date: moment.Moment;\r\n  onChangeYear: (year: moment.Moment) => void;\r\n  onSelectedYearClick: () => void;\r\n}\r\n\r\nconst YearDwopdown: React.FC<CalendarProps> = ({\r\n  date,\r\n  onChangeYear,\r\n  onSelectedYearClick,\r\n}) => {\r\n  const [yearsList, setYearsList] = useState<{\r\n    years: moment.Moment[];\r\n    middle: moment.Moment;\r\n  }>({\r\n    years: [],\r\n    middle: date,\r\n  });\r\n  const [activeYear, setActiveYear] = useState<moment.Moment>(date);\r\n\r\n  useEffect(() => {\r\n    setYearsList({ ...yearsList, years: buildYearsList(date) });\r\n  }, []);\r\n\r\n  const onBtnUpClick = (): void => {\r\n    setYearsList((prevState) => {\r\n      const newMiddle: moment.Moment = prevState.middle.clone().add(1, 'year');\r\n      const newYearsList: moment.Moment[] = buildYearsList(newMiddle);\r\n\r\n      return { years: newYearsList, middle: newMiddle };\r\n    });\r\n  };\r\n\r\n  const onBtnDownClick = (): void => {\r\n    setYearsList((prevState) => {\r\n      const newMiddle: moment.Moment = prevState.middle\r\n        .clone()\r\n        .subtract(1, 'year');\r\n      const newYearsList: moment.Moment[] = buildYearsList(newMiddle);\r\n\r\n      return { years: newYearsList, middle: newMiddle };\r\n    });\r\n  };\r\n\r\n  const onYearClick = (year: moment.Moment) => (): void => {\r\n    setActiveYear(year);\r\n    setYearsList({ years: buildYearsList(year), middle: year });\r\n    onChangeYear(year);\r\n    onSelectedYearClick();\r\n  };\r\n\r\n  return (\r\n    <ul className='datepicker__year-dropdown'>\r\n      <li\r\n        onClick={onBtnUpClick}\r\n        className='datepicker__year-option datepicker__year-option_btn'\r\n      >\r\n        {/* <span className='datepicker__navigation datepicker__navigation_years-upcoming icon icon-up-open-big'> */}\r\n        <div className='datepicker__navigation datepicker__navigation_years-upcoming'>\r\n          <img className='datepicker__btn-img' src={upBtnImg} alt='^' />\r\n        </div>\r\n      </li>\r\n      {yearsList.years.map((item: moment.Moment, idx: number) => {\r\n        const className: string = item.isSame(activeYear, 'year')\r\n          ? 'datepicker__year-option_selected'\r\n          : '';\r\n\r\n        return (\r\n          <li\r\n            onClick={onYearClick(item)}\r\n            key={idx}\r\n            className={`datepicker__year-option ${className}`}\r\n          >\r\n            {item.format('YYYY')}\r\n          </li>\r\n        );\r\n      })}\r\n      <li\r\n        onClick={onBtnDownClick}\r\n        className='datepicker__year-option datepicker__year-option_btn'\r\n      >\r\n        {/* <span className='datepicker__navigation datepicker__navigation_years-previous icon icon-down-open-big'> */}\r\n        <div className='datepicker__navigation datepicker__navigation_years-previous'>\r\n          <img className='datepicker__btn-img' src={downBtnImg} alt='v' />\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default React.memo(YearDwopdown);\r\n// export default YearDwopdown;\r\n","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\grid.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\buildCalendar.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\hooks.tsx",["247"],"import React, { useEffect, useRef, useState } from 'react';\r\n\r\ntype IUseClickOutside = React.RefObject<HTMLDivElement>;\r\n\r\nexport const useClickOutside = (\r\n  setIsComponentVisible: React.Dispatch<boolean>\r\n): IUseClickOutside => {\r\n  const ref = useRef<HTMLDivElement>(null);\r\n\r\n  const handleHideDropdown = (event: KeyboardEvent): void => {\r\n    if (event.key === 'Escape') {\r\n      setIsComponentVisible(false);\r\n    }\r\n  };\r\n\r\n  const handleClickOutside = ({ target }: MouseEvent) => {\r\n    if (ref.current && !ref.current.contains(target as HTMLDivElement)) {\r\n      setIsComponentVisible(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('keydown', handleHideDropdown, true);\r\n    document.addEventListener('click', handleClickOutside, true);\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handleHideDropdown, true);\r\n      document.removeEventListener('click', handleClickOutside, true);\r\n    };\r\n  }, []);\r\n\r\n  return ref;\r\n};\r\n\r\ntype IFormEvent = React.FormEvent<HTMLInputElement | HTMLTextAreaElement>;\r\ninterface IUseInput {\r\n  value: string;\r\n  onChange: (event: IFormEvent) => void;\r\n}\r\n\r\nexport const useInput = (\r\n  initialValue: string,\r\n  maxLength?: number,\r\n  pattern?: RegExp\r\n): IUseInput => {\r\n  const [value, setValue] = useState<string>(initialValue);\r\n\r\n  // useCallback ???\r\n  const onChange = (event: IFormEvent): void => {\r\n    const value = event.currentTarget.value;\r\n\r\n    if (!(maxLength !== undefined && value.length > maxLength)) {\r\n      if (pattern === undefined) {\r\n        setValue(value);\r\n      } else if (value === '' || pattern.test(value)) {\r\n        setValue(value);\r\n      }\r\n    }\r\n  };\r\n\r\n  return {\r\n    value,\r\n    onChange,\r\n  };\r\n};\r\n\r\ntype IUseFocus = React.RefObject<HTMLInputElement>;\r\n\r\nexport const useFocus = (): IUseFocus => {\r\n  const ref = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    ref.current!.focus();\r\n  }, []);\r\n\r\n  return ref;\r\n};\r\n","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\range.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\services\\firebase\\config.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\EventList.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\DeletePopup.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\Tooltip.tsx",[],["248","249"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\popups.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\datePicker.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\buildMonthsList.ts",[],["250","251"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\isDayHasEvents.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\index.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\popups.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\services\\SchedulerService.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DayGrid\\RowList.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DayGrid\\DayGrid.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Main\\Main.tsx",["252"],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Day, ScheduleRange } from '../../components';\r\nimport { fetchEvents } from '../../redux/actions';\r\nimport { RootState } from '../../redux/store';\r\n\r\nconst Main: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    range: { isRangeVisible },\r\n  } = useSelector((state: RootState) => state);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchEvents());\r\n  }, []);\r\n\r\n  return (\r\n    <main className='main'>{isRangeVisible ? <ScheduleRange /> : <Day />}</main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\Loading.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\ScheduleRange.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\store.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\Range.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\EditPopup.tsx",[],["253","254"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\GridNav\\GridNav.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\Calendar.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\ErrorIndicator.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\datePicker.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\index.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\DayList.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\CreatePopup.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\range.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\buildYearsList.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\grid.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\buildRange.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\action-types.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\SelectedDate.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DayGrid\\buildDayGrid.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\NextEvents.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\DatePicker.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\FormElements\\Select.tsx",["255"],"import React, { useState, useEffect } from 'react';\r\nimport { useClickOutside } from '../supports/hooks';\r\n\r\ninterface SelectProps {\r\n  defaultSelected: string;\r\n  options: string[];\r\n  onOptionClick: React.Dispatch<string>;\r\n}\r\n\r\nconst Select: React.FC<SelectProps> = ({\r\n  options,\r\n  onOptionClick,\r\n  defaultSelected,\r\n}) => {\r\n  const [selectedOption, setSelectedOption] = useState<string>(defaultSelected);\r\n  const [showOptionList, setShowOptionList] = useState<boolean>(false);\r\n  const [optionsList, setOptionsList] = useState<string[]>(['']);\r\n  const selectRef = useClickOutside(setShowOptionList);\r\n\r\n  useEffect(() => {\r\n    setOptionsList(options);\r\n  }, []);\r\n\r\n  const handleListDisplay = () => {\r\n    setShowOptionList((prevState) => !prevState);\r\n  };\r\n\r\n  const handleOptionClick = (e: React.MouseEvent<HTMLLIElement>) => {\r\n    const optionName = e.currentTarget.getAttribute('data-name') || '';\r\n\r\n    setSelectedOption(optionName);\r\n    setShowOptionList(false);\r\n    onOptionClick(optionName);\r\n  };\r\n\r\n  const active = showOptionList ? 'select_active' : '';\r\n\r\n  return (\r\n    <div ref={selectRef} className={`select ${active}`}>\r\n      <div className={`select__selected-text`} onClick={handleListDisplay}>\r\n        {selectedOption}\r\n      </div>\r\n\r\n      {showOptionList && (\r\n        <ul className='select__options'>\r\n          {optionsList.map((option, idx) => {\r\n            const selected =\r\n              selectedOption === option ? 'select__option_selected' : '';\r\n\r\n            return (\r\n              <li\r\n                className={`select__option ${selected}`}\r\n                data-name={option}\r\n                key={idx}\r\n                onClick={handleOptionClick}\r\n              >\r\n                {option}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Select);\r\n","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\FormElements\\RadioBtn.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\App.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\Popups.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\RangeDatePicker.tsx",[],{"ruleId":"256","replacedBy":"257"},{"ruleId":"258","replacedBy":"259"},{"ruleId":"256","replacedBy":"260"},{"ruleId":"258","replacedBy":"261"},{"ruleId":"256","replacedBy":"262"},{"ruleId":"258","replacedBy":"263"},{"ruleId":"256","replacedBy":"264"},{"ruleId":"258","replacedBy":"265"},{"ruleId":"256","replacedBy":"266"},{"ruleId":"258","replacedBy":"267"},{"ruleId":"268","severity":1,"message":"269","line":20,"column":6,"nodeType":"270","endLine":20,"endColumn":8,"suggestions":"271"},{"ruleId":"268","severity":1,"message":"272","line":28,"column":6,"nodeType":"270","endLine":28,"endColumn":8,"suggestions":"273"},{"ruleId":"268","severity":1,"message":"274","line":30,"column":6,"nodeType":"270","endLine":30,"endColumn":8,"suggestions":"275"},{"ruleId":"256","replacedBy":"276"},{"ruleId":"258","replacedBy":"277"},{"ruleId":"256","replacedBy":"278"},{"ruleId":"258","replacedBy":"279"},{"ruleId":"268","severity":1,"message":"280","line":15,"column":6,"nodeType":"270","endLine":15,"endColumn":8,"suggestions":"281"},{"ruleId":"256","replacedBy":"282"},{"ruleId":"258","replacedBy":"283"},{"ruleId":"268","severity":1,"message":"284","line":22,"column":6,"nodeType":"270","endLine":22,"endColumn":8,"suggestions":"285"},"no-native-reassign",["286"],"no-negated-in-lhs",["287"],["286"],["287"],["286"],["287"],["286"],["287"],["286"],["287"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'date'. Either include it or remove the dependency array. If 'setmonthsList' needs the current value of 'date', you can also switch to useReducer instead of useState and read 'date' in the reducer.","ArrayExpression",["288"],"React Hook useEffect has missing dependencies: 'date' and 'yearsList'. Either include them or remove the dependency array. You can also do a functional update 'setYearsList(y => ...)' if you only need 'yearsList' in the 'setYearsList' call.",["289"],"React Hook useEffect has missing dependencies: 'handleClickOutside' and 'handleHideDropdown'. Either include them or remove the dependency array.",["290"],["286"],["287"],["286"],["287"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["291"],["286"],["287"],"React Hook useEffect has a missing dependency: 'options'. Either include it or remove the dependency array. If 'setOptionsList' needs the current value of 'options', you can also switch to useReducer instead of useState and read 'options' in the reducer.",["292"],"no-global-assign","no-unsafe-negation",{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},"Update the dependencies array to be: [date]",{"range":"303","text":"304"},"Update the dependencies array to be: [date, yearsList]",{"range":"305","text":"306"},"Update the dependencies array to be: [handleClickOutside, handleHideDropdown]",{"range":"307","text":"308"},"Update the dependencies array to be: [dispatch]",{"range":"309","text":"310"},"Update the dependencies array to be: [options]",{"range":"311","text":"312"},[587,589],"[date]",[775,777],"[date, yearsList]",[956,958],"[handleClickOutside, handleHideDropdown]",[475,477],"[dispatch]",[669,671],"[options]"]