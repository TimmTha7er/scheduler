[{"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Admin\\UserList.tsx":"1","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\AdminPage.tsx":"2","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\store.ts":"3","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\App.tsx":"4","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Header\\Header.tsx":"5","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ControlPanel\\RangeBtn.tsx":"6","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ControlPanel\\GridNav.tsx":"7","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\YearDropdown.tsx":"8","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\EventList.tsx":"9","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\Range.tsx":"10","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\NextDaysForm.tsx":"11","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\RangeDatePicker.tsx":"12","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\FormElements\\Select.tsx":"13","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Day\\TimeRuler.tsx":"14","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\EditPopup.tsx":"15","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\DeletePopup.tsx":"16","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\Popups.tsx":"17","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\NotFound.tsx":"18","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\Loaders\\ScheduleFormLoader.tsx":"19","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\auth\\PublicRoute.tsx":"20","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Admin\\AdminControlPanel.tsx":"21","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Admin\\AdminRangeBtn.tsx":"22","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\grid.ts":"23","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\admin.ts":"24","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\buildRange.ts":"25","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\hooks.tsx":"26","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\isDayHasEvents.ts":"27","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\buildCalendar.ts":"28","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\datePicker.ts":"29","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\range.ts":"30","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\admin.ts":"31","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\SchedulePage.tsx":"32","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\ForgotPasswordPage.tsx":"33","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\services\\AuthService.ts":"34","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\index.tsx":"35","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\index.ts":"36","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\Calendar.tsx":"37","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\DatePicker.tsx":"38","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\DayList.tsx":"39","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\ScheduleNav.tsx":"40","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Day\\DayGrid.tsx":"41","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Day\\RowList.tsx":"42","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\Message.tsx":"43","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\Loaders\\UserBarLoader.tsx":"44","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\Loaders\\ControlPanelLoader.tsx":"45","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\Loaders\\ScheduleNavLoader.tsx":"46","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\datePicker.ts":"47","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\auth.ts":"48","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Day\\buildDayGrid.ts":"49","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\services\\SchedulerService.ts":"50","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\action-types.ts":"51","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\index.ts":"52","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\auth.ts":"53","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\NextEventsPage.tsx":"54","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\SignInPage.tsx":"55","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Header\\UserBar.tsx":"56","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Admin\\AdminEditPopup.tsx":"57","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Admin\\AdminPreviewPopup.tsx":"58","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\RangePage.tsx":"59","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\services\\AdminService.ts":"60","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\MonthDropdown.tsx":"61","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\Tooltip.tsx":"62","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\NextDays.tsx":"63","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Day\\Day.tsx":"64","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\CreatePopup.tsx":"65","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\Loaders\\DayLoader.tsx":"66","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\Loaders\\EventListLoader.tsx":"67","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\popups.ts":"68","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\NextDaysPage.tsx":"69","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\index.ts":"70","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Admin\\AdminEventList.tsx":"71","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\NextEventsForm.tsx":"72","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\NextEvents.tsx":"73","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\PreviewPopup.tsx":"74","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\auth\\AdminRoute.tsx":"75","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\utils\\messages.ts":"76","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\buildMonthsList.ts":"77","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\grid.ts":"78","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\SignUpPage.tsx":"79","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Admin\\UserListBody.tsx":"80","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ControlPanel\\ControlPanel.tsx":"81","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\SelectedDate.tsx":"82","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\EmptyDayList.tsx":"83","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\CreateEditPopupView.tsx":"84","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\ErrorIndicator.tsx":"85","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\Loaders\\DayGridLoader.tsx":"86","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\auth\\PrivateRoute.tsx":"87","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\HomePage.tsx":"88","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\Loaders\\UserListLoader.tsx":"89","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\RangeForm.tsx":"90","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\index.ts":"91","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\Loaders\\AdminPageLoader.tsx":"92","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\FormElements\\RadioBtn.tsx":"93","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\services\\firebase\\config.ts":"94","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\popups.ts":"95","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\DayPage.tsx":"96","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\buildYearsList.ts":"97"},{"size":2864,"mtime":1614168426814,"results":"98","hashOfConfig":"99"},{"size":1306,"mtime":1614167523221,"results":"100","hashOfConfig":"99"},{"size":938,"mtime":1613514780420,"results":"101","hashOfConfig":"99"},{"size":2486,"mtime":1614167933577,"results":"102","hashOfConfig":"99"},{"size":645,"mtime":1613576730483,"results":"103","hashOfConfig":"99"},{"size":1380,"mtime":1613491647238,"results":"104","hashOfConfig":"99"},{"size":4355,"mtime":1613581680848,"results":"105","hashOfConfig":"99"},{"size":3083,"mtime":1613491778458,"results":"106","hashOfConfig":"99"},{"size":1388,"mtime":1613658832520,"results":"107","hashOfConfig":"99"},{"size":1158,"mtime":1613673818289,"results":"108","hashOfConfig":"99"},{"size":3714,"mtime":1614022056025,"results":"109","hashOfConfig":"99"},{"size":1596,"mtime":1613672703835,"results":"110","hashOfConfig":"99"},{"size":2238,"mtime":1613581813672,"results":"111","hashOfConfig":"99"},{"size":808,"mtime":1613657266326,"results":"112","hashOfConfig":"99"},{"size":1463,"mtime":1613917142422,"results":"113","hashOfConfig":"99"},{"size":1402,"mtime":1611145756659,"results":"114","hashOfConfig":"99"},{"size":971,"mtime":1614024598825,"results":"115","hashOfConfig":"99"},{"size":562,"mtime":1614081178203,"results":"116","hashOfConfig":"99"},{"size":554,"mtime":1613661891083,"results":"117","hashOfConfig":"99"},{"size":1108,"mtime":1613905485197,"results":"118","hashOfConfig":"99"},{"size":1208,"mtime":1613995722934,"results":"119","hashOfConfig":"99"},{"size":619,"mtime":1614024124877,"results":"120","hashOfConfig":"99"},{"size":1639,"mtime":1611174771160,"results":"121","hashOfConfig":"99"},{"size":1724,"mtime":1614168245822,"results":"122","hashOfConfig":"99"},{"size":1899,"mtime":1611931869431,"results":"123","hashOfConfig":"99"},{"size":2028,"mtime":1613570951882,"results":"124","hashOfConfig":"99"},{"size":457,"mtime":1611313006319,"results":"125","hashOfConfig":"99"},{"size":519,"mtime":1611312628661,"results":"126","hashOfConfig":"99"},{"size":394,"mtime":1611141736200,"results":"127","hashOfConfig":"99"},{"size":2103,"mtime":1613506107327,"results":"128","hashOfConfig":"99"},{"size":1850,"mtime":1614167954041,"results":"129","hashOfConfig":"99"},{"size":1658,"mtime":1614084288133,"results":"130","hashOfConfig":"99"},{"size":2259,"mtime":1613685550812,"results":"131","hashOfConfig":"99"},{"size":1657,"mtime":1614014684031,"results":"132","hashOfConfig":"99"},{"size":462,"mtime":1613170002305,"results":"133","hashOfConfig":"99"},{"size":160,"mtime":1613210323105,"results":"134","hashOfConfig":"99"},{"size":2148,"mtime":1613491684770,"results":"135","hashOfConfig":"99"},{"size":2755,"mtime":1612694174422,"results":"136","hashOfConfig":"99"},{"size":2577,"mtime":1614087247496,"results":"137","hashOfConfig":"99"},{"size":2111,"mtime":1614084266934,"results":"138","hashOfConfig":"99"},{"size":879,"mtime":1614085815739,"results":"139","hashOfConfig":"99"},{"size":2317,"mtime":1614087128869,"results":"140","hashOfConfig":"99"},{"size":504,"mtime":1612796567491,"results":"141","hashOfConfig":"99"},{"size":546,"mtime":1613660951242,"results":"142","hashOfConfig":"99"},{"size":741,"mtime":1613660915885,"results":"143","hashOfConfig":"99"},{"size":567,"mtime":1613661857807,"results":"144","hashOfConfig":"99"},{"size":675,"mtime":1611142427689,"results":"145","hashOfConfig":"99"},{"size":1482,"mtime":1613685947349,"results":"146","hashOfConfig":"99"},{"size":467,"mtime":1610581676848,"results":"147","hashOfConfig":"99"},{"size":2211,"mtime":1613416090902,"results":"148","hashOfConfig":"99"},{"size":2639,"mtime":1614167254917,"results":"149","hashOfConfig":"99"},{"size":566,"mtime":1613674321117,"results":"150","hashOfConfig":"99"},{"size":3089,"mtime":1613747967015,"results":"151","hashOfConfig":"99"},{"size":1041,"mtime":1614084036863,"results":"152","hashOfConfig":"99"},{"size":2683,"mtime":1613903441324,"results":"153","hashOfConfig":"99"},{"size":1227,"mtime":1614022346638,"results":"154","hashOfConfig":"99"},{"size":2404,"mtime":1614024069482,"results":"155","hashOfConfig":"99"},{"size":3443,"mtime":1614024095760,"results":"156","hashOfConfig":"99"},{"size":1275,"mtime":1614083658785,"results":"157","hashOfConfig":"99"},{"size":1859,"mtime":1614167978622,"results":"158","hashOfConfig":"99"},{"size":1277,"mtime":1613491711516,"results":"159","hashOfConfig":"99"},{"size":1826,"mtime":1612183231854,"results":"160","hashOfConfig":"99"},{"size":1318,"mtime":1613670672501,"results":"161","hashOfConfig":"99"},{"size":595,"mtime":1613658651385,"results":"162","hashOfConfig":"99"},{"size":1288,"mtime":1613917151151,"results":"163","hashOfConfig":"99"},{"size":1062,"mtime":1613660929865,"results":"164","hashOfConfig":"99"},{"size":971,"mtime":1613660935802,"results":"165","hashOfConfig":"99"},{"size":1377,"mtime":1611151452872,"results":"166","hashOfConfig":"99"},{"size":1208,"mtime":1614084023114,"results":"167","hashOfConfig":"99"},{"size":3770,"mtime":1614077453282,"results":"168","hashOfConfig":"99"},{"size":1471,"mtime":1614008212592,"results":"169","hashOfConfig":"99"},{"size":3105,"mtime":1614021997114,"results":"170","hashOfConfig":"99"},{"size":1398,"mtime":1613672231930,"results":"171","hashOfConfig":"99"},{"size":2717,"mtime":1613910029494,"results":"172","hashOfConfig":"99"},{"size":851,"mtime":1613905374533,"results":"173","hashOfConfig":"99"},{"size":1157,"mtime":1612627718750,"results":"174","hashOfConfig":"99"},{"size":462,"mtime":1610579318799,"results":"175","hashOfConfig":"99"},{"size":2408,"mtime":1613398472488,"results":"176","hashOfConfig":"99"},{"size":2936,"mtime":1613683769825,"results":"177","hashOfConfig":"99"},{"size":1641,"mtime":1614104583547,"results":"178","hashOfConfig":"99"},{"size":2558,"mtime":1613657932038,"results":"179","hashOfConfig":"99"},{"size":2163,"mtime":1613491731528,"results":"180","hashOfConfig":"99"},{"size":514,"mtime":1612696131639,"results":"181","hashOfConfig":"99"},{"size":2769,"mtime":1613570861278,"results":"182","hashOfConfig":"99"},{"size":539,"mtime":1614087016119,"results":"183","hashOfConfig":"99"},{"size":731,"mtime":1613660924485,"results":"184","hashOfConfig":"99"},{"size":974,"mtime":1613491378715,"results":"185","hashOfConfig":"99"},{"size":402,"mtime":1612780851386,"results":"186","hashOfConfig":"99"},{"size":2074,"mtime":1614169218662,"results":"187","hashOfConfig":"99"},{"size":2279,"mtime":1613673822926,"results":"188","hashOfConfig":"99"},{"size":158,"mtime":1613210476726,"results":"189","hashOfConfig":"99"},{"size":994,"mtime":1614087694756,"results":"190","hashOfConfig":"99"},{"size":1498,"mtime":1613570927151,"results":"191","hashOfConfig":"99"},{"size":647,"mtime":1612449485471,"results":"192","hashOfConfig":"99"},{"size":1001,"mtime":1611150401301,"results":"193","hashOfConfig":"99"},{"size":1367,"mtime":1613906356460,"results":"194","hashOfConfig":"99"},{"size":450,"mtime":1610580115348,"results":"195","hashOfConfig":"99"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1decv2q",{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"201"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"201"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"225"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"248"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"260"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"201"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"201"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"225"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"221"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"329","messages":"330","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"201"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"334","messages":"335","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"221"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"201"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"372","messages":"373","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"225"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"377","messages":"378","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"395","messages":"396","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"201"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Admin\\UserList.tsx",["412"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\AdminPage.tsx",["413"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../redux/store';\r\nimport { UserList, AdminPageLoader } from '../components';\r\nimport { useQuery } from '../components/supports/hooks';\r\nimport { useHistory } from 'react-router';\r\nimport { setSortOrder, setOrder } from '../redux/actions';\r\n\r\nconst AdminPage: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    auth: { loading },\r\n    admin: { orderBy, order },\r\n  } = useSelector((state: RootState) => state);\r\n  const history = useHistory();\r\n  const query = useQuery();\r\n  const sortOrderBy = query.get('orderBy') || '';\r\n  const sortOrder = query.get('order') || '';\r\n\r\n  useEffect(() => {\r\n    if (!sortOrderBy || (sortOrder !== 'asc' && sortOrder !== 'desc')) {\r\n      history.replace({\r\n        search: `?orderBy=${orderBy}&order=${order}`,\r\n      });\r\n    } else {\r\n      dispatch(setSortOrder(sortOrderBy));\r\n      dispatch(setOrder(sortOrder));\r\n    }\r\n  }, [sortOrderBy, sortOrder]);\r\n\r\n  if (loading) {\r\n    return <AdminPageLoader />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='admin'>\r\n        <div className='admin__title'>Пользователи</div>\r\n        <UserList />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminPage;\r\n",["414","415"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\store.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\App.tsx",["416"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Header\\Header.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ControlPanel\\RangeBtn.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ControlPanel\\GridNav.tsx",[],["417","418"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\YearDropdown.tsx",["419"],"import React, { useState, useEffect } from 'react';\r\nimport { buildYearsList } from './buildYearsList';\r\nimport upBtnImg from '../../img/angle-up.svg';\r\nimport downBtnImg from '../../img/angle-down.svg';\r\n\r\ninterface CalendarProps {\r\n  date: moment.Moment;\r\n  onChangeYear: (year: moment.Moment) => void;\r\n  onSelectedYearClick: () => void;\r\n}\r\n\r\nconst YearDwopdown: React.FC<CalendarProps> = ({\r\n  date,\r\n  onChangeYear,\r\n  onSelectedYearClick,\r\n}) => {\r\n  const [yearsList, setYearsList] = useState<{\r\n    years: moment.Moment[];\r\n    middle: moment.Moment;\r\n  }>({\r\n    years: [],\r\n    middle: date,\r\n  });\r\n  const [activeYear, setActiveYear] = useState<moment.Moment>(date);\r\n\r\n  useEffect(() => {\r\n    setYearsList({ ...yearsList, years: buildYearsList(date) });\r\n  }, []);\r\n\r\n  const onBtnUpClick = (): void => {\r\n    setYearsList((prevState) => {\r\n      const newMiddle: moment.Moment = prevState.middle.clone().add(1, 'year');\r\n      const newYearsList: moment.Moment[] = buildYearsList(newMiddle);\r\n\r\n      return { years: newYearsList, middle: newMiddle };\r\n    });\r\n  };\r\n\r\n  const onBtnDownClick = (): void => {\r\n    setYearsList((prevState) => {\r\n      const newMiddle: moment.Moment = prevState.middle\r\n        .clone()\r\n        .subtract(1, 'year');\r\n      const newYearsList: moment.Moment[] = buildYearsList(newMiddle);\r\n\r\n      return { years: newYearsList, middle: newMiddle };\r\n    });\r\n  };\r\n\r\n  const onYearClick = (year: moment.Moment) => (): void => {\r\n    setActiveYear(year);\r\n    setYearsList({ years: buildYearsList(year), middle: year });\r\n    onChangeYear(year);\r\n    onSelectedYearClick();\r\n  };\r\n\r\n  return (\r\n    <ul className='datepicker__year-dropdown'>\r\n      <li\r\n        onClick={onBtnUpClick}\r\n        className='datepicker__year-option datepicker__year-option_btn'\r\n      >\r\n        {/* <span className='datepicker__navigation datepicker__navigation_years-upcoming icon icon-up-open-big'> */}\r\n        <div className='datepicker__navigation datepicker__navigation_years-upcoming'>\r\n          <img className='datepicker__btn-img' src={upBtnImg} alt='^' />\r\n        </div>\r\n      </li>\r\n      {yearsList.years.map((item: moment.Moment, idx: number) => {\r\n        const className: string = item.isSame(activeYear, 'year')\r\n          ? 'datepicker__year-option_selected'\r\n          : '';\r\n\r\n        return (\r\n          <li\r\n            onClick={onYearClick(item)}\r\n            key={idx}\r\n            className={`datepicker__year-option ${className}`}\r\n          >\r\n            {item.format('YYYY')}\r\n          </li>\r\n        );\r\n      })}\r\n      <li\r\n        onClick={onBtnDownClick}\r\n        className='datepicker__year-option datepicker__year-option_btn'\r\n      >\r\n        {/* <span className='datepicker__navigation datepicker__navigation_years-previous icon icon-down-open-big'> */}\r\n        <div className='datepicker__navigation datepicker__navigation_years-previous'>\r\n          <img className='datepicker__btn-img' src={downBtnImg} alt='v' />\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default React.memo(YearDwopdown);\r\n","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\EventList.tsx",[],["420","421"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\Range.tsx",[],["422","423"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\NextDaysForm.tsx",["424"],"import React, { useCallback, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useInput, useFocus, useQuery } from '../supports/hooks';\r\nimport { RootState } from '../../redux/store';\r\nimport { setNextDaysNum, setSelectValue } from '../../redux/actions';\r\nimport { Select } from '../../components';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst NextDays: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    range: { selectValue },\r\n    admin: { selectedUser },\r\n    auth: { user },\r\n  } = useSelector((state: RootState) => state);\r\n  const inputRef = useFocus();\r\n\r\n  const history = useHistory();\r\n  const query = useQuery();\r\n  const num = query.get('num') || '';\r\n  const interval = query.get('interval') || '';\r\n  const numPattern = /^(?:\\d{1}|\\d{2})$/;\r\n  const input = useInput(num, 2, numPattern);\r\n  const uidQuery = user?.role === 'admin' ? `&uid=${selectedUser?.id}` : '';\r\n\r\n  useEffect(() => {\r\n    input.onChange(num);\r\n    dispatch(setNextDaysNum(num));\r\n    dispatch(setSelectValue(interval));\r\n  }, [num, interval]);\r\n\r\n  const handleChange = (event: React.FormEvent<HTMLInputElement>) => {\r\n    const inputValue = event.currentTarget.value;\r\n    const pattern = /^[0-9\\b]+$/;\r\n\r\n    if (pattern.test(inputValue) || inputValue === '') {\r\n      input.onChange(inputValue);\r\n      dispatch(setNextDaysNum(inputValue));\r\n\r\n      history.push({\r\n        search: `?num=${inputValue}&interval=${selectValue}${uidQuery}`,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onOptionClick = useCallback(\r\n    (value) => {\r\n      dispatch(setSelectValue(value));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const onAddBtnClick = (event: React.FormEvent<HTMLButtonElement>) => {\r\n    event.preventDefault();\r\n    inputRef.current!.focus();\r\n    const inputValue = (+input.value + 1).toString();\r\n\r\n    if (numPattern.test(inputValue)) {\r\n      input.onChange(inputValue);\r\n      dispatch(setNextDaysNum(input.value));\r\n\r\n      history.push({\r\n        search: `?num=${inputValue}&interval=${selectValue}${uidQuery}`,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onSubBtnClick = (event: React.FormEvent<HTMLButtonElement>) => {\r\n    event.preventDefault();\r\n    inputRef.current!.focus();\r\n    const inputValue = (+input.value - 1).toString();\r\n\r\n    if (numPattern.test(inputValue)) {\r\n      input.onChange(inputValue);\r\n      dispatch(setNextDaysNum(input.value));\r\n\r\n      history.push({\r\n        search: `?num=${inputValue}&interval=${selectValue}${uidQuery}`,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className='next-days'>\r\n      <div className='next-days__field'>\r\n        <label className='next-days__label' htmlFor=''>\r\n          За ближайшие\r\n        </label>\r\n        <div className='next-events__wrap'>\r\n          <div className='next-days__change-count'>\r\n            <button\r\n              onClick={onAddBtnClick}\r\n              className='next-days__btn-add'\r\n            ></button>\r\n            <input\r\n              value={input.value}\r\n              onChange={handleChange}\r\n              className='next-days__input'\r\n              type='text'\r\n              autoComplete='off'\r\n              maxLength={2}\r\n              ref={inputRef}\r\n            />\r\n            <button\r\n              onClick={onSubBtnClick}\r\n              className='next-days__btn-subtract'\r\n            ></button>\r\n          </div>\r\n          <div className='next-days__text'>\r\n            <Select\r\n              options={['суток', 'часов']}\r\n              defaultSelected={selectValue}\r\n              onOptionClick={onOptionClick}\r\n            ></Select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NextDays;\r\n",["425","426"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\RangeDatePicker.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\FormElements\\Select.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Day\\TimeRuler.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\EditPopup.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\DeletePopup.tsx",[],["427","428"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\Popups.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\NotFound.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\Loaders\\ScheduleFormLoader.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\auth\\PublicRoute.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Admin\\AdminControlPanel.tsx",["429"],"import React, { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setDate } from '../../redux/actions';\r\nimport { RootState } from '../../redux/store';\r\n\r\nimport { GridNav, ControlPanelLoader, AdminRangeBtn } from '../../components';\r\n\r\nconst ControlPanel: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    auth: { loading, user },\r\n    admin: { selectedUser },\r\n  } = useSelector((state: RootState) => state);\r\n\r\n  const setGridDate = useCallback(\r\n    (date: moment.Moment) => {\r\n      return dispatch(setDate(date));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  if (loading) {\r\n    return <ControlPanelLoader />;\r\n  }\r\n\r\n  return (\r\n    <div className='admin-control-panel'>\r\n      <div className='admin-control-panel__selected-user'>\r\n        <div className='admin-control-panel__title'>События пользователя</div>\r\n        <div className='admin-control-panel__user-name'>\r\n          {selectedUser?.email}\r\n        </div>\r\n      </div>\r\n      <div className='admin-control-panel__btns-wrap'>\r\n        <GridNav setDate={setGridDate} />\r\n        <AdminRangeBtn />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ControlPanel;\r\n",["430","431"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Admin\\AdminRangeBtn.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\grid.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\admin.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\buildRange.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\hooks.tsx",["432"],"import React, { useEffect, useRef, useState, useCallback } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\ntype IUseClickOutside = React.RefObject<HTMLDivElement>;\r\n\r\nexport const useClickOutside = (\r\n  setIsComponentVisible: React.Dispatch<boolean>\r\n): IUseClickOutside => {\r\n  const ref = useRef<HTMLDivElement>(null);\r\n\r\n  const handleHideDropdown = (event: KeyboardEvent): void => {\r\n    if (event.key === 'Escape') {\r\n      setIsComponentVisible(false);\r\n    }\r\n  };\r\n\r\n  const handleClickOutside = ({ target }: MouseEvent) => {\r\n    if (ref.current && !ref.current.contains(target as HTMLDivElement)) {\r\n      setIsComponentVisible(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('keydown', handleHideDropdown, true);\r\n    document.addEventListener('click', handleClickOutside, true);\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handleHideDropdown, true);\r\n      document.removeEventListener('click', handleClickOutside, true);\r\n    };\r\n  }, []);\r\n\r\n  return ref;\r\n};\r\n\r\ninterface IUseInput {\r\n  value: string;\r\n  onChange: (value: string) => void;\r\n}\r\n\r\nexport const useInput = (\r\n  initialValue: string,\r\n  maxLength?: number,\r\n  pattern?: RegExp\r\n): IUseInput => {\r\n  const [value, setValue] = useState<string>(initialValue);\r\n\r\n  const onChange = useCallback(\r\n    (value: string): void => {\r\n      if (!(maxLength !== undefined && value.length > maxLength)) {\r\n        if (pattern === undefined) {\r\n          setValue(value);\r\n        } else if (value === '' || pattern.test(value)) {\r\n          setValue(value);\r\n        }\r\n      }\r\n    },\r\n    [maxLength, pattern]\r\n  );\r\n\r\n  return {\r\n    value,\r\n    onChange,\r\n  };\r\n};\r\n\r\ntype IUseFocus = React.RefObject<HTMLInputElement>;\r\n\r\nexport const useFocus = (): IUseFocus => {\r\n  const ref = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    ref.current!.focus();\r\n  }, []);\r\n\r\n  return ref;\r\n};\r\n\r\nexport const useQuery = () => {\r\n  return new URLSearchParams(useLocation().search);\r\n};\r\n",["433","434"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\isDayHasEvents.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\buildCalendar.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\datePicker.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\range.ts",["435"],"import { push } from 'connected-react-router';\r\nimport {\r\n  // TOGGLE_RANGE_VISIBLE,\r\n  SET_START_OF_RANGE,\r\n  SET_END_OF_RANGE,\r\n  SET_LEFT_DATEPICKER_VISIBLE,\r\n  SET_RIGHT_DATEPICKER_VISIBLE,\r\n  // SET_RADIO_BTN_VALUE,\r\n  SET_NEXT_DAYS_NUM,\r\n  SET_NEXT_EVENTS_NUM,\r\n  SET_SELECT_VALUE,\r\n} from '../action-types';\r\nimport { RangeActionsType, RangeThunkActionType } from '../interfaces';\r\n\r\n// export const toggleRangeVisible = (): RangeActionsType => {\r\n//   return {\r\n//     type: TOGGLE_RANGE_VISIBLE,\r\n//   };\r\n// };\r\n\r\nexport const setStartOFRange = (date: moment.Moment): RangeActionsType => {\r\n  return {\r\n    type: SET_START_OF_RANGE,\r\n    payload: date,\r\n  };\r\n};\r\n\r\nexport const setEndOFRange = (date: moment.Moment): RangeActionsType => {\r\n  return {\r\n    type: SET_END_OF_RANGE,\r\n    payload: date,\r\n  };\r\n};\r\n\r\nexport const setLeftDatePickerVisible = (value: boolean): RangeActionsType => {\r\n  return {\r\n    type: SET_LEFT_DATEPICKER_VISIBLE,\r\n    payload: value,\r\n  };\r\n};\r\n\r\nexport const setRightDatePickerVisible = (value: boolean): RangeActionsType => {\r\n  return {\r\n    type: SET_RIGHT_DATEPICKER_VISIBLE,\r\n    payload: value,\r\n  };\r\n};\r\n\r\n// export const setRadioBtnValue = (value: string): RangeActionsType => {\r\n//   return {\r\n//     type: SET_RADIO_BTN_VALUE,\r\n//     payload: value,\r\n//   };\r\n// };\r\n\r\nexport const setNextEventsNum = (value: string): RangeThunkActionType => {\r\n  return async (dispatch) => {\r\n    // dispatch(\r\n    //   // @ts-ignore\r\n    //   push({\r\n    //     search: `?num=${value}`,\r\n    //   })\r\n    // );\r\n\r\n    dispatch({\r\n      type: SET_NEXT_EVENTS_NUM,\r\n      payload: value,\r\n    });\r\n  };\r\n};\r\n\r\n// export const setNextEventsNum = (value: string): RangeActionsType => {\r\n//   return {\r\n//     type: SET_NEXT_EVENTS_NUM,\r\n//     payload: value,\r\n//   };\r\n// };\r\n\r\nexport const setNextDaysNum = (value: string): RangeActionsType => {\r\n  return {\r\n    type: SET_NEXT_DAYS_NUM,\r\n    payload: value,\r\n  };\r\n};\r\n\r\nexport const setSelectValue = (value: string): RangeActionsType => {\r\n  return {\r\n    type: SET_SELECT_VALUE,\r\n    payload: value,\r\n  };\r\n};\r\n","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\admin.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\SchedulePage.tsx",["436","437"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Switch, useHistory, useRouteMatch, Route } from 'react-router-dom';\r\nimport { PrivateRoute, NotFound } from '../components';\r\nimport { useQuery } from '../components/supports/hooks';\r\nimport { fetchEvents, setSelectedUser } from '../redux/actions';\r\nimport { RootState } from '../redux/store';\r\nimport { NextDaysPage, NextEventsPage, RangePage } from './';\r\n\r\nconst SchedulePage: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    auth: { user },\r\n    admin: { users },\r\n  } = useSelector((state: RootState) => state);\r\n  const match = useRouteMatch();\r\n  const history = useHistory();\r\n  const query = useQuery();\r\n  const uid = query.get('uid');\r\n\r\n  useEffect(() => {\r\n    if (user?.role === 'admin' && uid) {\r\n      dispatch(fetchEvents(uid));\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (user?.role === 'admin') {\r\n      if (uid) {\r\n        const selectedUser = users.filter((user) => user.id === uid)[0];\r\n        dispatch(setSelectedUser(selectedUser));\r\n      }\r\n\r\n      if (!uid) {\r\n        history.replace('/admin');\r\n      }\r\n    }\r\n  }, [users]);\r\n\r\n  return (\r\n    <Switch>\r\n      <PrivateRoute exact path={`${match.path}/range`} component={RangePage} />\r\n      <PrivateRoute\r\n        exact\r\n        path={`${match.path}/n-days`}\r\n        component={NextDaysPage}\r\n      />\r\n      <PrivateRoute\r\n        exact\r\n        path={`${match.path}/n-events`}\r\n        component={NextEventsPage}\r\n      />\r\n      <Route exact path='*' component={NotFound} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default SchedulePage;\r\n","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\ForgotPasswordPage.tsx",["438"],"import React, { useState, FormEvent, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { sendPasswordResetEmail, setError, setSuccess } from '../redux/actions';\r\nimport { RootState } from '../redux/store';\r\nimport { Message } from '../components';\r\n\r\nconst ForgotPassword: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const { error, success, loading } = useSelector(\r\n    (state: RootState) => state.auth\r\n  );\r\n  const [email, setEmail] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      dispatch(setError(''));\r\n    }\r\n    if (success) {\r\n      dispatch(setSuccess(''));\r\n    }\r\n  }, []);\r\n\r\n  const submitHandler = async (e: FormEvent) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      sendPasswordResetEmail(\r\n        email,\r\n        'Письмо для сброса пароля отправлено на указанный email!'\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className='forgot-password'>\r\n      <h2 className='forgot-password__title'>Сбросить пароль</h2>\r\n      <form className='forgot-password__form' onSubmit={submitHandler}>\r\n        {error && (\r\n          <Message\r\n            className='forgot-password__message'\r\n            type='danger'\r\n            msg={error}\r\n          />\r\n        )}\r\n        {success && (\r\n          <Message\r\n            className='forgot-password__message'\r\n            type='success'\r\n            msg={success}\r\n          />\r\n        )}\r\n\r\n        <div className='forgot-password__field'>\r\n          <label className='forgot-password__label label' htmlFor='email'>\r\n            Email адрес\r\n          </label>\r\n          <input\r\n            className='forgot-password__input input'\r\n            type='email'\r\n            name='email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.currentTarget.value)}\r\n            // placeholder='Email address'\r\n            autoComplete='off'\r\n          />\r\n        </div>\r\n\r\n        <button className='forgot-password__btn form-button' disabled={loading}>\r\n          {loading ? 'Loading...' : 'Отправить письмо для сброса пароля'}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\services\\AuthService.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\index.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\index.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\Calendar.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\DatePicker.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\DayList.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\ScheduleNav.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Day\\DayGrid.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Day\\RowList.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\Message.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\Loaders\\UserBarLoader.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\Loaders\\ControlPanelLoader.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\Loaders\\ScheduleNavLoader.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\datePicker.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\auth.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Day\\buildDayGrid.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\services\\SchedulerService.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\action-types.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\index.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\auth.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\NextEventsPage.tsx",["439"],"import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../redux/store';\r\nimport { useQuery } from '../components/supports/hooks';\r\nimport { useHistory } from 'react-router';\r\nimport {\r\n  NextEvents,\r\n  ScheduleNav,\r\n  ControlPanel,\r\n  AdminControlPanel,\r\n} from '../components';\r\n\r\nconst NextEventsPage: React.FC = () => {\r\n  const {\r\n    auth: { user },\r\n    range: { nextEventsNum },\r\n  } = useSelector((state: RootState) => state);\r\n\r\n  const history = useHistory();\r\n  const query = useQuery();\r\n  const num = query.get('num') || '';\r\n  const pattern = /^(?:\\d{1}|\\d{2})$/;\r\n\r\n  useEffect(() => {\r\n    if (!pattern.test(num)) {\r\n      history.replace({\r\n        search: `?num=${nextEventsNum}`,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {user?.role === 'admin' ? <AdminControlPanel /> : <ControlPanel />}\r\n      <div className='schedule-range'>\r\n        <ScheduleNav />\r\n        <NextEvents />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NextEventsPage;\r\n","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\SignInPage.tsx",["440"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Header\\UserBar.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Admin\\AdminEditPopup.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Admin\\AdminPreviewPopup.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\RangePage.tsx",["441"],"import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../redux/store';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport 'moment/locale/ru';\r\nimport { useQuery } from '../components/supports/hooks';\r\nimport {\r\n  ControlPanel,\r\n  ScheduleNav,\r\n  AdminControlPanel,\r\n  Range,\r\n} from '../components';\r\n\r\nconst RangePage: React.FC = () => {\r\n  const {\r\n    auth: { user },\r\n    range: { startOfRange, endOfRange },\r\n  } = useSelector((state: RootState) => state);\r\n  const history = useHistory();\r\n  const query = useQuery();\r\n  const startDate = query.get('start');\r\n  const endDate = query.get('end');\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !moment(startDate, 'YYYY-MM-DD', true).isValid() ||\r\n      !moment(endDate, 'YYYY-MM-DD', true).isValid()\r\n    ) {\r\n      history.replace({\r\n        search: `?start=${startOfRange.format(\r\n          'YYYY-MM-DD'\r\n        )}&end=${endOfRange.format('YYYY-MM-DD')}`,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {user?.role === 'admin' ? <AdminControlPanel /> : <ControlPanel />}\r\n      <div className='schedule-range'>\r\n        <ScheduleNav />\r\n        <Range />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RangePage;\r\n","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\services\\AdminService.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\MonthDropdown.tsx",["442"],"import React, { useState, useEffect } from 'react';\r\nimport { buildMonthsList } from './buildMonthsList';\r\n\r\ninterface MonthDropdownProps {\r\n  date: moment.Moment;\r\n  onChangeMonth: (month: moment.Moment) => void;\r\n  onSelectedMonthClick: () => void;\r\n}\r\n\r\nconst MonthDropdown: React.FC<MonthDropdownProps> = ({\r\n  date,\r\n  onChangeMonth,\r\n  onSelectedMonthClick,\r\n}) => {\r\n  const [activeMonth, setActiveMonth] = useState<moment.Moment>(date);\r\n  const [monthsList, setmonthsList] = useState<moment.Moment[]>([]);\r\n\r\n  useEffect(() => {\r\n    setmonthsList(buildMonthsList(date));\r\n  }, []);\r\n\r\n  const onMonthClick = (month: moment.Moment) => () => {\r\n    setActiveMonth(month);\r\n    onChangeMonth(month);\r\n    onSelectedMonthClick();\r\n  };\r\n\r\n  return (\r\n    <ul className='datepicker__month-dropdown'>\r\n      {monthsList.map((item: moment.Moment, idx: number) => {\r\n        const className = item.isSame(activeMonth, 'month')\r\n          ? 'datepicker__month-name datepicker__month-name_selected'\r\n          : 'datepicker__month-name';\r\n\r\n        return (\r\n          <li onClick={onMonthClick(item)} key={idx} className={className}>\r\n            {item.format('MMMM')}\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default React.memo(MonthDropdown);\r\n","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\Tooltip.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\NextDays.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Day\\Day.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\CreatePopup.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\Loaders\\DayLoader.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\Loaders\\EventListLoader.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\popups.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\NextDaysPage.tsx",["443"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\index.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Admin\\AdminEventList.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\NextEventsForm.tsx",["444"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setNextEventsNum } from '../../redux/actions';\r\nimport { useInput, useFocus, useQuery } from '../supports/hooks';\r\nimport { useHistory } from 'react-router';\r\nimport { RootState } from '../../redux/store';\r\n\r\nconst NextEvents: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    admin: { selectedUser },\r\n    auth: { user },\r\n  } = useSelector((state: RootState) => state);\r\n  const inputRef = useFocus();\r\n\r\n  const history = useHistory();\r\n  const query = useQuery();\r\n  const num = query.get('num') || '';\r\n  const pattern = /^(?:\\d{1}|\\d{2})$/;\r\n  const input = useInput(num, 2, pattern);\r\n  const uidQuery = user?.role === 'admin' ? `&uid=${selectedUser?.id}` : '';\r\n\r\n  useEffect(() => {\r\n    input.onChange(num);\r\n    dispatch(setNextEventsNum(num));\r\n  }, [num]);\r\n\r\n  const handleChange = (event: React.FormEvent<HTMLInputElement>) => {\r\n    const inputValue = event.currentTarget.value;\r\n\r\n    if (pattern.test(inputValue) || inputValue === '') {\r\n      input.onChange(inputValue);\r\n      dispatch(setNextEventsNum(inputValue));\r\n\r\n      history.push({\r\n        search: `?num=${inputValue}${uidQuery}`,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onAddBtnClick = (event: React.FormEvent<HTMLButtonElement>) => {\r\n    inputRef.current!.focus();\r\n    event.preventDefault();\r\n    const inputValue = (+input.value + 1).toString();\r\n\r\n    if (pattern.test(inputValue)) {\r\n      input.onChange(inputValue);\r\n      dispatch(setNextEventsNum(input.value));\r\n\r\n      history.push({\r\n        search: `?num=${inputValue}${uidQuery}`,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onSubBtnClick = (event: React.FormEvent<HTMLButtonElement>) => {\r\n    inputRef.current!.focus();\r\n    event.preventDefault();\r\n    const inputValue = (+input.value - 1).toString();\r\n\r\n    if (pattern.test(inputValue)) {\r\n      input.onChange(inputValue);\r\n      dispatch(setNextEventsNum(input.value));\r\n\r\n      history.push({\r\n        search: `?num=${inputValue}${uidQuery}`,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className='next-events'>\r\n      <div className='next-events__field'>\r\n        <label className='next-events__label' htmlFor=''>\r\n          Ближайшие\r\n        </label>\r\n        <div className='next-events__wrap'>\r\n          <div className='next-events__change-count'>\r\n            <button\r\n              onClick={onAddBtnClick}\r\n              className='next-events__btn-add'\r\n            ></button>\r\n            <input\r\n              value={input.value}\r\n              onChange={handleChange}\r\n              className='next-events__input'\r\n              type='text'\r\n              autoComplete='off'\r\n              maxLength={2}\r\n              ref={inputRef}\r\n            />\r\n            <button\r\n              onClick={onSubBtnClick}\r\n              className='next-events__btn-subtract'\r\n            ></button>\r\n          </div>\r\n          <span className='next-events__text'>событий</span>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NextEvents;\r\n","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\NextEvents.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\PreviewPopup.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\auth\\AdminRoute.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\utils\\messages.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\buildMonthsList.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\grid.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\SignUpPage.tsx",["445"],"import React, { useState, FormEvent, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../redux/store';\r\nimport { signup, setError } from '../redux/actions';\r\nimport { Link } from 'react-router-dom';\r\nimport { Message } from '../components';\r\n\r\nconst SignUp: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const { loading, error } = useSelector((state: RootState) => state.auth);\r\n  const [firstName, setFirstName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      dispatch(setError(''));\r\n    }\r\n  }, []);\r\n\r\n  const onSubmitClick = (e: FormEvent) => {\r\n    e.preventDefault();\r\n    dispatch(signup({ email, password, firstName }));\r\n  };\r\n\r\n  return (\r\n    <div className='sign-up'>\r\n      <h2 className='sign-up__title'>Регистрация</h2>\r\n      <form className='sign-up__form' onSubmit={onSubmitClick}>\r\n        {error && (\r\n          <Message className='sign-up__message' type='danger' msg={error} />\r\n        )}\r\n\r\n        <div className='sign-up__field'>\r\n          <label className='sign-up__label label' htmlFor='first-name'>\r\n            Имя\r\n          </label>\r\n          <input\r\n            className='sign-up__input input'\r\n            type='input'\r\n            name='first-name'\r\n            value={firstName}\r\n            // placeholder='ваше имя'\r\n            onChange={(e) => setFirstName(e.currentTarget.value)}\r\n            autoComplete='off'\r\n          />\r\n        </div>\r\n        <div className='sign-up__field'>\r\n          <label className='sign-up__label label' htmlFor='email'>\r\n            Email адрес\r\n          </label>\r\n          <input\r\n            className='sign-up__input input'\r\n            type='email'\r\n            name='email'\r\n            value={email}\r\n            // placeholder='адрес электронной почты'\r\n            onChange={(e) => setEmail(e.currentTarget.value)}\r\n          />\r\n        </div>\r\n        <div className='sign-up__field'>\r\n          <label className='sign-up__label label' htmlFor='password'>\r\n            Пароль\r\n          </label>\r\n          <input\r\n            className='sign-up__input input'\r\n            type='password'\r\n            name='password'\r\n            value={password}\r\n            // placeholder='не менее 7 символов'\r\n            onChange={(e) => setPassword(e.currentTarget.value)}\r\n            autoComplete='off'\r\n          />\r\n        </div>\r\n\r\n        <Link to='/sign-in' className='sign-up__already-registered link'>\r\n          Уже есть аккаунт?\r\n        </Link>\r\n\r\n        <button className='sign-up__btn form-button' disabled={loading}>\r\n          {loading ? 'Loading...' : 'Зарегистрироваться'}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Admin\\UserListBody.tsx",["446"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ControlPanel\\ControlPanel.tsx",["447"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\SelectedDate.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\EmptyDayList.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\CreateEditPopupView.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\ErrorIndicator.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\Loaders\\DayGridLoader.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\auth\\PrivateRoute.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\HomePage.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\Loaders\\UserListLoader.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\RangeForm.tsx",["448"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/store';\r\nimport {\r\n  setStartOFRange,\r\n  setEndOFRange,\r\n  setLeftDatePickerVisible,\r\n  setRightDatePickerVisible,\r\n} from '../../redux/actions';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport 'moment/locale/ru';\r\nimport { RangeDatePicker } from '../../components';\r\nimport { useQuery } from '../supports/hooks';\r\n\r\nconst RangeForm: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    range: {\r\n      startOfRange,\r\n      endOfRange,\r\n      isLeftDatePickerVisible,\r\n      isRightDatePickerVisible,\r\n    },\r\n  } = useSelector((state: RootState) => state);\r\n\r\n  const history = useHistory();\r\n  const query = useQuery();\r\n  const startDate = query.get('start');\r\n  const endDate = query.get('end');\r\n\r\n  useEffect(() => {\r\n    dispatch(setStartOFRange(moment(startDate, 'YYYY-MM-DD')));\r\n    dispatch(setEndOFRange(moment(endDate, 'YYYY-MM-DD')));\r\n  }, [startDate, endDate]);\r\n\r\n  const setStart = (value: moment.Moment) => {\r\n    history.push({\r\n      search: `?start=${value.format('YYYY-MM-DD')}&end=${endOfRange.format(\r\n        'YYYY-MM-DD'\r\n      )}`,\r\n    });\r\n\r\n    return setStartOFRange(value);\r\n  };\r\n\r\n  const setEnd = (value: moment.Moment) => {\r\n    history.push({\r\n      search: `?start=${startOfRange.format('YYYY-MM-DD')}&end=${value.format(\r\n        'YYYY-MM-DD'\r\n      )}`,\r\n    });\r\n\r\n    return setEndOFRange(value);\r\n  };\r\n\r\n  return (\r\n    <div className='schedule-range__range-wrap'>\r\n      <div className='schedule-range__date-block'>\r\n        <RangeDatePicker\r\n          date={startOfRange}\r\n          isVisible={isLeftDatePickerVisible}\r\n          setVisible={setLeftDatePickerVisible}\r\n          setDateOfRange={setStart}\r\n          position={'start'}\r\n        ></RangeDatePicker>\r\n\r\n        <span className='schedule-range__dash'>一</span>\r\n\r\n        <RangeDatePicker\r\n          date={endOfRange}\r\n          isVisible={isRightDatePickerVisible}\r\n          setVisible={setRightDatePickerVisible}\r\n          setDateOfRange={setEnd}\r\n          position={'end'}\r\n        ></RangeDatePicker>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RangeForm;\r\n","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\index.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\Loaders\\AdminPageLoader.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\FormElements\\RadioBtn.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\services\\firebase\\config.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\popups.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\DayPage.tsx",["449"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\buildYearsList.ts",[],{"ruleId":"450","severity":1,"message":"451","line":23,"column":6,"nodeType":"452","endLine":23,"endColumn":8,"suggestions":"453"},{"ruleId":"450","severity":1,"message":"454","line":29,"column":6,"nodeType":"452","endLine":29,"endColumn":30,"suggestions":"455"},{"ruleId":"456","replacedBy":"457"},{"ruleId":"458","replacedBy":"459"},{"ruleId":"450","severity":1,"message":"451","line":69,"column":6,"nodeType":"452","endLine":69,"endColumn":28,"suggestions":"460"},{"ruleId":"456","replacedBy":"461"},{"ruleId":"458","replacedBy":"462"},{"ruleId":"450","severity":1,"message":"463","line":28,"column":6,"nodeType":"452","endLine":28,"endColumn":8,"suggestions":"464"},{"ruleId":"456","replacedBy":"465"},{"ruleId":"458","replacedBy":"466"},{"ruleId":"456","replacedBy":"467"},{"ruleId":"458","replacedBy":"468"},{"ruleId":"450","severity":1,"message":"469","line":30,"column":6,"nodeType":"452","endLine":30,"endColumn":21,"suggestions":"470"},{"ruleId":"456","replacedBy":"471"},{"ruleId":"458","replacedBy":"472"},{"ruleId":"456","replacedBy":"473"},{"ruleId":"458","replacedBy":"474"},{"ruleId":"475","severity":1,"message":"476","line":11,"column":22,"nodeType":"477","messageId":"478","endLine":11,"endColumn":26},{"ruleId":"456","replacedBy":"479"},{"ruleId":"458","replacedBy":"480"},{"ruleId":"450","severity":1,"message":"481","line":31,"column":6,"nodeType":"452","endLine":31,"endColumn":8,"suggestions":"482"},{"ruleId":"456","replacedBy":"483"},{"ruleId":"458","replacedBy":"484"},{"ruleId":"475","severity":1,"message":"485","line":1,"column":10,"nodeType":"477","messageId":"478","endLine":1,"endColumn":14},{"ruleId":"450","severity":1,"message":"486","line":25,"column":6,"nodeType":"452","endLine":25,"endColumn":12,"suggestions":"487"},{"ruleId":"450","severity":1,"message":"488","line":38,"column":6,"nodeType":"452","endLine":38,"endColumn":13,"suggestions":"489"},{"ruleId":"450","severity":1,"message":"490","line":22,"column":6,"nodeType":"452","endLine":22,"endColumn":8,"suggestions":"491"},{"ruleId":"450","severity":1,"message":"492","line":30,"column":6,"nodeType":"452","endLine":30,"endColumn":8,"suggestions":"493"},{"ruleId":"450","severity":1,"message":"494","line":19,"column":6,"nodeType":"452","endLine":19,"endColumn":8,"suggestions":"495"},{"ruleId":"450","severity":1,"message":"496","line":36,"column":6,"nodeType":"452","endLine":36,"endColumn":8,"suggestions":"497"},{"ruleId":"450","severity":1,"message":"498","line":20,"column":6,"nodeType":"452","endLine":20,"endColumn":8,"suggestions":"499"},{"ruleId":"450","severity":1,"message":"500","line":32,"column":6,"nodeType":"452","endLine":32,"endColumn":8,"suggestions":"501"},{"ruleId":"450","severity":1,"message":"469","line":26,"column":6,"nodeType":"452","endLine":26,"endColumn":11,"suggestions":"502"},{"ruleId":"450","severity":1,"message":"494","line":19,"column":6,"nodeType":"452","endLine":19,"endColumn":8,"suggestions":"503"},{"ruleId":"450","severity":1,"message":"451","line":15,"column":6,"nodeType":"452","endLine":15,"endColumn":8,"suggestions":"504"},{"ruleId":"450","severity":1,"message":"505","line":44,"column":5,"nodeType":"452","endLine":44,"endColumn":15,"suggestions":"506"},{"ruleId":"450","severity":1,"message":"451","line":35,"column":6,"nodeType":"452","endLine":35,"endColumn":26,"suggestions":"507"},{"ruleId":"450","severity":1,"message":"508","line":29,"column":6,"nodeType":"452","endLine":29,"endColumn":16,"suggestions":"509"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["510"],"React Hook useEffect has missing dependencies: 'dispatch', 'history', 'order', and 'orderBy'. Either include them or remove the dependency array.",["511"],"no-native-reassign",["512"],"no-negated-in-lhs",["513"],["514"],["512"],["513"],"React Hook useEffect has missing dependencies: 'date' and 'yearsList'. Either include them or remove the dependency array. You can also do a functional update 'setYearsList(y => ...)' if you only need 'yearsList' in the 'setYearsList' call.",["515"],["512"],["513"],["512"],["513"],"React Hook useEffect has missing dependencies: 'dispatch' and 'input'. Either include them or remove the dependency array.",["516"],["512"],["513"],["512"],["513"],"@typescript-eslint/no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar",["512"],["513"],"React Hook useEffect has missing dependencies: 'handleClickOutside' and 'handleHideDropdown'. Either include them or remove the dependency array.",["517"],["512"],["513"],"'push' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'uid'. Either include them or remove the dependency array.",["518"],"React Hook useEffect has missing dependencies: 'dispatch', 'history', 'uid', and 'user?.role'. Either include them or remove the dependency array.",["519"],"React Hook useEffect has missing dependencies: 'dispatch', 'error', and 'success'. Either include them or remove the dependency array.",["520"],"React Hook useEffect has missing dependencies: 'history', 'nextEventsNum', 'num', and 'pattern'. Either include them or remove the dependency array.",["521"],"React Hook useEffect has missing dependencies: 'dispatch' and 'error'. Either include them or remove the dependency array.",["522"],"React Hook useEffect has missing dependencies: 'endDate', 'endOfRange', 'history', 'startDate', and 'startOfRange'. Either include them or remove the dependency array.",["523"],"React Hook useEffect has a missing dependency: 'date'. Either include it or remove the dependency array. If 'setmonthsList' needs the current value of 'date', you can also switch to useReducer instead of useState and read 'date' in the reducer.",["524"],"React Hook useEffect has missing dependencies: 'history', 'interval', 'intervalPattern', 'nextDaysNum', 'num', 'numPattern', and 'selectValue'. Either include them or remove the dependency array.",["525"],["526"],["527"],["528"],"React Hook useCallback has a missing dependency: 'history'. Either include it or remove the dependency array.",["529"],["530"],"React Hook useEffect has missing dependencies: 'date', 'dispatch', and 'history'. Either include them or remove the dependency array.",["531"],{"desc":"532","fix":"533"},{"desc":"534","fix":"535"},"no-global-assign","no-unsafe-negation",{"desc":"536","fix":"537"},{"desc":"538","fix":"539"},{"desc":"540","fix":"541"},{"desc":"542","fix":"543"},{"desc":"544","fix":"545"},{"desc":"546","fix":"547"},{"desc":"548","fix":"549"},{"desc":"550","fix":"551"},{"desc":"552","fix":"553"},{"desc":"554","fix":"555"},{"desc":"556","fix":"557"},{"desc":"558","fix":"559"},{"desc":"560","fix":"561"},{"desc":"552","fix":"562"},{"desc":"532","fix":"563"},{"desc":"564","fix":"565"},{"desc":"566","fix":"567"},{"desc":"568","fix":"569"},"Update the dependencies array to be: [dispatch]",{"range":"570","text":"571"},"Update the dependencies array to be: [sortOrderBy, sortOrder, history, orderBy, order, dispatch]",{"range":"572","text":"573"},"Update the dependencies array to be: [user, orderBy, order, dispatch]",{"range":"574","text":"575"},"Update the dependencies array to be: [date, yearsList]",{"range":"576","text":"577"},"Update the dependencies array to be: [num, interval, input, dispatch]",{"range":"578","text":"579"},"Update the dependencies array to be: [handleClickOutside, handleHideDropdown]",{"range":"580","text":"581"},"Update the dependencies array to be: [dispatch, uid, user]",{"range":"582","text":"583"},"Update the dependencies array to be: [dispatch, history, uid, user?.role, users]",{"range":"584","text":"585"},"Update the dependencies array to be: [dispatch, error, success]",{"range":"586","text":"587"},"Update the dependencies array to be: [history, nextEventsNum, num, pattern]",{"range":"588","text":"589"},"Update the dependencies array to be: [dispatch, error]",{"range":"590","text":"591"},"Update the dependencies array to be: [endDate, endOfRange, history, startDate, startOfRange]",{"range":"592","text":"593"},"Update the dependencies array to be: [date]",{"range":"594","text":"595"},"Update the dependencies array to be: [history, interval, intervalPattern, nextDaysNum, num, numPattern, selectValue]",{"range":"596","text":"597"},"Update the dependencies array to be: [dispatch, input, num]",{"range":"598","text":"599"},{"range":"600","text":"591"},{"range":"601","text":"571"},"Update the dependencies array to be: [dispatch, history]",{"range":"602","text":"603"},"Update the dependencies array to be: [startDate, endDate, dispatch]",{"range":"604","text":"605"},"Update the dependencies array to be: [date, dispatch, history, showDate]",{"range":"606","text":"607"},[910,912],"[dispatch]",[1013,1037],"[sortOrderBy, sortOrder, history, orderBy, order, dispatch]",[1520,1542],"[user, orderBy, order, dispatch]",[775,777],"[date, yearsList]",[1083,1098],"[num, interval, input, dispatch]",[1018,1020],"[handleClickOutside, handleHideDropdown]",[889,895],"[dispatch, uid, user]",[1186,1193],"[dispatch, history, uid, user?.role, users]",[654,656],"[dispatch, error, success]",[782,784],"[history, nextEventsNum, num, pattern]",[673,675],"[dispatch, error]",[1026,1028],"[endDate, endOfRange, history, startDate, startOfRange]",[587,589],"[date]",[943,945],"[history, interval, intervalPattern, nextDaysNum, num, numPattern, selectValue]",[891,896],"[dispatch, input, num]",[679,681],[529,531],[1206,1216],"[dispatch, history]",[1049,1069],"[startDate, endDate, dispatch]",[988,998],"[date, dispatch, history, showDate]"]