[{"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Main\\Main.tsx":"1","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\ScheduleRange.tsx":"2","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\TimeRuler\\TimeRuler.tsx":"3","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\MonthDropdown.tsx":"4","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\popups.ts":"5","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\buildMonthsList.ts":"6","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\buildRange.ts":"7","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\datePicker.ts":"8","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\range.ts":"9","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\index.tsx":"10","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\index.ts":"11","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\App.tsx":"12","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\store.ts":"13","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Day\\Day.tsx":"14","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\RangeBtn\\RangeBtn.tsx":"15","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\Calendar.tsx":"16","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\SelectedDate.tsx":"17","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\grid.ts":"18","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\hooks.tsx":"19","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\grid.ts":"20","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\action-types.ts":"21","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\popups.ts":"22","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\index.ts":"23","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\DayList.tsx":"24","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\YearDropdown.tsx":"25","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DayGrid\\buildDayGrid.ts":"26","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\ErrorIndicator.tsx":"27","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DayGrid\\DayGrid.tsx":"28","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\GridNav\\GridNav.tsx":"29","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\datePicker.ts":"30","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Header\\Header.tsx":"31","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\range.ts":"32","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\CreatePopup.tsx":"33","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\buildCalendar.ts":"34","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\EditPopup.tsx":"35","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\PreviewPopup.tsx":"36","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\CreateEditPopupView.tsx":"37","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\DeletePopup.tsx":"38","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\buildYearsList.ts":"39","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\services\\SchedulerService.ts":"40"},{"size":1267,"mtime":1611156972386,"results":"41","hashOfConfig":"42"},{"size":3306,"mtime":1611164539482,"results":"43","hashOfConfig":"42"},{"size":808,"mtime":1610583497072,"results":"44","hashOfConfig":"42"},{"size":1313,"mtime":1610579262651,"results":"45","hashOfConfig":"42"},{"size":1377,"mtime":1611151452872,"results":"46","hashOfConfig":"42"},{"size":462,"mtime":1610579318799,"results":"47","hashOfConfig":"42"},{"size":1406,"mtime":1611173368304,"results":"48","hashOfConfig":"42"},{"size":394,"mtime":1611141736200,"results":"49","hashOfConfig":"42"},{"size":974,"mtime":1611141622529,"results":"50","hashOfConfig":"42"},{"size":330,"mtime":1611223636721,"results":"51","hashOfConfig":"42"},{"size":1379,"mtime":1611223624369,"results":"52","hashOfConfig":"42"},{"size":261,"mtime":1610984454393,"results":"53","hashOfConfig":"42"},{"size":611,"mtime":1610982428326,"results":"54","hashOfConfig":"42"},{"size":368,"mtime":1610449634822,"results":"55","hashOfConfig":"42"},{"size":793,"mtime":1610561280495,"results":"56","hashOfConfig":"42"},{"size":1935,"mtime":1610578979554,"results":"57","hashOfConfig":"42"},{"size":2193,"mtime":1611164515363,"results":"58","hashOfConfig":"42"},{"size":1639,"mtime":1611174771160,"results":"59","hashOfConfig":"42"},{"size":1656,"mtime":1611164876646,"results":"60","hashOfConfig":"42"},{"size":2492,"mtime":1611175879651,"results":"61","hashOfConfig":"42"},{"size":1111,"mtime":1611150418808,"results":"62","hashOfConfig":"42"},{"size":1001,"mtime":1611150401301,"results":"63","hashOfConfig":"42"},{"size":109,"mtime":1610549234544,"results":"64","hashOfConfig":"42"},{"size":3175,"mtime":1610992187348,"results":"65","hashOfConfig":"42"},{"size":3128,"mtime":1610580059579,"results":"66","hashOfConfig":"42"},{"size":467,"mtime":1610581676848,"results":"67","hashOfConfig":"42"},{"size":127,"mtime":1610983015923,"results":"68","hashOfConfig":"42"},{"size":2799,"mtime":1611068109666,"results":"69","hashOfConfig":"42"},{"size":3144,"mtime":1611142077824,"results":"70","hashOfConfig":"42"},{"size":675,"mtime":1611142427689,"results":"71","hashOfConfig":"42"},{"size":2061,"mtime":1611164555706,"results":"72","hashOfConfig":"42"},{"size":1369,"mtime":1611142628426,"results":"73","hashOfConfig":"42"},{"size":1309,"mtime":1611165994976,"results":"74","hashOfConfig":"42"},{"size":561,"mtime":1610578961164,"results":"75","hashOfConfig":"42"},{"size":1488,"mtime":1611173906174,"results":"76","hashOfConfig":"42"},{"size":2501,"mtime":1611150905995,"results":"77","hashOfConfig":"42"},{"size":2504,"mtime":1611165987062,"results":"78","hashOfConfig":"42"},{"size":1402,"mtime":1611145756659,"results":"79","hashOfConfig":"42"},{"size":450,"mtime":1610580115348,"results":"80","hashOfConfig":"42"},{"size":1674,"mtime":1611223488534,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},"1decv2q",{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"85"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"85"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Main\\Main.tsx",["170"],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  Day,\r\n  ScheduleRange,\r\n  CreatePopup,\r\n  EditPopup,\r\n  PreviewPopup,\r\n  DeletePopup,\r\n  ErrorIndicator,\r\n  Loading,\r\n} from '../../components';\r\nimport { fetchEvents } from '../../redux/actions';\r\nimport { RootState } from '../../redux/store';\r\n\r\nconst Main: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    range: { isRangeVisible },\r\n    popups: {\r\n      isCreatePopupVisible,\r\n      isEditPopupVisible,\r\n      isPreviewPopupVisible,\r\n      isDeletePopupVisible,\r\n    },\r\n    grid: { loading, error },\r\n  } = useSelector((state: RootState) => state);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchEvents());\r\n  }, []);\r\n\r\n  if (error) {\r\n    return <ErrorIndicator></ErrorIndicator>;\r\n  }\r\n\r\n  if (loading) {\r\n    return <Loading></Loading>;\r\n  }\r\n\r\n  return (\r\n    <main className='main'>\r\n      {isRangeVisible ? <ScheduleRange /> : <Day />}\r\n\r\n      {isCreatePopupVisible && <CreatePopup></CreatePopup>}\r\n      {isEditPopupVisible && <EditPopup></EditPopup>}\r\n      {isPreviewPopupVisible && <PreviewPopup></PreviewPopup>}\r\n      {isDeletePopupVisible && <DeletePopup></DeletePopup>}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n",["171","172"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\ScheduleRange.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\TimeRuler\\TimeRuler.tsx",[],["173","174"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\MonthDropdown.tsx",["175"],"import React, { useState, useEffect } from 'react';\r\nimport { buildMonthsList } from './buildMonthsList';\r\n\r\ninterface MonthDropdownProps {\r\n  date: moment.Moment;\r\n  onChangeMonth: (month: moment.Moment) => void;\r\n  onSelectedMonthClick: () => void;\r\n}\r\n\r\nconst MonthDropdown: React.FC<MonthDropdownProps> = ({\r\n  date,\r\n  onChangeMonth,\r\n  onSelectedMonthClick,\r\n}) => {\r\n  const [activeMonth, setActiveMonth] = useState<moment.Moment>(date);\r\n  const [monthsList, setmonthsList] = useState<moment.Moment[]>([]);\r\n\r\n  useEffect(() => {\r\n    setmonthsList(buildMonthsList(date));\r\n  }, []);\r\n\r\n  const onMonthClick = (month: moment.Moment) => () => {\r\n    setActiveMonth(month);\r\n    onChangeMonth(month);\r\n    onSelectedMonthClick();\r\n  };\r\n\r\n  return (\r\n    <div className='datepicker__month-dropdown'>\r\n      {monthsList.map((item: moment.Moment, idx: number) => {\r\n        const className = item.isSame(activeMonth, 'month')\r\n          ? 'datepicker__month-name datepicker__month-name_selected'\r\n          : 'datepicker__month-name';\r\n        return (\r\n          <div onClick={onMonthClick(item)} key={idx} className={className}>\r\n            {item.format('MMMM')}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(MonthDropdown);\r\n// export default MonthDropdown;\r\n",["176","177"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\popups.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\buildMonthsList.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\buildRange.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\datePicker.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\range.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\index.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\index.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\App.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\store.ts",[],["178","179"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Day\\Day.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\RangeBtn\\RangeBtn.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\Calendar.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\SelectedDate.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\grid.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\hooks.tsx",["180"],"import React, { useEffect, useRef, useState } from 'react';\r\n\r\ntype IUseClickOutside = React.RefObject<HTMLDivElement>;\r\n\r\nexport const useClickOutside = (\r\n  setIsComponentVisible: React.Dispatch<boolean>\r\n): IUseClickOutside => {\r\n  const ref = useRef<HTMLDivElement>(null);\r\n\r\n  const handleHideDropdown = (event: KeyboardEvent): void => {\r\n    if (event.key === 'Escape') {\r\n      setIsComponentVisible(false);\r\n    }\r\n  };\r\n\r\n  const handleClickOutside = ({ target }: MouseEvent) => {\r\n    if (ref.current && !ref.current.contains(target as HTMLDivElement)) {\r\n      setIsComponentVisible(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('keydown', handleHideDropdown, true);\r\n    document.addEventListener('click', handleClickOutside, true);\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handleHideDropdown, true);\r\n      document.removeEventListener('click', handleClickOutside, true);\r\n    };\r\n  }, []);\r\n\r\n  return ref;\r\n};\r\n\r\ntype IFormEvent = React.FormEvent<HTMLInputElement | HTMLTextAreaElement>;\r\ninterface IUseInput {\r\n  value: string;\r\n  onChange: (event: IFormEvent) => void;\r\n}\r\n\r\nexport const useInput = (initialValue: string): IUseInput => {\r\n  const [value, setValue] = useState<string>(initialValue);\r\n\r\n  const onChange = (event: IFormEvent): void => {\r\n    setValue(event.currentTarget.value);\r\n  };\r\n\r\n  return {\r\n    value,\r\n    onChange,\r\n  };\r\n};\r\n\r\ntype IUseFocus = React.RefObject<HTMLInputElement>;\r\n\r\nexport const useFocus = (): IUseFocus => {\r\n  const ref = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    ref.current!.focus();\r\n  }, []);\r\n\r\n  return ref;\r\n};\r\n","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\grid.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\action-types.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\popups.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\index.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\DayList.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\YearDropdown.tsx",["181"],"import React, { useState, useEffect } from 'react';\r\nimport { buildYearsList } from './buildYearsList';\r\nimport upBtnImg from '../../img/angle-up.svg';\r\nimport downBtnImg from '../../img/angle-down.svg';\r\n\r\ninterface CalendarProps {\r\n  date: moment.Moment;\r\n  onChangeYear: (year: moment.Moment) => void;\r\n  onSelectedYearClick: () => void;\r\n}\r\n\r\nconst YearDwopdown: React.FC<CalendarProps> = ({\r\n  date,\r\n  onChangeYear,\r\n  onSelectedYearClick,\r\n}) => {\r\n  const [yearsList, setYearsList] = useState<{\r\n    years: moment.Moment[];\r\n    middle: moment.Moment;\r\n  }>({\r\n    years: [],\r\n    middle: date,\r\n  });\r\n  const [activeYear, setActiveYear] = useState<moment.Moment>(date);\r\n\r\n  useEffect(() => {\r\n    setYearsList({ ...yearsList, years: buildYearsList(date) });\r\n  }, []);\r\n\r\n  const onBtnUpClick = (): void => {\r\n    setYearsList((prevState) => {\r\n      const newMiddle: moment.Moment = prevState.middle.clone().add(1, 'year');\r\n      const newYearsList: moment.Moment[] = buildYearsList(newMiddle);\r\n\r\n      return { years: newYearsList, middle: newMiddle };\r\n    });\r\n  };\r\n\r\n  const onBtnDownClick = (): void => {\r\n    setYearsList((prevState) => {\r\n      const newMiddle: moment.Moment = prevState.middle\r\n        .clone()\r\n        .subtract(1, 'year');\r\n      const newYearsList: moment.Moment[] = buildYearsList(newMiddle);\r\n\r\n      return { years: newYearsList, middle: newMiddle };\r\n    });\r\n  };\r\n\r\n  const onYearClick = (year: moment.Moment) => (): void => {\r\n    setActiveYear(year);\r\n    setYearsList({ years: buildYearsList(year), middle: year });\r\n    onChangeYear(year);\r\n    onSelectedYearClick();\r\n  };\r\n\r\n  return (\r\n    <div className='datepicker__year-dropdown'>\r\n      <div\r\n        onClick={onBtnUpClick}\r\n        className='datepicker__year-option datepicker__year-option_btn'\r\n      >\r\n        {/* <span className='datepicker__navigation datepicker__navigation_years-upcoming icon icon-up-open-big'> */}\r\n        <span className='datepicker__navigation datepicker__navigation_years-upcoming'>\r\n          <img className='datepicker__btn-img' src={upBtnImg} alt='^' />\r\n        </span>\r\n      </div>\r\n      {yearsList.years.map((item: moment.Moment, idx: number) => {\r\n        const className: string = item.isSame(activeYear, 'year')\r\n          ? 'datepicker__year-option_selected'\r\n          : '';\r\n\r\n        return (\r\n          <div\r\n            onClick={onYearClick(item)}\r\n            key={idx}\r\n            className={`datepicker__year-option ${className}`}\r\n          >\r\n            {item.format('YYYY')}\r\n          </div>\r\n        );\r\n      })}\r\n      <div\r\n        onClick={onBtnDownClick}\r\n        className='datepicker__year-option datepicker__year-option_btn'\r\n      >\r\n        {/* <span className='datepicker__navigation datepicker__navigation_years-previous icon icon-down-open-big'> */}\r\n        <span className='datepicker__navigation datepicker__navigation_years-previous'>\r\n          <img className='datepicker__btn-img' src={downBtnImg} alt='v' />\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(YearDwopdown);\r\n// export default YearDwopdown;\r\n","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DayGrid\\buildDayGrid.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\ErrorIndicator.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DayGrid\\DayGrid.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\GridNav\\GridNav.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\datePicker.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Header\\Header.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\range.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\CreatePopup.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\buildCalendar.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\EditPopup.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\PreviewPopup.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\CreateEditPopupView.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\DeletePopup.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\buildYearsList.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\services\\SchedulerService.ts",[],{"ruleId":"182","severity":1,"message":"183","line":31,"column":6,"nodeType":"184","endLine":31,"endColumn":8,"suggestions":"185"},{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"186","replacedBy":"190"},{"ruleId":"188","replacedBy":"191"},{"ruleId":"182","severity":1,"message":"192","line":20,"column":6,"nodeType":"184","endLine":20,"endColumn":8,"suggestions":"193"},{"ruleId":"186","replacedBy":"194"},{"ruleId":"188","replacedBy":"195"},{"ruleId":"186","replacedBy":"196"},{"ruleId":"188","replacedBy":"197"},{"ruleId":"182","severity":1,"message":"198","line":30,"column":6,"nodeType":"184","endLine":30,"endColumn":8,"suggestions":"199"},{"ruleId":"182","severity":1,"message":"200","line":28,"column":6,"nodeType":"184","endLine":28,"endColumn":8,"suggestions":"201"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["202"],"no-native-reassign",["203"],"no-negated-in-lhs",["204"],["203"],["204"],"React Hook useEffect has a missing dependency: 'date'. Either include it or remove the dependency array. If 'setmonthsList' needs the current value of 'date', you can also switch to useReducer instead of useState and read 'date' in the reducer.",["205"],["203"],["204"],["203"],["204"],"React Hook useEffect has missing dependencies: 'handleClickOutside' and 'handleHideDropdown'. Either include them or remove the dependency array.",["206"],"React Hook useEffect has missing dependencies: 'date' and 'yearsList'. Either include them or remove the dependency array. You can also do a functional update 'setYearsList(y => ...)' if you only need 'yearsList' in the 'setYearsList' call.",["207"],{"desc":"208","fix":"209"},"no-global-assign","no-unsafe-negation",{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},"Update the dependencies array to be: [dispatch]",{"range":"216","text":"217"},"Update the dependencies array to be: [date]",{"range":"218","text":"219"},"Update the dependencies array to be: [handleClickOutside, handleHideDropdown]",{"range":"220","text":"221"},"Update the dependencies array to be: [date, yearsList]",{"range":"222","text":"223"},[746,748],"[dispatch]",[587,589],"[date]",[956,958],"[handleClickOutside, handleHideDropdown]",[775,777],"[date, yearsList]"]