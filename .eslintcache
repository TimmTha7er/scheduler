[{"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Admin\\UserList.tsx":"1","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\AdminPage.tsx":"2","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\store.ts":"3","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\App.tsx":"4","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Header\\Header.tsx":"5","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ControlPanel\\RangeBtn.tsx":"6","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ControlPanel\\GridNav.tsx":"7","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\YearDropdown.tsx":"8","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\EventList.tsx":"9","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\Range.tsx":"10","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\NextDaysForm.tsx":"11","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\RangeDatePicker.tsx":"12","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\FormElements\\Select.tsx":"13","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Day\\TimeRuler.tsx":"14","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\EditPopup.tsx":"15","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\DeletePopup.tsx":"16","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\Popups.tsx":"17","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\NotFound.tsx":"18","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\Loaders\\ScheduleFormLoader.tsx":"19","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\auth\\PublicRoute.tsx":"20","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Admin\\AdminControlPanel.tsx":"21","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Admin\\AdminRangeBtn.tsx":"22","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\grid.ts":"23","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\admin.ts":"24","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\buildRange.ts":"25","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\hooks.tsx":"26","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\isDayHasEvents.ts":"27","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\buildCalendar.ts":"28","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\datePicker.ts":"29","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\range.ts":"30","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\admin.ts":"31","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\SchedulePage.tsx":"32","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\ForgotPasswordPage.tsx":"33","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\services\\AuthService.ts":"34","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\index.tsx":"35","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\index.ts":"36","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\Calendar.tsx":"37","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\DatePicker.tsx":"38","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\DayList.tsx":"39","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\ScheduleNav.tsx":"40","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Day\\DayGrid.tsx":"41","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Day\\RowList.tsx":"42","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\Message.tsx":"43","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\Loaders\\UserBarLoader.tsx":"44","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\Loaders\\ControlPanelLoader.tsx":"45","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\Loaders\\ScheduleNavLoader.tsx":"46","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\datePicker.ts":"47","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\auth.ts":"48","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Day\\buildDayGrid.ts":"49","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\services\\SchedulerService.ts":"50","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\action-types.ts":"51","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\index.ts":"52","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\auth.ts":"53","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\NextEventsPage.tsx":"54","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\SignInPage.tsx":"55","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Header\\UserBar.tsx":"56","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Admin\\AdminEditPopup.tsx":"57","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Admin\\AdminPreviewPopup.tsx":"58","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\RangePage.tsx":"59","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\services\\AdminService.ts":"60","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\MonthDropdown.tsx":"61","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\Tooltip.tsx":"62","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\NextDays.tsx":"63","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Day\\Day.tsx":"64","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\CreatePopup.tsx":"65","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\Loaders\\DayLoader.tsx":"66","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\Loaders\\EventListLoader.tsx":"67","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\popups.ts":"68","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\NextDaysPage.tsx":"69","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\index.ts":"70","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Admin\\AdminEventList.tsx":"71","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\NextEventsForm.tsx":"72","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\NextEvents.tsx":"73","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\PreviewPopup.tsx":"74","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\auth\\AdminRoute.tsx":"75","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\utils\\messages.ts":"76","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\buildMonthsList.ts":"77","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\grid.ts":"78","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\SignUpPage.tsx":"79","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Admin\\UserListBody.tsx":"80","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ControlPanel\\ControlPanel.tsx":"81","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\SelectedDate.tsx":"82","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\EmptyDayList.tsx":"83","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\CreateEditPopupView.tsx":"84","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\ErrorIndicator.tsx":"85","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\Loaders\\DayGridLoader.tsx":"86","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\auth\\PrivateRoute.tsx":"87","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\HomePage.tsx":"88","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\Loaders\\UserListLoader.tsx":"89","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\RangeForm.tsx":"90","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\index.ts":"91","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\Loaders\\AdminPageLoader.tsx":"92","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\FormElements\\RadioBtn.tsx":"93","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\services\\firebase\\config.ts":"94","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\popups.ts":"95","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\DayPage.tsx":"96","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\buildYearsList.ts":"97","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\range.ts":"98","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Admin\\AdminUsersFilter.tsx":"99"},{"size":2845,"mtime":1614526672067,"results":"100","hashOfConfig":"101"},{"size":1301,"mtime":1614526881409,"results":"102","hashOfConfig":"101"},{"size":938,"mtime":1613514780420,"results":"103","hashOfConfig":"101"},{"size":2483,"mtime":1614171496579,"results":"104","hashOfConfig":"101"},{"size":645,"mtime":1613576730483,"results":"105","hashOfConfig":"101"},{"size":1380,"mtime":1613491647238,"results":"106","hashOfConfig":"101"},{"size":4355,"mtime":1613581680848,"results":"107","hashOfConfig":"101"},{"size":3083,"mtime":1613491778458,"results":"108","hashOfConfig":"101"},{"size":1388,"mtime":1613658832520,"results":"109","hashOfConfig":"101"},{"size":1158,"mtime":1613673818289,"results":"110","hashOfConfig":"101"},{"size":3714,"mtime":1614022056025,"results":"111","hashOfConfig":"101"},{"size":1596,"mtime":1613672703835,"results":"112","hashOfConfig":"101"},{"size":2238,"mtime":1613581813672,"results":"113","hashOfConfig":"101"},{"size":808,"mtime":1613657266326,"results":"114","hashOfConfig":"101"},{"size":1463,"mtime":1613917142422,"results":"115","hashOfConfig":"101"},{"size":1402,"mtime":1611145756659,"results":"116","hashOfConfig":"101"},{"size":971,"mtime":1614024598825,"results":"117","hashOfConfig":"101"},{"size":562,"mtime":1614081178203,"results":"118","hashOfConfig":"101"},{"size":554,"mtime":1613661891083,"results":"119","hashOfConfig":"101"},{"size":1108,"mtime":1613905485197,"results":"120","hashOfConfig":"101"},{"size":1231,"mtime":1614531161708,"results":"121","hashOfConfig":"101"},{"size":619,"mtime":1614024124877,"results":"122","hashOfConfig":"101"},{"size":1639,"mtime":1611174771160,"results":"123","hashOfConfig":"101"},{"size":1869,"mtime":1614525521493,"results":"124","hashOfConfig":"101"},{"size":1899,"mtime":1611931869431,"results":"125","hashOfConfig":"101"},{"size":2028,"mtime":1613570951882,"results":"126","hashOfConfig":"101"},{"size":457,"mtime":1611313006319,"results":"127","hashOfConfig":"101"},{"size":519,"mtime":1611312628661,"results":"128","hashOfConfig":"101"},{"size":394,"mtime":1611141736200,"results":"129","hashOfConfig":"101"},{"size":2103,"mtime":1613506107327,"results":"130","hashOfConfig":"101"},{"size":1996,"mtime":1614525640173,"results":"131","hashOfConfig":"101"},{"size":1658,"mtime":1614084288133,"results":"132","hashOfConfig":"101"},{"size":2259,"mtime":1613685550812,"results":"133","hashOfConfig":"101"},{"size":1657,"mtime":1614014684031,"results":"134","hashOfConfig":"101"},{"size":462,"mtime":1613170002305,"results":"135","hashOfConfig":"101"},{"size":160,"mtime":1613210323105,"results":"136","hashOfConfig":"101"},{"size":2148,"mtime":1613491684770,"results":"137","hashOfConfig":"101"},{"size":2755,"mtime":1612694174422,"results":"138","hashOfConfig":"101"},{"size":2577,"mtime":1614087247496,"results":"139","hashOfConfig":"101"},{"size":2111,"mtime":1614084266934,"results":"140","hashOfConfig":"101"},{"size":879,"mtime":1614085815739,"results":"141","hashOfConfig":"101"},{"size":2317,"mtime":1614087128869,"results":"142","hashOfConfig":"101"},{"size":504,"mtime":1612796567491,"results":"143","hashOfConfig":"101"},{"size":546,"mtime":1613660951242,"results":"144","hashOfConfig":"101"},{"size":741,"mtime":1613660915885,"results":"145","hashOfConfig":"101"},{"size":567,"mtime":1613661857807,"results":"146","hashOfConfig":"101"},{"size":675,"mtime":1611142427689,"results":"147","hashOfConfig":"101"},{"size":1482,"mtime":1613685947349,"results":"148","hashOfConfig":"101"},{"size":467,"mtime":1610581676848,"results":"149","hashOfConfig":"101"},{"size":2211,"mtime":1613416090902,"results":"150","hashOfConfig":"101"},{"size":2680,"mtime":1614525511471,"results":"151","hashOfConfig":"101"},{"size":566,"mtime":1613674321117,"results":"152","hashOfConfig":"101"},{"size":3089,"mtime":1613747967015,"results":"153","hashOfConfig":"101"},{"size":1041,"mtime":1614084036863,"results":"154","hashOfConfig":"101"},{"size":2683,"mtime":1613903441324,"results":"155","hashOfConfig":"101"},{"size":1227,"mtime":1614022346638,"results":"156","hashOfConfig":"101"},{"size":2404,"mtime":1614024069482,"results":"157","hashOfConfig":"101"},{"size":3443,"mtime":1614024095760,"results":"158","hashOfConfig":"101"},{"size":1275,"mtime":1614083658785,"results":"159","hashOfConfig":"101"},{"size":1875,"mtime":1614549643283,"results":"160","hashOfConfig":"101"},{"size":1277,"mtime":1613491711516,"results":"161","hashOfConfig":"101"},{"size":1826,"mtime":1612183231854,"results":"162","hashOfConfig":"101"},{"size":1318,"mtime":1613670672501,"results":"163","hashOfConfig":"101"},{"size":595,"mtime":1613658651385,"results":"164","hashOfConfig":"101"},{"size":1288,"mtime":1613917151151,"results":"165","hashOfConfig":"101"},{"size":1062,"mtime":1613660929865,"results":"166","hashOfConfig":"101"},{"size":971,"mtime":1613660935802,"results":"167","hashOfConfig":"101"},{"size":1377,"mtime":1611151452872,"results":"168","hashOfConfig":"101"},{"size":1208,"mtime":1614084023114,"results":"169","hashOfConfig":"101"},{"size":3770,"mtime":1614077453282,"results":"170","hashOfConfig":"101"},{"size":1471,"mtime":1614008212592,"results":"171","hashOfConfig":"101"},{"size":3105,"mtime":1614021997114,"results":"172","hashOfConfig":"101"},{"size":1398,"mtime":1613672231930,"results":"173","hashOfConfig":"101"},{"size":2717,"mtime":1613910029494,"results":"174","hashOfConfig":"101"},{"size":851,"mtime":1613905374533,"results":"175","hashOfConfig":"101"},{"size":1699,"mtime":1614518835161,"results":"176","hashOfConfig":"101"},{"size":462,"mtime":1610579318799,"results":"177","hashOfConfig":"101"},{"size":2408,"mtime":1613398472488,"results":"178","hashOfConfig":"101"},{"size":2936,"mtime":1613683769825,"results":"179","hashOfConfig":"101"},{"size":2122,"mtime":1614527086716,"results":"180","hashOfConfig":"101"},{"size":2558,"mtime":1613657932038,"results":"181","hashOfConfig":"101"},{"size":2163,"mtime":1613491731528,"results":"182","hashOfConfig":"101"},{"size":514,"mtime":1612696131639,"results":"183","hashOfConfig":"101"},{"size":2770,"mtime":1614516639760,"results":"184","hashOfConfig":"101"},{"size":539,"mtime":1614087016119,"results":"185","hashOfConfig":"101"},{"size":731,"mtime":1613660924485,"results":"186","hashOfConfig":"101"},{"size":974,"mtime":1613491378715,"results":"187","hashOfConfig":"101"},{"size":402,"mtime":1612780851386,"results":"188","hashOfConfig":"101"},{"size":2074,"mtime":1614171639941,"results":"189","hashOfConfig":"101"},{"size":2279,"mtime":1613673822926,"results":"190","hashOfConfig":"101"},{"size":158,"mtime":1613210476726,"results":"191","hashOfConfig":"101"},{"size":994,"mtime":1614530749763,"results":"192","hashOfConfig":"101"},{"size":1498,"mtime":1613570927151,"results":"193","hashOfConfig":"101"},{"size":647,"mtime":1612449485471,"results":"194","hashOfConfig":"101"},{"size":1001,"mtime":1611150401301,"results":"195","hashOfConfig":"101"},{"size":1367,"mtime":1613906356460,"results":"196","hashOfConfig":"101"},{"size":450,"mtime":1610580115348,"results":"197","hashOfConfig":"101"},{"size":2124,"mtime":1612180982335,"results":"198","hashOfConfig":"101"},{"size":1333,"mtime":1614530439255,"results":"199","hashOfConfig":"101"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"203"},"1decv2q",{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"211"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"211"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"230"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"244"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"203"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"203"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"203"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"211"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"230"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"203"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"218"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"218"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"203"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"203"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"384","messages":"385","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"244"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"218"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"211"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Admin\\UserList.tsx",["425"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setSelectedUser, setSortOrder, setOrder } from '../../redux/actions';\r\nimport { UserListBody } from '../../components';\r\nimport { RootState } from '../../redux/store';\r\nimport ErrorIndicator from '../supports/ErrorIndicator';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst UserList: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    admin: { sortBy, error, order },\r\n  } = useSelector((state: RootState) => state);\r\n  const history = useHistory();\r\n  const sortByClass = `user-list__head-text_order-${order}`;\r\n\r\n  useEffect(() => {\r\n    dispatch(setSelectedUser(null));\r\n  }, []);\r\n\r\n  const onOrderClick = (sortOrderBy: string) => () => {\r\n    if (sortOrderBy === sortBy) {\r\n      history.push({\r\n        search: `sortBy=${sortOrderBy}&order=${\r\n          order === 'asc' ? 'desc' : 'asc'\r\n        }`,\r\n      });\r\n    } else {\r\n      dispatch(setSortOrder(sortOrderBy));\r\n      dispatch(setOrder('desc'));\r\n      history.push({ search: `sortBy=${sortOrderBy}&order=desc` });\r\n    }\r\n  };\r\n\r\n  if (error) {\r\n    return (\r\n      <div className='user-list'>\r\n        <ErrorIndicator />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className='user-list'>\r\n      <table className='user-list__table'>\r\n        <thead className='user-list__head'>\r\n          <tr className='user-list__row user-list__row_head'>\r\n            <th className='user-list__head-cell'>\r\n              <div\r\n                onClick={onOrderClick('firstName')}\r\n                className={`user-list__head-text ${\r\n                  sortBy === 'firstName' && sortByClass\r\n                }`}\r\n              >\r\n                Имя\r\n              </div>\r\n            </th>\r\n            <th className='user-list__head-cell'>\r\n              <div\r\n                onClick={onOrderClick('email')}\r\n                className={`user-list__head-text ${\r\n                  sortBy === 'email' && sortByClass\r\n                }`}\r\n              >\r\n                Почта\r\n              </div>\r\n            </th>\r\n            <th className='user-list__head-cell'>\r\n              <div\r\n                onClick={onOrderClick('createdAt')}\r\n                className={`user-list__head-text ${\r\n                  sortBy === 'createdAt' && sortByClass\r\n                }`}\r\n              >\r\n                Дата регистрации\r\n              </div>\r\n            </th>\r\n          </tr>\r\n          <tr className='user-list__empty-row'>\r\n            <th className='user-list__empty-cell'></th>\r\n            <th className='user-list__empty-cell'></th>\r\n            <th className='user-list__empty-cell'></th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <UserListBody />\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n",["426","427"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\AdminPage.tsx",["428"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\store.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\App.tsx",["429"],"import React, { useEffect } from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  setLoading,\n  getUserById,\n  setNeedVerification,\n  fetchEvents,\n  fetchUsers,\n} from '../redux/actions';\nimport { Switch, Route } from 'react-router-dom';\nimport firebase from '../services/firebase/config';\nimport {\n  HomePage,\n  DayPage,\n  SchedulePage,\n  SignUpPage,\n  SignInPage,\n  ForgotPasswordPage,\n  AdminPage,\n} from '../pages';\nimport {\n  Header,\n  Popups,\n  PublicRoute,\n  PrivateRoute,\n  AdminRoute,\n  NotFound,\n} from '../components';\nimport '../scss/index.scss';\nimport { RootState } from '../redux/store';\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n  const {\n    auth: { user },\n    admin: { sortBy, order },\n  } = useSelector((state: RootState) => state);\n\n  // Check if user exists\n  useEffect(() => {\n    const unsubscribe = firebase.auth().onAuthStateChanged(async (user) => {\n      if (user) {\n        await dispatch(getUserById(user.uid));\n\n        if (!user.emailVerified) {\n          dispatch(setNeedVerification(true));\n        } else {\n          dispatch(setNeedVerification(false));\n        }\n      }\n\n      dispatch(setLoading(false));\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (user && user.role === 'admin') {\n      dispatch(fetchUsers(sortBy, order));\n    }\n\n    if (user && user.role === 'user') {\n      dispatch(fetchEvents());\n    }\n  }, [user, sortBy, order]);\n\n  return (\n    <>\n      <PerfectScrollbar>\n        <div className='container'>\n          <Header></Header>\n          <main className='main'>\n            <Switch>\n              <PublicRoute exact path='/' component={HomePage} />\n              <PrivateRoute exact path='/day' component={DayPage} />\n              <AdminRoute exact path='/admin' component={AdminPage} />\n              <PrivateRoute path='/schedule' component={SchedulePage} />\n              <PublicRoute exact path='/sign-up' component={SignUpPage} />\n              <PublicRoute exact path='/sign-in' component={SignInPage} />\n              <PublicRoute\n                exact\n                path='/forgot-password'\n                component={ForgotPasswordPage}\n              />\n              <Route exact path='*' component={NotFound} />\n            </Switch>\n          </main>\n        </div>\n      </PerfectScrollbar>\n\n      <Popups />\n    </>\n  );\n};\n\nexport default App;\n",["430","431"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Header\\Header.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ControlPanel\\RangeBtn.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ControlPanel\\GridNav.tsx",[],["432","433"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\YearDropdown.tsx",["434"],"import React, { useState, useEffect } from 'react';\r\nimport { buildYearsList } from './buildYearsList';\r\nimport upBtnImg from '../../img/angle-up.svg';\r\nimport downBtnImg from '../../img/angle-down.svg';\r\n\r\ninterface CalendarProps {\r\n  date: moment.Moment;\r\n  onChangeYear: (year: moment.Moment) => void;\r\n  onSelectedYearClick: () => void;\r\n}\r\n\r\nconst YearDwopdown: React.FC<CalendarProps> = ({\r\n  date,\r\n  onChangeYear,\r\n  onSelectedYearClick,\r\n}) => {\r\n  const [yearsList, setYearsList] = useState<{\r\n    years: moment.Moment[];\r\n    middle: moment.Moment;\r\n  }>({\r\n    years: [],\r\n    middle: date,\r\n  });\r\n  const [activeYear, setActiveYear] = useState<moment.Moment>(date);\r\n\r\n  useEffect(() => {\r\n    setYearsList({ ...yearsList, years: buildYearsList(date) });\r\n  }, []);\r\n\r\n  const onBtnUpClick = (): void => {\r\n    setYearsList((prevState) => {\r\n      const newMiddle: moment.Moment = prevState.middle.clone().add(1, 'year');\r\n      const newYearsList: moment.Moment[] = buildYearsList(newMiddle);\r\n\r\n      return { years: newYearsList, middle: newMiddle };\r\n    });\r\n  };\r\n\r\n  const onBtnDownClick = (): void => {\r\n    setYearsList((prevState) => {\r\n      const newMiddle: moment.Moment = prevState.middle\r\n        .clone()\r\n        .subtract(1, 'year');\r\n      const newYearsList: moment.Moment[] = buildYearsList(newMiddle);\r\n\r\n      return { years: newYearsList, middle: newMiddle };\r\n    });\r\n  };\r\n\r\n  const onYearClick = (year: moment.Moment) => (): void => {\r\n    setActiveYear(year);\r\n    setYearsList({ years: buildYearsList(year), middle: year });\r\n    onChangeYear(year);\r\n    onSelectedYearClick();\r\n  };\r\n\r\n  return (\r\n    <ul className='datepicker__year-dropdown'>\r\n      <li\r\n        onClick={onBtnUpClick}\r\n        className='datepicker__year-option datepicker__year-option_btn'\r\n      >\r\n        {/* <span className='datepicker__navigation datepicker__navigation_years-upcoming icon icon-up-open-big'> */}\r\n        <div className='datepicker__navigation datepicker__navigation_years-upcoming'>\r\n          <img className='datepicker__btn-img' src={upBtnImg} alt='^' />\r\n        </div>\r\n      </li>\r\n      {yearsList.years.map((item: moment.Moment, idx: number) => {\r\n        const className: string = item.isSame(activeYear, 'year')\r\n          ? 'datepicker__year-option_selected'\r\n          : '';\r\n\r\n        return (\r\n          <li\r\n            onClick={onYearClick(item)}\r\n            key={idx}\r\n            className={`datepicker__year-option ${className}`}\r\n          >\r\n            {item.format('YYYY')}\r\n          </li>\r\n        );\r\n      })}\r\n      <li\r\n        onClick={onBtnDownClick}\r\n        className='datepicker__year-option datepicker__year-option_btn'\r\n      >\r\n        {/* <span className='datepicker__navigation datepicker__navigation_years-previous icon icon-down-open-big'> */}\r\n        <div className='datepicker__navigation datepicker__navigation_years-previous'>\r\n          <img className='datepicker__btn-img' src={downBtnImg} alt='v' />\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default React.memo(YearDwopdown);\r\n","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\EventList.tsx",[],["435","436"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\Range.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\NextDaysForm.tsx",["437"],"import React, { useCallback, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useInput, useFocus, useQuery } from '../supports/hooks';\r\nimport { RootState } from '../../redux/store';\r\nimport { setNextDaysNum, setSelectValue } from '../../redux/actions';\r\nimport { Select } from '../../components';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst NextDays: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    range: { selectValue },\r\n    admin: { selectedUser },\r\n    auth: { user },\r\n  } = useSelector((state: RootState) => state);\r\n  const inputRef = useFocus();\r\n\r\n  const history = useHistory();\r\n  const query = useQuery();\r\n  const num = query.get('num') || '';\r\n  const interval = query.get('interval') || '';\r\n  const numPattern = /^(?:\\d{1}|\\d{2})$/;\r\n  const input = useInput(num, 2, numPattern);\r\n  const uidQuery = user?.role === 'admin' ? `&uid=${selectedUser?.id}` : '';\r\n\r\n  useEffect(() => {\r\n    input.onChange(num);\r\n    dispatch(setNextDaysNum(num));\r\n    dispatch(setSelectValue(interval));\r\n  }, [num, interval]);\r\n\r\n  const handleChange = (event: React.FormEvent<HTMLInputElement>) => {\r\n    const inputValue = event.currentTarget.value;\r\n    const pattern = /^[0-9\\b]+$/;\r\n\r\n    if (pattern.test(inputValue) || inputValue === '') {\r\n      input.onChange(inputValue);\r\n      dispatch(setNextDaysNum(inputValue));\r\n\r\n      history.push({\r\n        search: `?num=${inputValue}&interval=${selectValue}${uidQuery}`,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onOptionClick = useCallback(\r\n    (value) => {\r\n      dispatch(setSelectValue(value));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const onAddBtnClick = (event: React.FormEvent<HTMLButtonElement>) => {\r\n    event.preventDefault();\r\n    inputRef.current!.focus();\r\n    const inputValue = (+input.value + 1).toString();\r\n\r\n    if (numPattern.test(inputValue)) {\r\n      input.onChange(inputValue);\r\n      dispatch(setNextDaysNum(input.value));\r\n\r\n      history.push({\r\n        search: `?num=${inputValue}&interval=${selectValue}${uidQuery}`,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onSubBtnClick = (event: React.FormEvent<HTMLButtonElement>) => {\r\n    event.preventDefault();\r\n    inputRef.current!.focus();\r\n    const inputValue = (+input.value - 1).toString();\r\n\r\n    if (numPattern.test(inputValue)) {\r\n      input.onChange(inputValue);\r\n      dispatch(setNextDaysNum(input.value));\r\n\r\n      history.push({\r\n        search: `?num=${inputValue}&interval=${selectValue}${uidQuery}`,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className='next-days'>\r\n      <div className='next-days__field'>\r\n        <label className='next-days__label' htmlFor=''>\r\n          За ближайшие\r\n        </label>\r\n        <div className='next-events__wrap'>\r\n          <div className='next-days__change-count'>\r\n            <button\r\n              onClick={onAddBtnClick}\r\n              className='next-days__btn-add'\r\n            ></button>\r\n            <input\r\n              value={input.value}\r\n              onChange={handleChange}\r\n              className='next-days__input'\r\n              type='text'\r\n              autoComplete='off'\r\n              maxLength={2}\r\n              ref={inputRef}\r\n            />\r\n            <button\r\n              onClick={onSubBtnClick}\r\n              className='next-days__btn-subtract'\r\n            ></button>\r\n          </div>\r\n          <div className='next-days__text'>\r\n            <Select\r\n              options={['суток', 'часов']}\r\n              defaultSelected={selectValue}\r\n              onOptionClick={onOptionClick}\r\n            ></Select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NextDays;\r\n",["438","439"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\RangeDatePicker.tsx",[],["440","441"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\FormElements\\Select.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Day\\TimeRuler.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\EditPopup.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\DeletePopup.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\Popups.tsx",[],["442","443"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\NotFound.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\Loaders\\ScheduleFormLoader.tsx",[],["444","445"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\auth\\PublicRoute.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Admin\\AdminControlPanel.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Admin\\AdminRangeBtn.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\grid.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\admin.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\buildRange.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\hooks.tsx",["446"],"import React, { useEffect, useRef, useState, useCallback } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\ntype IUseClickOutside = React.RefObject<HTMLDivElement>;\r\n\r\nexport const useClickOutside = (\r\n  setIsComponentVisible: React.Dispatch<boolean>\r\n): IUseClickOutside => {\r\n  const ref = useRef<HTMLDivElement>(null);\r\n\r\n  const handleHideDropdown = (event: KeyboardEvent): void => {\r\n    if (event.key === 'Escape') {\r\n      setIsComponentVisible(false);\r\n    }\r\n  };\r\n\r\n  const handleClickOutside = ({ target }: MouseEvent) => {\r\n    if (ref.current && !ref.current.contains(target as HTMLDivElement)) {\r\n      setIsComponentVisible(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('keydown', handleHideDropdown, true);\r\n    document.addEventListener('click', handleClickOutside, true);\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handleHideDropdown, true);\r\n      document.removeEventListener('click', handleClickOutside, true);\r\n    };\r\n  }, []);\r\n\r\n  return ref;\r\n};\r\n\r\ninterface IUseInput {\r\n  value: string;\r\n  onChange: (value: string) => void;\r\n}\r\n\r\nexport const useInput = (\r\n  initialValue: string,\r\n  maxLength?: number,\r\n  pattern?: RegExp\r\n): IUseInput => {\r\n  const [value, setValue] = useState<string>(initialValue);\r\n\r\n  const onChange = useCallback(\r\n    (value: string): void => {\r\n      if (!(maxLength !== undefined && value.length > maxLength)) {\r\n        if (pattern === undefined) {\r\n          setValue(value);\r\n        } else if (value === '' || pattern.test(value)) {\r\n          setValue(value);\r\n        }\r\n      }\r\n    },\r\n    [maxLength, pattern]\r\n  );\r\n\r\n  return {\r\n    value,\r\n    onChange,\r\n  };\r\n};\r\n\r\ntype IUseFocus = React.RefObject<HTMLInputElement>;\r\n\r\nexport const useFocus = (): IUseFocus => {\r\n  const ref = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    ref.current!.focus();\r\n  }, []);\r\n\r\n  return ref;\r\n};\r\n\r\nexport const useQuery = () => {\r\n  return new URLSearchParams(useLocation().search);\r\n};\r\n","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\isDayHasEvents.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\buildCalendar.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\datePicker.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\range.ts",["447"],"import { push } from 'connected-react-router';\r\nimport {\r\n  // TOGGLE_RANGE_VISIBLE,\r\n  SET_START_OF_RANGE,\r\n  SET_END_OF_RANGE,\r\n  SET_LEFT_DATEPICKER_VISIBLE,\r\n  SET_RIGHT_DATEPICKER_VISIBLE,\r\n  // SET_RADIO_BTN_VALUE,\r\n  SET_NEXT_DAYS_NUM,\r\n  SET_NEXT_EVENTS_NUM,\r\n  SET_SELECT_VALUE,\r\n} from '../action-types';\r\nimport { RangeActionsType, RangeThunkActionType } from '../interfaces';\r\n\r\n// export const toggleRangeVisible = (): RangeActionsType => {\r\n//   return {\r\n//     type: TOGGLE_RANGE_VISIBLE,\r\n//   };\r\n// };\r\n\r\nexport const setStartOFRange = (date: moment.Moment): RangeActionsType => {\r\n  return {\r\n    type: SET_START_OF_RANGE,\r\n    payload: date,\r\n  };\r\n};\r\n\r\nexport const setEndOFRange = (date: moment.Moment): RangeActionsType => {\r\n  return {\r\n    type: SET_END_OF_RANGE,\r\n    payload: date,\r\n  };\r\n};\r\n\r\nexport const setLeftDatePickerVisible = (value: boolean): RangeActionsType => {\r\n  return {\r\n    type: SET_LEFT_DATEPICKER_VISIBLE,\r\n    payload: value,\r\n  };\r\n};\r\n\r\nexport const setRightDatePickerVisible = (value: boolean): RangeActionsType => {\r\n  return {\r\n    type: SET_RIGHT_DATEPICKER_VISIBLE,\r\n    payload: value,\r\n  };\r\n};\r\n\r\n// export const setRadioBtnValue = (value: string): RangeActionsType => {\r\n//   return {\r\n//     type: SET_RADIO_BTN_VALUE,\r\n//     payload: value,\r\n//   };\r\n// };\r\n\r\nexport const setNextEventsNum = (value: string): RangeThunkActionType => {\r\n  return async (dispatch) => {\r\n    // dispatch(\r\n    //   // @ts-ignore\r\n    //   push({\r\n    //     search: `?num=${value}`,\r\n    //   })\r\n    // );\r\n\r\n    dispatch({\r\n      type: SET_NEXT_EVENTS_NUM,\r\n      payload: value,\r\n    });\r\n  };\r\n};\r\n\r\n// export const setNextEventsNum = (value: string): RangeActionsType => {\r\n//   return {\r\n//     type: SET_NEXT_EVENTS_NUM,\r\n//     payload: value,\r\n//   };\r\n// };\r\n\r\nexport const setNextDaysNum = (value: string): RangeActionsType => {\r\n  return {\r\n    type: SET_NEXT_DAYS_NUM,\r\n    payload: value,\r\n  };\r\n};\r\n\r\nexport const setSelectValue = (value: string): RangeActionsType => {\r\n  return {\r\n    type: SET_SELECT_VALUE,\r\n    payload: value,\r\n  };\r\n};\r\n","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\admin.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\SchedulePage.tsx",["448","449"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Switch, useHistory, useRouteMatch, Route } from 'react-router-dom';\r\nimport { PrivateRoute, NotFound } from '../components';\r\nimport { useQuery } from '../components/supports/hooks';\r\nimport { fetchEvents, setSelectedUser } from '../redux/actions';\r\nimport { RootState } from '../redux/store';\r\nimport { NextDaysPage, NextEventsPage, RangePage } from './';\r\n\r\nconst SchedulePage: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    auth: { user },\r\n    admin: { users },\r\n  } = useSelector((state: RootState) => state);\r\n  const match = useRouteMatch();\r\n  const history = useHistory();\r\n  const query = useQuery();\r\n  const uid = query.get('uid');\r\n\r\n  useEffect(() => {\r\n    if (user?.role === 'admin' && uid) {\r\n      dispatch(fetchEvents(uid));\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (user?.role === 'admin') {\r\n      if (uid) {\r\n        const selectedUser = users.filter((user) => user.id === uid)[0];\r\n        dispatch(setSelectedUser(selectedUser));\r\n      }\r\n\r\n      if (!uid) {\r\n        history.replace('/admin');\r\n      }\r\n    }\r\n  }, [users]);\r\n\r\n  return (\r\n    <Switch>\r\n      <PrivateRoute exact path={`${match.path}/range`} component={RangePage} />\r\n      <PrivateRoute\r\n        exact\r\n        path={`${match.path}/n-days`}\r\n        component={NextDaysPage}\r\n      />\r\n      <PrivateRoute\r\n        exact\r\n        path={`${match.path}/n-events`}\r\n        component={NextEventsPage}\r\n      />\r\n      <Route exact path='*' component={NotFound} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default SchedulePage;\r\n","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\ForgotPasswordPage.tsx",["450"],"import React, { useState, FormEvent, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { sendPasswordResetEmail, setError, setSuccess } from '../redux/actions';\r\nimport { RootState } from '../redux/store';\r\nimport { Message } from '../components';\r\n\r\nconst ForgotPassword: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const { error, success, loading } = useSelector(\r\n    (state: RootState) => state.auth\r\n  );\r\n  const [email, setEmail] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      dispatch(setError(''));\r\n    }\r\n    if (success) {\r\n      dispatch(setSuccess(''));\r\n    }\r\n  }, []);\r\n\r\n  const submitHandler = async (e: FormEvent) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      sendPasswordResetEmail(\r\n        email,\r\n        'Письмо для сброса пароля отправлено на указанный email!'\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className='forgot-password'>\r\n      <h2 className='forgot-password__title'>Сбросить пароль</h2>\r\n      <form className='forgot-password__form' onSubmit={submitHandler}>\r\n        {error && (\r\n          <Message\r\n            className='forgot-password__message'\r\n            type='danger'\r\n            msg={error}\r\n          />\r\n        )}\r\n        {success && (\r\n          <Message\r\n            className='forgot-password__message'\r\n            type='success'\r\n            msg={success}\r\n          />\r\n        )}\r\n\r\n        <div className='forgot-password__field'>\r\n          <label className='forgot-password__label label' htmlFor='email'>\r\n            Email адрес\r\n          </label>\r\n          <input\r\n            className='forgot-password__input input'\r\n            type='email'\r\n            name='email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.currentTarget.value)}\r\n            // placeholder='Email address'\r\n            autoComplete='off'\r\n          />\r\n        </div>\r\n\r\n        <button className='forgot-password__btn form-button' disabled={loading}>\r\n          {loading ? 'Loading...' : 'Отправить письмо для сброса пароля'}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\services\\AuthService.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\index.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\index.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\Calendar.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\DatePicker.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\DayList.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\ScheduleNav.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Day\\DayGrid.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Day\\RowList.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\Message.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\Loaders\\UserBarLoader.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\Loaders\\ControlPanelLoader.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\Loaders\\ScheduleNavLoader.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\datePicker.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\auth.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Day\\buildDayGrid.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\services\\SchedulerService.ts",[],["451","452"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\action-types.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\index.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\auth.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\NextEventsPage.tsx",["453"],"import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../redux/store';\r\nimport { useQuery } from '../components/supports/hooks';\r\nimport { useHistory } from 'react-router';\r\nimport {\r\n  NextEvents,\r\n  ScheduleNav,\r\n  ControlPanel,\r\n  AdminControlPanel,\r\n} from '../components';\r\n\r\nconst NextEventsPage: React.FC = () => {\r\n  const {\r\n    auth: { user },\r\n    range: { nextEventsNum },\r\n  } = useSelector((state: RootState) => state);\r\n\r\n  const history = useHistory();\r\n  const query = useQuery();\r\n  const num = query.get('num') || '';\r\n  const pattern = /^(?:\\d{1}|\\d{2})$/;\r\n\r\n  useEffect(() => {\r\n    if (!pattern.test(num)) {\r\n      history.replace({\r\n        search: `?num=${nextEventsNum}`,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {user?.role === 'admin' ? <AdminControlPanel /> : <ControlPanel />}\r\n      <div className='schedule-range'>\r\n        <ScheduleNav />\r\n        <NextEvents />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NextEventsPage;\r\n","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\SignInPage.tsx",["454"],"import React, { useState, FormEvent, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { signin, setError } from '../redux/actions';\r\nimport { RootState } from '../redux/store';\r\nimport { Message } from '../components';\r\n\r\nconst SignIn: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const { loading, error } = useSelector((state: RootState) => state.auth);\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      dispatch(setError(''));\r\n    }\r\n  }, []);\r\n\r\n  const onSubmitClick = (e: FormEvent) => {\r\n    e.preventDefault();\r\n    dispatch(signin({ email, password }));\r\n  };\r\n\r\n  const onSingUpBtnClick = () => {\r\n    history.push('/sign-up');\r\n  };\r\n\r\n  return (\r\n    <div className='sign-in'>\r\n      <h2 className='sign-in__title'>Войдите, чтобы продолжить</h2>\r\n      <form className='sign-in__form' onSubmit={onSubmitClick}>\r\n        {error && (\r\n          <Message className='sign-in__message' type='danger' msg={error} />\r\n        )}\r\n\r\n        <div className='sign-in__field'>\r\n          <label className='sign-in__label label' htmlFor='email'>\r\n            Email адрес\r\n          </label>\r\n          <input\r\n            className='sign-in__input input'\r\n            type='email'\r\n            name='email'\r\n            value={email}\r\n            // placeholder='адрес электронной почты'\r\n            onChange={(e) => setEmail(e.currentTarget.value)}\r\n          />\r\n        </div>\r\n        <div className='sign-in__field'>\r\n          <label className='sign-in__label label' htmlFor='password'>\r\n            Пароль\r\n          </label>\r\n          <input\r\n            className='sign-in__input input'\r\n            type='password'\r\n            name='password'\r\n            value={password}\r\n            // placeholder='ваш пароль'\r\n            onChange={(e) => setPassword(e.currentTarget.value)}\r\n            autoComplete='off'\r\n          />\r\n        </div>\r\n\r\n        <Link to='/forgot-password' className='sign-in__forgot-password link'>\r\n          Забыли пароль?\r\n        </Link>\r\n        <button className='sign-in__btn form-button' disabled={loading}>\r\n          {loading ? 'Loading...' : 'Вход'}\r\n        </button>\r\n\r\n        <button\r\n          onClick={onSingUpBtnClick}\r\n          className='sign-in__sign-up-btn form-button'\r\n        >\r\n          Зарегистрироваться\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Header\\UserBar.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Admin\\AdminEditPopup.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Admin\\AdminPreviewPopup.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\RangePage.tsx",["455"],"import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../redux/store';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport 'moment/locale/ru';\r\nimport { useQuery } from '../components/supports/hooks';\r\nimport {\r\n  ControlPanel,\r\n  ScheduleNav,\r\n  AdminControlPanel,\r\n  Range,\r\n} from '../components';\r\n\r\nconst RangePage: React.FC = () => {\r\n  const {\r\n    auth: { user },\r\n    range: { startOfRange, endOfRange },\r\n  } = useSelector((state: RootState) => state);\r\n  const history = useHistory();\r\n  const query = useQuery();\r\n  const startDate = query.get('start');\r\n  const endDate = query.get('end');\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !moment(startDate, 'YYYY-MM-DD', true).isValid() ||\r\n      !moment(endDate, 'YYYY-MM-DD', true).isValid()\r\n    ) {\r\n      history.replace({\r\n        search: `?start=${startOfRange.format(\r\n          'YYYY-MM-DD'\r\n        )}&end=${endOfRange.format('YYYY-MM-DD')}`,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {user?.role === 'admin' ? <AdminControlPanel /> : <ControlPanel />}\r\n      <div className='schedule-range'>\r\n        <ScheduleNav />\r\n        <Range />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RangePage;\r\n","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\services\\AdminService.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\MonthDropdown.tsx",["456"],"import React, { useState, useEffect } from 'react';\r\nimport { buildMonthsList } from './buildMonthsList';\r\n\r\ninterface MonthDropdownProps {\r\n  date: moment.Moment;\r\n  onChangeMonth: (month: moment.Moment) => void;\r\n  onSelectedMonthClick: () => void;\r\n}\r\n\r\nconst MonthDropdown: React.FC<MonthDropdownProps> = ({\r\n  date,\r\n  onChangeMonth,\r\n  onSelectedMonthClick,\r\n}) => {\r\n  const [activeMonth, setActiveMonth] = useState<moment.Moment>(date);\r\n  const [monthsList, setmonthsList] = useState<moment.Moment[]>([]);\r\n\r\n  useEffect(() => {\r\n    setmonthsList(buildMonthsList(date));\r\n  }, []);\r\n\r\n  const onMonthClick = (month: moment.Moment) => () => {\r\n    setActiveMonth(month);\r\n    onChangeMonth(month);\r\n    onSelectedMonthClick();\r\n  };\r\n\r\n  return (\r\n    <ul className='datepicker__month-dropdown'>\r\n      {monthsList.map((item: moment.Moment, idx: number) => {\r\n        const className = item.isSame(activeMonth, 'month')\r\n          ? 'datepicker__month-name datepicker__month-name_selected'\r\n          : 'datepicker__month-name';\r\n\r\n        return (\r\n          <li onClick={onMonthClick(item)} key={idx} className={className}>\r\n            {item.format('MMMM')}\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default React.memo(MonthDropdown);\r\n","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\Tooltip.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\NextDays.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Day\\Day.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\CreatePopup.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\Loaders\\DayLoader.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\Loaders\\EventListLoader.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\popups.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\NextDaysPage.tsx",["457"],"import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../redux/store';\r\nimport { useQuery } from '../components/supports/hooks';\r\nimport { useHistory } from 'react-router';\r\nimport {\r\n  ControlPanel,\r\n  ScheduleNav,\r\n  AdminControlPanel,\r\n  NextDays,\r\n} from '../components';\r\n\r\nconst NextDaysPage: React.FC = () => {\r\n  const {\r\n    auth: { user },\r\n    range: { selectValue, nextDaysNum },\r\n  } = useSelector((state: RootState) => state);\r\n\r\n  const history = useHistory();\r\n  const query = useQuery();\r\n  const num = query.get('num') || '';\r\n  const interval = query.get('interval') || '';\r\n  const numPattern = /^(?:\\d{1}|\\d{2})$/;\r\n  const intervalPattern = /суток|часов/;\r\n\r\n  useEffect(() => {\r\n    if (!numPattern.test(num) || !intervalPattern.test(interval)) {\r\n      history.replace({\r\n        search: `?num=${nextDaysNum}&interval=${selectValue}`,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {user?.role === 'admin' ? <AdminControlPanel /> : <ControlPanel />}\r\n      <div className='schedule-range'>\r\n        <ScheduleNav />\r\n        <NextDays />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NextDaysPage;\r\n","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\index.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Admin\\AdminEventList.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\NextEventsForm.tsx",["458"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setNextEventsNum } from '../../redux/actions';\r\nimport { useInput, useFocus, useQuery } from '../supports/hooks';\r\nimport { useHistory } from 'react-router';\r\nimport { RootState } from '../../redux/store';\r\n\r\nconst NextEvents: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    admin: { selectedUser },\r\n    auth: { user },\r\n  } = useSelector((state: RootState) => state);\r\n  const inputRef = useFocus();\r\n\r\n  const history = useHistory();\r\n  const query = useQuery();\r\n  const num = query.get('num') || '';\r\n  const pattern = /^(?:\\d{1}|\\d{2})$/;\r\n  const input = useInput(num, 2, pattern);\r\n  const uidQuery = user?.role === 'admin' ? `&uid=${selectedUser?.id}` : '';\r\n\r\n  useEffect(() => {\r\n    input.onChange(num);\r\n    dispatch(setNextEventsNum(num));\r\n  }, [num]);\r\n\r\n  const handleChange = (event: React.FormEvent<HTMLInputElement>) => {\r\n    const inputValue = event.currentTarget.value;\r\n\r\n    if (pattern.test(inputValue) || inputValue === '') {\r\n      input.onChange(inputValue);\r\n      dispatch(setNextEventsNum(inputValue));\r\n\r\n      history.push({\r\n        search: `?num=${inputValue}${uidQuery}`,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onAddBtnClick = (event: React.FormEvent<HTMLButtonElement>) => {\r\n    inputRef.current!.focus();\r\n    event.preventDefault();\r\n    const inputValue = (+input.value + 1).toString();\r\n\r\n    if (pattern.test(inputValue)) {\r\n      input.onChange(inputValue);\r\n      dispatch(setNextEventsNum(input.value));\r\n\r\n      history.push({\r\n        search: `?num=${inputValue}${uidQuery}`,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onSubBtnClick = (event: React.FormEvent<HTMLButtonElement>) => {\r\n    inputRef.current!.focus();\r\n    event.preventDefault();\r\n    const inputValue = (+input.value - 1).toString();\r\n\r\n    if (pattern.test(inputValue)) {\r\n      input.onChange(inputValue);\r\n      dispatch(setNextEventsNum(input.value));\r\n\r\n      history.push({\r\n        search: `?num=${inputValue}${uidQuery}`,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className='next-events'>\r\n      <div className='next-events__field'>\r\n        <label className='next-events__label' htmlFor=''>\r\n          Ближайшие\r\n        </label>\r\n        <div className='next-events__wrap'>\r\n          <div className='next-events__change-count'>\r\n            <button\r\n              onClick={onAddBtnClick}\r\n              className='next-events__btn-add'\r\n            ></button>\r\n            <input\r\n              value={input.value}\r\n              onChange={handleChange}\r\n              className='next-events__input'\r\n              type='text'\r\n              autoComplete='off'\r\n              maxLength={2}\r\n              ref={inputRef}\r\n            />\r\n            <button\r\n              onClick={onSubBtnClick}\r\n              className='next-events__btn-subtract'\r\n            ></button>\r\n          </div>\r\n          <span className='next-events__text'>событий</span>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NextEvents;\r\n","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\NextEvents.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\PreviewPopup.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\auth\\AdminRoute.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\utils\\messages.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\buildMonthsList.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\grid.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\SignUpPage.tsx",["459"],"import React, { useState, FormEvent, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../redux/store';\r\nimport { signup, setError } from '../redux/actions';\r\nimport { Link } from 'react-router-dom';\r\nimport { Message } from '../components';\r\n\r\nconst SignUp: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const { loading, error } = useSelector((state: RootState) => state.auth);\r\n  const [firstName, setFirstName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      dispatch(setError(''));\r\n    }\r\n  }, []);\r\n\r\n  const onSubmitClick = (e: FormEvent) => {\r\n    e.preventDefault();\r\n    dispatch(signup({ email, password, firstName }));\r\n  };\r\n\r\n  return (\r\n    <div className='sign-up'>\r\n      <h2 className='sign-up__title'>Регистрация</h2>\r\n      <form className='sign-up__form' onSubmit={onSubmitClick}>\r\n        {error && (\r\n          <Message className='sign-up__message' type='danger' msg={error} />\r\n        )}\r\n\r\n        <div className='sign-up__field'>\r\n          <label className='sign-up__label label' htmlFor='first-name'>\r\n            Имя\r\n          </label>\r\n          <input\r\n            className='sign-up__input input'\r\n            type='input'\r\n            name='first-name'\r\n            value={firstName}\r\n            // placeholder='ваше имя'\r\n            onChange={(e) => setFirstName(e.currentTarget.value)}\r\n            autoComplete='off'\r\n          />\r\n        </div>\r\n        <div className='sign-up__field'>\r\n          <label className='sign-up__label label' htmlFor='email'>\r\n            Email адрес\r\n          </label>\r\n          <input\r\n            className='sign-up__input input'\r\n            type='email'\r\n            name='email'\r\n            value={email}\r\n            // placeholder='адрес электронной почты'\r\n            onChange={(e) => setEmail(e.currentTarget.value)}\r\n          />\r\n        </div>\r\n        <div className='sign-up__field'>\r\n          <label className='sign-up__label label' htmlFor='password'>\r\n            Пароль\r\n          </label>\r\n          <input\r\n            className='sign-up__input input'\r\n            type='password'\r\n            name='password'\r\n            value={password}\r\n            // placeholder='не менее 7 символов'\r\n            onChange={(e) => setPassword(e.currentTarget.value)}\r\n            autoComplete='off'\r\n          />\r\n        </div>\r\n\r\n        <Link to='/sign-in' className='sign-up__already-registered link'>\r\n          Уже есть аккаунт?\r\n        </Link>\r\n\r\n        <button className='sign-up__btn form-button' disabled={loading}>\r\n          {loading ? 'Loading...' : 'Зарегистрироваться'}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Admin\\UserListBody.tsx",["460"],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ControlPanel\\ControlPanel.tsx",["461"],"import React, { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  setVisible,\r\n  setDate,\r\n  setALLPopupsUnvisible,\r\n  setRowDate,\r\n} from '../../redux/actions';\r\nimport { RootState } from '../../redux/store';\r\nimport { useClickOutside } from '../supports/hooks';\r\nimport {\r\n  GridNav,\r\n  DatePicker,\r\n  RangeBtn,\r\n  ControlPanelLoader,\r\n} from '../../components';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst ControlPanel: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    datePicker: { date, isVisible },\r\n    auth: { loading },\r\n  } = useSelector((state: RootState) => state);\r\n  const history = useHistory();\r\n  const selectedMonth: string = date.format('MMMM');\r\n  const selectedYear: string = date.format('YYYY');\r\n\r\n  const onSelectedDateClick = (): void => {\r\n    dispatch(setVisible(!isVisible));\r\n    dispatch(setALLPopupsUnvisible());\r\n    dispatch(setRowDate(null));\r\n  };\r\n\r\n  const setDatePickerDate = useCallback(\r\n    (date: moment.Moment) => {\r\n      history.push({\r\n        pathname: `/day`,\r\n        search: `?date=${date.format('YYYY-MM-DD')}`,\r\n      });\r\n\r\n      return dispatch(setDate(date));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const setGridDate = useCallback(\r\n    (date: moment.Moment) => {\r\n      return dispatch(setDate(date));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const setVisibleCallback = useCallback(\r\n    (value: boolean) => dispatch(setVisible(value)),\r\n    [dispatch]\r\n  );\r\n  const datePickerRef = useClickOutside(setVisibleCallback);\r\n\r\n  if (loading) {\r\n    return <ControlPanelLoader />;\r\n  }\r\n\r\n  return (\r\n    <div className='control-panel'>\r\n      <div ref={datePickerRef} className='control-panel__date-wrap'>\r\n        <div\r\n          onClick={onSelectedDateClick}\r\n          className='control-panel__selected-date'\r\n        >\r\n          <div className='control-panel__selected-month'>{selectedMonth}</div>\r\n          <div className='control-panel__selected-year'>{selectedYear}</div>\r\n        </div>\r\n        <div className='datepicker__wrap'>\r\n          {isVisible && (\r\n            <DatePicker\r\n              className='control-panel__datepicker'\r\n              date={date}\r\n              setDate={setDatePickerDate}\r\n              setVisible={setVisibleCallback}\r\n            ></DatePicker>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className='control-panel__btns-wrap'>\r\n        <GridNav setDate={setGridDate}></GridNav>\r\n        <RangeBtn></RangeBtn>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ControlPanel;\r\n","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\SelectedDate.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\EmptyDayList.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Popups\\CreateEditPopupView.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\ErrorIndicator.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\Loaders\\DayGridLoader.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\auth\\PrivateRoute.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\HomePage.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\Loaders\\UserListLoader.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\ScheduleRange\\RangeForm.tsx",["462"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/store';\r\nimport {\r\n  setStartOFRange,\r\n  setEndOFRange,\r\n  setLeftDatePickerVisible,\r\n  setRightDatePickerVisible,\r\n} from '../../redux/actions';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport 'moment/locale/ru';\r\nimport { RangeDatePicker } from '../../components';\r\nimport { useQuery } from '../supports/hooks';\r\n\r\nconst RangeForm: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    range: {\r\n      startOfRange,\r\n      endOfRange,\r\n      isLeftDatePickerVisible,\r\n      isRightDatePickerVisible,\r\n    },\r\n  } = useSelector((state: RootState) => state);\r\n\r\n  const history = useHistory();\r\n  const query = useQuery();\r\n  const startDate = query.get('start');\r\n  const endDate = query.get('end');\r\n\r\n  useEffect(() => {\r\n    dispatch(setStartOFRange(moment(startDate, 'YYYY-MM-DD')));\r\n    dispatch(setEndOFRange(moment(endDate, 'YYYY-MM-DD')));\r\n  }, [startDate, endDate]);\r\n\r\n  const setStart = (value: moment.Moment) => {\r\n    history.push({\r\n      search: `?start=${value.format('YYYY-MM-DD')}&end=${endOfRange.format(\r\n        'YYYY-MM-DD'\r\n      )}`,\r\n    });\r\n\r\n    return setStartOFRange(value);\r\n  };\r\n\r\n  const setEnd = (value: moment.Moment) => {\r\n    history.push({\r\n      search: `?start=${startOfRange.format('YYYY-MM-DD')}&end=${value.format(\r\n        'YYYY-MM-DD'\r\n      )}`,\r\n    });\r\n\r\n    return setEndOFRange(value);\r\n  };\r\n\r\n  return (\r\n    <div className='schedule-range__range-wrap'>\r\n      <div className='schedule-range__date-block'>\r\n        <RangeDatePicker\r\n          date={startOfRange}\r\n          isVisible={isLeftDatePickerVisible}\r\n          setVisible={setLeftDatePickerVisible}\r\n          setDateOfRange={setStart}\r\n          position={'start'}\r\n        ></RangeDatePicker>\r\n\r\n        <span className='schedule-range__dash'>一</span>\r\n\r\n        <RangeDatePicker\r\n          date={endOfRange}\r\n          isVisible={isRightDatePickerVisible}\r\n          setVisible={setRightDatePickerVisible}\r\n          setDateOfRange={setEnd}\r\n          position={'end'}\r\n        ></RangeDatePicker>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RangeForm;\r\n","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\index.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\supports\\Loaders\\AdminPageLoader.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\FormElements\\RadioBtn.tsx",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\services\\firebase\\config.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\actions\\popups.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\pages\\DayPage.tsx",["463"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../redux/store';\r\nimport { setDate } from '../redux/actions';\r\nimport { useQuery } from '../components/supports/hooks';\r\nimport moment from 'moment';\r\nimport 'moment/locale/ru';\r\nimport { Message, ControlPanel, Day } from '../components';\r\nimport { useHistory, Redirect } from 'react-router-dom';\r\n\r\nconst DayPage: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    auth: { needVerification, user },\r\n    datePicker: { date },\r\n  } = useSelector((state: RootState) => state);\r\n  const history = useHistory();\r\n  const query = useQuery();\r\n  const showDate = query.get('date') || '';\r\n\r\n  useEffect(() => {\r\n    if (!moment(showDate, 'YYYY-MM-DD', true).isValid()) {\r\n      history.replace({\r\n        search: `?date=${date.format('YYYY-MM-DD')}`,\r\n      });\r\n    } else {\r\n      dispatch(setDate(moment(showDate, 'YYYY-MM-DD')));\r\n    }\r\n  }, [showDate]);\r\n\r\n  if (user?.role === 'admin') {\r\n    return <Redirect to='/admin' />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {needVerification && (\r\n        <Message\r\n          className='main__msg'\r\n          type='success'\r\n          msg='Please verify your email address.'\r\n        />\r\n      )}\r\n      <ControlPanel />\r\n      <Day />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DayPage;\r\n","C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\DatePicker\\buildYearsList.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\redux\\reducers\\range.ts",[],"C:\\Users\\TimmThaler\\Desktop\\GP Solutions\\scheduler\\src\\components\\Admin\\AdminUsersFilter.tsx",[],{"ruleId":"464","severity":1,"message":"465","line":19,"column":6,"nodeType":"466","endLine":19,"endColumn":8,"suggestions":"467"},{"ruleId":"468","replacedBy":"469"},{"ruleId":"470","replacedBy":"471"},{"ruleId":"464","severity":1,"message":"472","line":32,"column":6,"nodeType":"466","endLine":32,"endColumn":35,"suggestions":"473"},{"ruleId":"464","severity":1,"message":"465","line":69,"column":6,"nodeType":"466","endLine":69,"endColumn":27,"suggestions":"474"},{"ruleId":"468","replacedBy":"475"},{"ruleId":"470","replacedBy":"476"},{"ruleId":"468","replacedBy":"477"},{"ruleId":"470","replacedBy":"478"},{"ruleId":"464","severity":1,"message":"479","line":28,"column":6,"nodeType":"466","endLine":28,"endColumn":8,"suggestions":"480"},{"ruleId":"468","replacedBy":"481"},{"ruleId":"470","replacedBy":"482"},{"ruleId":"464","severity":1,"message":"483","line":30,"column":6,"nodeType":"466","endLine":30,"endColumn":21,"suggestions":"484"},{"ruleId":"468","replacedBy":"485"},{"ruleId":"470","replacedBy":"486"},{"ruleId":"468","replacedBy":"487"},{"ruleId":"470","replacedBy":"488"},{"ruleId":"468","replacedBy":"489"},{"ruleId":"470","replacedBy":"490"},{"ruleId":"468","replacedBy":"491"},{"ruleId":"470","replacedBy":"492"},{"ruleId":"464","severity":1,"message":"493","line":31,"column":6,"nodeType":"466","endLine":31,"endColumn":8,"suggestions":"494"},{"ruleId":"495","severity":1,"message":"496","line":1,"column":10,"nodeType":"497","messageId":"498","endLine":1,"endColumn":14},{"ruleId":"464","severity":1,"message":"499","line":25,"column":6,"nodeType":"466","endLine":25,"endColumn":12,"suggestions":"500"},{"ruleId":"464","severity":1,"message":"501","line":38,"column":6,"nodeType":"466","endLine":38,"endColumn":13,"suggestions":"502"},{"ruleId":"464","severity":1,"message":"503","line":22,"column":6,"nodeType":"466","endLine":22,"endColumn":8,"suggestions":"504"},{"ruleId":"468","replacedBy":"505"},{"ruleId":"470","replacedBy":"506"},{"ruleId":"464","severity":1,"message":"507","line":30,"column":6,"nodeType":"466","endLine":30,"endColumn":8,"suggestions":"508"},{"ruleId":"464","severity":1,"message":"509","line":19,"column":6,"nodeType":"466","endLine":19,"endColumn":8,"suggestions":"510"},{"ruleId":"464","severity":1,"message":"511","line":36,"column":6,"nodeType":"466","endLine":36,"endColumn":8,"suggestions":"512"},{"ruleId":"464","severity":1,"message":"513","line":20,"column":6,"nodeType":"466","endLine":20,"endColumn":8,"suggestions":"514"},{"ruleId":"464","severity":1,"message":"515","line":32,"column":6,"nodeType":"466","endLine":32,"endColumn":8,"suggestions":"516"},{"ruleId":"464","severity":1,"message":"483","line":26,"column":6,"nodeType":"466","endLine":26,"endColumn":11,"suggestions":"517"},{"ruleId":"464","severity":1,"message":"509","line":19,"column":6,"nodeType":"466","endLine":19,"endColumn":8,"suggestions":"518"},{"ruleId":"464","severity":1,"message":"465","line":17,"column":6,"nodeType":"466","endLine":17,"endColumn":8,"suggestions":"519"},{"ruleId":"464","severity":1,"message":"520","line":44,"column":5,"nodeType":"466","endLine":44,"endColumn":15,"suggestions":"521"},{"ruleId":"464","severity":1,"message":"465","line":35,"column":6,"nodeType":"466","endLine":35,"endColumn":26,"suggestions":"522"},{"ruleId":"464","severity":1,"message":"523","line":29,"column":6,"nodeType":"466","endLine":29,"endColumn":16,"suggestions":"524"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["525"],"no-native-reassign",["526"],"no-negated-in-lhs",["527"],"React Hook useEffect has missing dependencies: 'dispatch', 'history', 'order', and 'sortBy'. Either include them or remove the dependency array.",["528"],["529"],["526"],["527"],["526"],["527"],"React Hook useEffect has missing dependencies: 'date' and 'yearsList'. Either include them or remove the dependency array. You can also do a functional update 'setYearsList(y => ...)' if you only need 'yearsList' in the 'setYearsList' call.",["530"],["526"],["527"],"React Hook useEffect has missing dependencies: 'dispatch' and 'input'. Either include them or remove the dependency array.",["531"],["526"],["527"],["526"],["527"],["526"],["527"],["526"],["527"],"React Hook useEffect has missing dependencies: 'handleClickOutside' and 'handleHideDropdown'. Either include them or remove the dependency array.",["532"],"@typescript-eslint/no-unused-vars","'push' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'dispatch' and 'uid'. Either include them or remove the dependency array.",["533"],"React Hook useEffect has missing dependencies: 'dispatch', 'history', 'uid', and 'user?.role'. Either include them or remove the dependency array.",["534"],"React Hook useEffect has missing dependencies: 'dispatch', 'error', and 'success'. Either include them or remove the dependency array.",["535"],["526"],["527"],"React Hook useEffect has missing dependencies: 'history', 'nextEventsNum', 'num', and 'pattern'. Either include them or remove the dependency array.",["536"],"React Hook useEffect has missing dependencies: 'dispatch' and 'error'. Either include them or remove the dependency array.",["537"],"React Hook useEffect has missing dependencies: 'endDate', 'endOfRange', 'history', 'startDate', and 'startOfRange'. Either include them or remove the dependency array.",["538"],"React Hook useEffect has a missing dependency: 'date'. Either include it or remove the dependency array. If 'setmonthsList' needs the current value of 'date', you can also switch to useReducer instead of useState and read 'date' in the reducer.",["539"],"React Hook useEffect has missing dependencies: 'history', 'interval', 'intervalPattern', 'nextDaysNum', 'num', 'numPattern', and 'selectValue'. Either include them or remove the dependency array.",["540"],["541"],["542"],["543"],"React Hook useCallback has a missing dependency: 'history'. Either include it or remove the dependency array.",["544"],["545"],"React Hook useEffect has missing dependencies: 'date', 'dispatch', and 'history'. Either include them or remove the dependency array.",["546"],{"desc":"547","fix":"548"},"no-global-assign","no-unsafe-negation",{"desc":"549","fix":"550"},{"desc":"551","fix":"552"},{"desc":"553","fix":"554"},{"desc":"555","fix":"556"},{"desc":"557","fix":"558"},{"desc":"559","fix":"560"},{"desc":"561","fix":"562"},{"desc":"563","fix":"564"},{"desc":"565","fix":"566"},{"desc":"567","fix":"568"},{"desc":"569","fix":"570"},{"desc":"571","fix":"572"},{"desc":"573","fix":"574"},{"desc":"575","fix":"576"},{"desc":"567","fix":"577"},{"desc":"547","fix":"578"},{"desc":"579","fix":"580"},{"desc":"581","fix":"582"},{"desc":"583","fix":"584"},"Update the dependencies array to be: [dispatch]",{"range":"585","text":"586"},"Update the dependencies array to be: [dispatch, history, order, querySortBy, querySortOrder, sortBy]",{"range":"587","text":"588"},"Update the dependencies array to be: [user, sortBy, order, dispatch]",{"range":"589","text":"590"},"Update the dependencies array to be: [date, yearsList]",{"range":"591","text":"592"},"Update the dependencies array to be: [num, interval, input, dispatch]",{"range":"593","text":"594"},"Update the dependencies array to be: [handleClickOutside, handleHideDropdown]",{"range":"595","text":"596"},"Update the dependencies array to be: [dispatch, uid, user]",{"range":"597","text":"598"},"Update the dependencies array to be: [dispatch, history, uid, user?.role, users]",{"range":"599","text":"600"},"Update the dependencies array to be: [dispatch, error, success]",{"range":"601","text":"602"},"Update the dependencies array to be: [history, nextEventsNum, num, pattern]",{"range":"603","text":"604"},"Update the dependencies array to be: [dispatch, error]",{"range":"605","text":"606"},"Update the dependencies array to be: [endDate, endOfRange, history, startDate, startOfRange]",{"range":"607","text":"608"},"Update the dependencies array to be: [date]",{"range":"609","text":"610"},"Update the dependencies array to be: [history, interval, intervalPattern, nextDaysNum, num, numPattern, selectValue]",{"range":"611","text":"612"},"Update the dependencies array to be: [dispatch, input, num]",{"range":"613","text":"614"},{"range":"615","text":"606"},{"range":"616","text":"586"},"Update the dependencies array to be: [dispatch, history]",{"range":"617","text":"618"},"Update the dependencies array to be: [startDate, endDate, dispatch]",{"range":"619","text":"620"},"Update the dependencies array to be: [date, dispatch, history, showDate]",{"range":"621","text":"622"},[712,714],"[dispatch]",[1068,1097],"[dispatch, history, order, querySortBy, querySortOrder, sortBy]",[1518,1539],"[user, sortBy, order, dispatch]",[775,777],"[date, yearsList]",[1083,1098],"[num, interval, input, dispatch]",[1018,1020],"[handleClickOutside, handleHideDropdown]",[889,895],"[dispatch, uid, user]",[1186,1193],"[dispatch, history, uid, user?.role, users]",[654,656],"[dispatch, error, success]",[782,784],"[history, nextEventsNum, num, pattern]",[673,675],"[dispatch, error]",[1026,1028],"[endDate, endOfRange, history, startDate, startOfRange]",[587,589],"[date]",[943,945],"[history, interval, intervalPattern, nextDaysNum, num, numPattern, selectValue]",[891,896],"[dispatch, input, num]",[679,681],[666,668],[1206,1216],"[dispatch, history]",[1049,1069],"[startDate, endDate, dispatch]",[988,998],"[date, dispatch, history, showDate]"]